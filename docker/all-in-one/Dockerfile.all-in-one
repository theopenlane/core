FROM golang:1.24.2 as builder

WORKDIR /go/src/app
COPY . .

RUN go mod download

RUN CGO_ENABLED=0 GOOS=linux go build -o /go/bin/core -a -buildvcs=false -tags osusergo .

FROM cgr.dev/chainguard/bash:latest

WORKDIR /home/nonroot

# Copy the binary built above
COPY --from=builder /go/bin/core /bin/core

# Copy the dbx binary
COPY --from=ghcr.io/theopenlane/dbx:145-c77867be /bin/dbx /bin/dbx

# Copy the riverboat binary
COPY --from=ghcr.io/theopenlane/riverboat:amd64-86-3eaa899d /bin/riverboat /bin/riverboat

# Copy redis binary
COPY --from=redis:7.4.2 /usr/local/bin/redis-server /bin/redis-server

# Copy FGA binary
COPY --from=openfga/openfga:v1.8.9 /openfga /bin/openfga

# Copy default model into image
COPY fga/model/model.fga fga/model/model.fga

COPY --from=ghcr.io/grpc-ecosystem/grpc-health-probe:v0.4.37 /ko-app/grpc-health-probe /bin/grpc_health_probe

# Copy entrypoint and env files
COPY docker/all-in-one/docker_entrypoint.sh /bin/docker_entrypoint.sh

# Copy config
COPY ./config/config-aio.example.yaml ./config/.config.yaml

RUN chmod +x /bin/docker_entrypoint.sh

USER 65532:65532

# Expose FGA ports
EXPOSE 8080
EXPOSE 8081
EXPOSE 2112

#Expose dbx ports
EXPOSE 1337

# Expose redis ports
EXPOSE 6379

# Expose API port
EXPOSE 17608

ENTRYPOINT ["docker_entrypoint.sh"]
