directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type APIToken implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name associated with the token
  """
  name: String!
  token: String!
  """
  when the token expires
  """
  expiresAt: Time
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  owner: Organization
}
"""
A connection to a list of items.
"""
type APITokenConnection {
  """
  A list of edges.
  """
  edges: [APITokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type APITokenEdge {
  """
  The item at the end of the edge.
  """
  node: APIToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
APITokenWhereInput is used for filtering APIToken objects.
Input was generated by ent.
"""
input APITokenWhereInput {
  not: APITokenWhereInput
  and: [APITokenWhereInput!]
  or: [APITokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  last_used_at field predicates
  """
  lastUsedAt: Time
  lastUsedAtNEQ: Time
  lastUsedAtIn: [Time!]
  lastUsedAtNotIn: [Time!]
  lastUsedAtGT: Time
  lastUsedAtGTE: Time
  lastUsedAtLT: Time
  lastUsedAtLTE: Time
  lastUsedAtIsNil: Boolean
  lastUsedAtNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
type ActionPlan implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the action plan
  """
  name: String!
  """
  description of the action plan
  """
  description: String
  """
  status of the action plan
  """
  status: String
  """
  due date of the action plan
  """
  dueDate: Time
  """
  priority of the action plan
  """
  priority: String
  """
  source of the action plan
  """
  source: String
  """
  json data including details of the action plan
  """
  details: Map
  standard: [Standard!]
  risk: [Risk!]
  control: [Control!]
  user: [User!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type ActionPlanConnection {
  """
  A list of edges.
  """
  edges: [ActionPlanEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ActionPlanEdge {
  """
  The item at the end of the edge.
  """
  node: ActionPlan
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ActionPlanHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ActionPlanHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the action plan
  """
  name: String!
  """
  description of the action plan
  """
  description: String
  """
  status of the action plan
  """
  status: String
  """
  due date of the action plan
  """
  dueDate: Time
  """
  priority of the action plan
  """
  priority: String
  """
  source of the action plan
  """
  source: String
  """
  json data including details of the action plan
  """
  details: Map
}
"""
A connection to a list of items.
"""
type ActionPlanHistoryConnection {
  """
  A list of edges.
  """
  edges: [ActionPlanHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ActionPlanHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ActionPlanHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ActionPlanHistoryOpType is enum for the field operation
"""
enum ActionPlanHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ActionPlanHistoryWhereInput is used for filtering ActionPlanHistory objects.
Input was generated by ent.
"""
input ActionPlanHistoryWhereInput {
  not: ActionPlanHistoryWhereInput
  and: [ActionPlanHistoryWhereInput!]
  or: [ActionPlanHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ActionPlanHistoryOpType
  operationNEQ: ActionPlanHistoryOpType
  operationIn: [ActionPlanHistoryOpType!]
  operationNotIn: [ActionPlanHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  due_date field predicates
  """
  dueDate: Time
  dueDateNEQ: Time
  dueDateIn: [Time!]
  dueDateNotIn: [Time!]
  dueDateGT: Time
  dueDateGTE: Time
  dueDateLT: Time
  dueDateLTE: Time
  dueDateIsNil: Boolean
  dueDateNotNil: Boolean
  """
  priority field predicates
  """
  priority: String
  priorityNEQ: String
  priorityIn: [String!]
  priorityNotIn: [String!]
  priorityGT: String
  priorityGTE: String
  priorityLT: String
  priorityLTE: String
  priorityContains: String
  priorityHasPrefix: String
  priorityHasSuffix: String
  priorityIsNil: Boolean
  priorityNotNil: Boolean
  priorityEqualFold: String
  priorityContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
}
"""
ActionPlanWhereInput is used for filtering ActionPlan objects.
Input was generated by ent.
"""
input ActionPlanWhereInput {
  not: ActionPlanWhereInput
  and: [ActionPlanWhereInput!]
  or: [ActionPlanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  due_date field predicates
  """
  dueDate: Time
  dueDateNEQ: Time
  dueDateIn: [Time!]
  dueDateNotIn: [Time!]
  dueDateGT: Time
  dueDateGTE: Time
  dueDateLT: Time
  dueDateLTE: Time
  dueDateIsNil: Boolean
  dueDateNotNil: Boolean
  """
  priority field predicates
  """
  priority: String
  priorityNEQ: String
  priorityIn: [String!]
  priorityNotIn: [String!]
  priorityGT: String
  priorityGTE: String
  priorityLT: String
  priorityLTE: String
  priorityContains: String
  priorityHasPrefix: String
  priorityHasSuffix: String
  priorityIsNil: Boolean
  priorityNotNil: Boolean
  priorityEqualFold: String
  priorityContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  standard edge predicates
  """
  hasStandard: Boolean
  hasStandardWith: [StandardWhereInput!]
  """
  risk edge predicates
  """
  hasRisk: Boolean
  hasRiskWith: [RiskWhereInput!]
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
type Contact implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the full name of the contact
  """
  fullName: String!
  """
  the title of the contact
  """
  title: String
  """
  the company of the contact
  """
  company: String
  """
  the email of the contact
  """
  email: String
  """
  the phone number of the contact
  """
  phoneNumber: String
  """
  the address of the contact
  """
  address: String
  """
  status of the contact
  """
  status: ContactUserStatus!
  owner: Organization
  entities: [Entity!]
  files: [File!]
}
"""
A connection to a list of items.
"""
type ContactConnection {
  """
  A list of edges.
  """
  edges: [ContactEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ContactEdge {
  """
  The item at the end of the edge.
  """
  node: Contact
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ContactHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ContactHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the full name of the contact
  """
  fullName: String!
  """
  the title of the contact
  """
  title: String
  """
  the company of the contact
  """
  company: String
  """
  the email of the contact
  """
  email: String
  """
  the phone number of the contact
  """
  phoneNumber: String
  """
  the address of the contact
  """
  address: String
  """
  status of the contact
  """
  status: ContactHistoryUserStatus!
}
"""
A connection to a list of items.
"""
type ContactHistoryConnection {
  """
  A list of edges.
  """
  edges: [ContactHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ContactHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ContactHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ContactHistoryOpType is enum for the field operation
"""
enum ContactHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ContactHistoryUserStatus is enum for the field status
"""
enum ContactHistoryUserStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
  ONBOARDING
}
"""
ContactHistoryWhereInput is used for filtering ContactHistory objects.
Input was generated by ent.
"""
input ContactHistoryWhereInput {
  not: ContactHistoryWhereInput
  and: [ContactHistoryWhereInput!]
  or: [ContactHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ContactHistoryOpType
  operationNEQ: ContactHistoryOpType
  operationIn: [ContactHistoryOpType!]
  operationNotIn: [ContactHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  full_name field predicates
  """
  fullName: String
  fullNameNEQ: String
  fullNameIn: [String!]
  fullNameNotIn: [String!]
  fullNameGT: String
  fullNameGTE: String
  fullNameLT: String
  fullNameLTE: String
  fullNameContains: String
  fullNameHasPrefix: String
  fullNameHasSuffix: String
  fullNameEqualFold: String
  fullNameContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIsNil: Boolean
  titleNotNil: Boolean
  titleEqualFold: String
  titleContainsFold: String
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberIsNil: Boolean
  phoneNumberNotNil: Boolean
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  status field predicates
  """
  status: ContactHistoryUserStatus
  statusNEQ: ContactHistoryUserStatus
  statusIn: [ContactHistoryUserStatus!]
  statusNotIn: [ContactHistoryUserStatus!]
}
"""
ContactUserStatus is enum for the field status
"""
enum ContactUserStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
  ONBOARDING
}
"""
ContactWhereInput is used for filtering Contact objects.
Input was generated by ent.
"""
input ContactWhereInput {
  not: ContactWhereInput
  and: [ContactWhereInput!]
  or: [ContactWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  full_name field predicates
  """
  fullName: String
  fullNameNEQ: String
  fullNameIn: [String!]
  fullNameNotIn: [String!]
  fullNameGT: String
  fullNameGTE: String
  fullNameLT: String
  fullNameLTE: String
  fullNameContains: String
  fullNameHasPrefix: String
  fullNameHasSuffix: String
  fullNameEqualFold: String
  fullNameContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleIsNil: Boolean
  titleNotNil: Boolean
  titleEqualFold: String
  titleContainsFold: String
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailIsNil: Boolean
  emailNotNil: Boolean
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberIsNil: Boolean
  phoneNumberNotNil: Boolean
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  address field predicates
  """
  address: String
  addressNEQ: String
  addressIn: [String!]
  addressNotIn: [String!]
  addressGT: String
  addressGTE: String
  addressLT: String
  addressLTE: String
  addressContains: String
  addressHasPrefix: String
  addressHasSuffix: String
  addressIsNil: Boolean
  addressNotNil: Boolean
  addressEqualFold: String
  addressContainsFold: String
  """
  status field predicates
  """
  status: ContactUserStatus
  statusNEQ: ContactUserStatus
  statusIn: [ContactUserStatus!]
  statusNotIn: [ContactUserStatus!]
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  entities edge predicates
  """
  hasEntities: Boolean
  hasEntitiesWith: [EntityWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
}
type Control implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control
  """
  name: String!
  """
  description of the control
  """
  description: String
  """
  status of the control
  """
  status: String
  """
  type of the control
  """
  controlType: String
  """
  version of the control
  """
  version: String
  """
  control number or identifier
  """
  controlNumber: String
  """
  family associated with the control
  """
  family: String
  """
  class associated with the control
  """
  class: String
  """
  source of the control, e.g. framework, template, custom, etc.
  """
  source: String
  """
  which control objectives are satisfied by the control
  """
  satisfies: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control
  """
  details: Map
  procedures: [Procedure!]
  subcontrols: [Subcontrol!]
  controlobjectives: [ControlObjective!]
  standard: [Standard!]
  narratives: [Narrative!]
  risks: [Risk!]
  actionplans: [ActionPlan!]
  tasks: [Task!]
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type ControlConnection {
  """
  A list of edges.
  """
  edges: [ControlEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ControlEdge {
  """
  The item at the end of the edge.
  """
  node: Control
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ControlHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ControlHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control
  """
  name: String!
  """
  description of the control
  """
  description: String
  """
  status of the control
  """
  status: String
  """
  type of the control
  """
  controlType: String
  """
  version of the control
  """
  version: String
  """
  control number or identifier
  """
  controlNumber: String
  """
  family associated with the control
  """
  family: String
  """
  class associated with the control
  """
  class: String
  """
  source of the control, e.g. framework, template, custom, etc.
  """
  source: String
  """
  which control objectives are satisfied by the control
  """
  satisfies: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control
  """
  details: Map
}
"""
A connection to a list of items.
"""
type ControlHistoryConnection {
  """
  A list of edges.
  """
  edges: [ControlHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ControlHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ControlHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ControlHistoryOpType is enum for the field operation
"""
enum ControlHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ControlHistoryWhereInput is used for filtering ControlHistory objects.
Input was generated by ent.
"""
input ControlHistoryWhereInput {
  not: ControlHistoryWhereInput
  and: [ControlHistoryWhereInput!]
  or: [ControlHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ControlHistoryOpType
  operationNEQ: ControlHistoryOpType
  operationIn: [ControlHistoryOpType!]
  operationNotIn: [ControlHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  control_type field predicates
  """
  controlType: String
  controlTypeNEQ: String
  controlTypeIn: [String!]
  controlTypeNotIn: [String!]
  controlTypeGT: String
  controlTypeGTE: String
  controlTypeLT: String
  controlTypeLTE: String
  controlTypeContains: String
  controlTypeHasPrefix: String
  controlTypeHasSuffix: String
  controlTypeIsNil: Boolean
  controlTypeNotNil: Boolean
  controlTypeEqualFold: String
  controlTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  control_number field predicates
  """
  controlNumber: String
  controlNumberNEQ: String
  controlNumberIn: [String!]
  controlNumberNotIn: [String!]
  controlNumberGT: String
  controlNumberGTE: String
  controlNumberLT: String
  controlNumberLTE: String
  controlNumberContains: String
  controlNumberHasPrefix: String
  controlNumberHasSuffix: String
  controlNumberIsNil: Boolean
  controlNumberNotNil: Boolean
  controlNumberEqualFold: String
  controlNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
}
type ControlObjective implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control objective
  """
  name: String!
  """
  description of the control objective
  """
  description: String
  """
  status of the control objective
  """
  status: String
  """
  type of the control objective
  """
  controlObjectiveType: String
  """
  version of the control objective
  """
  version: String
  """
  number of the control objective
  """
  controlNumber: String
  """
  family of the control objective
  """
  family: String
  """
  class associated with the control objective
  """
  class: String
  """
  source of the control objective, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control objective
  """
  details: Map
  policy: [InternalPolicy!]
  controls: [Control!]
  procedures: [Procedure!]
  risks: [Risk!]
  subcontrols: [Subcontrol!]
  standard: [Standard!]
  narratives: [Narrative!]
  tasks: [Task!]
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type ControlObjectiveConnection {
  """
  A list of edges.
  """
  edges: [ControlObjectiveEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ControlObjectiveEdge {
  """
  The item at the end of the edge.
  """
  node: ControlObjective
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ControlObjectiveHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ControlObjectiveHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control objective
  """
  name: String!
  """
  description of the control objective
  """
  description: String
  """
  status of the control objective
  """
  status: String
  """
  type of the control objective
  """
  controlObjectiveType: String
  """
  version of the control objective
  """
  version: String
  """
  number of the control objective
  """
  controlNumber: String
  """
  family of the control objective
  """
  family: String
  """
  class associated with the control objective
  """
  class: String
  """
  source of the control objective, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control objective
  """
  details: Map
}
"""
A connection to a list of items.
"""
type ControlObjectiveHistoryConnection {
  """
  A list of edges.
  """
  edges: [ControlObjectiveHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ControlObjectiveHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ControlObjectiveHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ControlObjectiveHistoryOpType is enum for the field operation
"""
enum ControlObjectiveHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ControlObjectiveHistoryWhereInput is used for filtering ControlObjectiveHistory objects.
Input was generated by ent.
"""
input ControlObjectiveHistoryWhereInput {
  not: ControlObjectiveHistoryWhereInput
  and: [ControlObjectiveHistoryWhereInput!]
  or: [ControlObjectiveHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ControlObjectiveHistoryOpType
  operationNEQ: ControlObjectiveHistoryOpType
  operationIn: [ControlObjectiveHistoryOpType!]
  operationNotIn: [ControlObjectiveHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  control_objective_type field predicates
  """
  controlObjectiveType: String
  controlObjectiveTypeNEQ: String
  controlObjectiveTypeIn: [String!]
  controlObjectiveTypeNotIn: [String!]
  controlObjectiveTypeGT: String
  controlObjectiveTypeGTE: String
  controlObjectiveTypeLT: String
  controlObjectiveTypeLTE: String
  controlObjectiveTypeContains: String
  controlObjectiveTypeHasPrefix: String
  controlObjectiveTypeHasSuffix: String
  controlObjectiveTypeIsNil: Boolean
  controlObjectiveTypeNotNil: Boolean
  controlObjectiveTypeEqualFold: String
  controlObjectiveTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  control_number field predicates
  """
  controlNumber: String
  controlNumberNEQ: String
  controlNumberIn: [String!]
  controlNumberNotIn: [String!]
  controlNumberGT: String
  controlNumberGTE: String
  controlNumberLT: String
  controlNumberLTE: String
  controlNumberContains: String
  controlNumberHasPrefix: String
  controlNumberHasSuffix: String
  controlNumberIsNil: Boolean
  controlNumberNotNil: Boolean
  controlNumberEqualFold: String
  controlNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
}
"""
ControlObjectiveWhereInput is used for filtering ControlObjective objects.
Input was generated by ent.
"""
input ControlObjectiveWhereInput {
  not: ControlObjectiveWhereInput
  and: [ControlObjectiveWhereInput!]
  or: [ControlObjectiveWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  control_objective_type field predicates
  """
  controlObjectiveType: String
  controlObjectiveTypeNEQ: String
  controlObjectiveTypeIn: [String!]
  controlObjectiveTypeNotIn: [String!]
  controlObjectiveTypeGT: String
  controlObjectiveTypeGTE: String
  controlObjectiveTypeLT: String
  controlObjectiveTypeLTE: String
  controlObjectiveTypeContains: String
  controlObjectiveTypeHasPrefix: String
  controlObjectiveTypeHasSuffix: String
  controlObjectiveTypeIsNil: Boolean
  controlObjectiveTypeNotNil: Boolean
  controlObjectiveTypeEqualFold: String
  controlObjectiveTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  control_number field predicates
  """
  controlNumber: String
  controlNumberNEQ: String
  controlNumberIn: [String!]
  controlNumberNotIn: [String!]
  controlNumberGT: String
  controlNumberGTE: String
  controlNumberLT: String
  controlNumberLTE: String
  controlNumberContains: String
  controlNumberHasPrefix: String
  controlNumberHasSuffix: String
  controlNumberIsNil: Boolean
  controlNumberNotNil: Boolean
  controlNumberEqualFold: String
  controlNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
  """
  policy edge predicates
  """
  hasPolicy: Boolean
  hasPolicyWith: [InternalPolicyWhereInput!]
  """
  controls edge predicates
  """
  hasControls: Boolean
  hasControlsWith: [ControlWhereInput!]
  """
  procedures edge predicates
  """
  hasProcedures: Boolean
  hasProceduresWith: [ProcedureWhereInput!]
  """
  risks edge predicates
  """
  hasRisks: Boolean
  hasRisksWith: [RiskWhereInput!]
  """
  subcontrols edge predicates
  """
  hasSubcontrols: Boolean
  hasSubcontrolsWith: [SubcontrolWhereInput!]
  """
  standard edge predicates
  """
  hasStandard: Boolean
  hasStandardWith: [StandardWhereInput!]
  """
  narratives edge predicates
  """
  hasNarratives: Boolean
  hasNarrativesWith: [NarrativeWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
"""
ControlWhereInput is used for filtering Control objects.
Input was generated by ent.
"""
input ControlWhereInput {
  not: ControlWhereInput
  and: [ControlWhereInput!]
  or: [ControlWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  control_type field predicates
  """
  controlType: String
  controlTypeNEQ: String
  controlTypeIn: [String!]
  controlTypeNotIn: [String!]
  controlTypeGT: String
  controlTypeGTE: String
  controlTypeLT: String
  controlTypeLTE: String
  controlTypeContains: String
  controlTypeHasPrefix: String
  controlTypeHasSuffix: String
  controlTypeIsNil: Boolean
  controlTypeNotNil: Boolean
  controlTypeEqualFold: String
  controlTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  control_number field predicates
  """
  controlNumber: String
  controlNumberNEQ: String
  controlNumberIn: [String!]
  controlNumberNotIn: [String!]
  controlNumberGT: String
  controlNumberGTE: String
  controlNumberLT: String
  controlNumberLTE: String
  controlNumberContains: String
  controlNumberHasPrefix: String
  controlNumberHasSuffix: String
  controlNumberIsNil: Boolean
  controlNumberNotNil: Boolean
  controlNumberEqualFold: String
  controlNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
  """
  procedures edge predicates
  """
  hasProcedures: Boolean
  hasProceduresWith: [ProcedureWhereInput!]
  """
  subcontrols edge predicates
  """
  hasSubcontrols: Boolean
  hasSubcontrolsWith: [SubcontrolWhereInput!]
  """
  controlobjectives edge predicates
  """
  hasControlobjectives: Boolean
  hasControlobjectivesWith: [ControlObjectiveWhereInput!]
  """
  standard edge predicates
  """
  hasStandard: Boolean
  hasStandardWith: [StandardWhereInput!]
  """
  narratives edge predicates
  """
  hasNarratives: Boolean
  hasNarrativesWith: [NarrativeWhereInput!]
  """
  risks edge predicates
  """
  hasRisks: Boolean
  hasRisksWith: [RiskWhereInput!]
  """
  actionplans edge predicates
  """
  hasActionplans: Boolean
  hasActionplansWith: [ActionPlanWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
"""
CreateAPITokenInput is used for create APIToken object.
Input was generated by ent.
"""
input CreateAPITokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name associated with the token
  """
  name: String!
  """
  when the token expires
  """
  expiresAt: Time
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  ownerID: ID
}
"""
CreateActionPlanInput is used for create ActionPlan object.
Input was generated by ent.
"""
input CreateActionPlanInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the action plan
  """
  name: String!
  """
  description of the action plan
  """
  description: String
  """
  status of the action plan
  """
  status: String
  """
  due date of the action plan
  """
  dueDate: Time
  """
  priority of the action plan
  """
  priority: String
  """
  source of the action plan
  """
  source: String
  """
  json data including details of the action plan
  """
  details: Map
  standardIDs: [ID!]
  riskIDs: [ID!]
  controlIDs: [ID!]
  userIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateContactInput is used for create Contact object.
Input was generated by ent.
"""
input CreateContactInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the full name of the contact
  """
  fullName: String!
  """
  the title of the contact
  """
  title: String
  """
  the company of the contact
  """
  company: String
  """
  the email of the contact
  """
  email: String
  """
  the phone number of the contact
  """
  phoneNumber: String
  """
  the address of the contact
  """
  address: String
  """
  status of the contact
  """
  status: ContactUserStatus
  ownerID: ID
  entityIDs: [ID!]
  fileIDs: [ID!]
}
"""
CreateControlInput is used for create Control object.
Input was generated by ent.
"""
input CreateControlInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control
  """
  name: String!
  """
  description of the control
  """
  description: String
  """
  status of the control
  """
  status: String
  """
  type of the control
  """
  controlType: String
  """
  version of the control
  """
  version: String
  """
  control number or identifier
  """
  controlNumber: String
  """
  family associated with the control
  """
  family: String
  """
  class associated with the control
  """
  class: String
  """
  source of the control, e.g. framework, template, custom, etc.
  """
  source: String
  """
  which control objectives are satisfied by the control
  """
  satisfies: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control
  """
  details: Map
  procedureIDs: [ID!]
  subcontrolIDs: [ID!]
  controlobjectiveIDs: [ID!]
  standardIDs: [ID!]
  narrativeIDs: [ID!]
  riskIDs: [ID!]
  actionplanIDs: [ID!]
  taskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateControlObjectiveInput is used for create ControlObjective object.
Input was generated by ent.
"""
input CreateControlObjectiveInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the control objective
  """
  name: String!
  """
  description of the control objective
  """
  description: String
  """
  status of the control objective
  """
  status: String
  """
  type of the control objective
  """
  controlObjectiveType: String
  """
  version of the control objective
  """
  version: String
  """
  number of the control objective
  """
  controlNumber: String
  """
  family of the control objective
  """
  family: String
  """
  class associated with the control objective
  """
  class: String
  """
  source of the control objective, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks
  """
  mappedFrameworks: String
  """
  json data including details of the control objective
  """
  details: Map
  policyIDs: [ID!]
  controlIDs: [ID!]
  procedureIDs: [ID!]
  riskIDs: [ID!]
  subcontrolIDs: [ID!]
  standardIDs: [ID!]
  narrativeIDs: [ID!]
  taskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateDocumentDataInput is used for create DocumentData object.
Input was generated by ent.
"""
input CreateDocumentDataInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the json data of the document
  """
  data: JSON!
  ownerID: ID
  templateID: ID!
  entityIDs: [ID!]
  fileIDs: [ID!]
}
"""
CreateEntitlementInput is used for create Entitlement object.
Input was generated by ent.
"""
input CreateEntitlementInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean
  ownerID: ID
  planID: ID!
  organizationID: ID!
  eventIDs: [ID!]
}
"""
CreateEntitlementPlanFeatureInput is used for create EntitlementPlanFeature object.
Input was generated by ent.
"""
input CreateEntitlementPlanFeatureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  metadata for the entitlement plan feature such as usage limits
  """
  metadata: Map
  ownerID: ID
  planID: ID!
  featureID: ID!
  eventIDs: [ID!]
}
"""
CreateEntitlementPlanInput is used for create EntitlementPlan object.
Input was generated by ent.
"""
input CreateEntitlementPlanInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the displayed 'friendly' name of the plan
  """
  displayName: String
  """
  the unique name of the plan
  """
  name: String!
  """
  a description of the plan
  """
  description: String
  """
  the version of the plan
  """
  version: String!
  """
  metadata for the plan
  """
  metadata: Map
  ownerID: ID
  entitlementIDs: [ID!]
  baseFeatureIDs: [ID!]
  eventIDs: [ID!]
}
"""
CreateEntityInput is used for create Entity object.
Input was generated by ent.
"""
input CreateEntityInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the entity
  """
  name: String
  """
  The entity's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the entity
  """
  description: String
  """
  domains associated with the entity
  """
  domains: [String!]
  """
  status of the entity
  """
  status: String
  ownerID: ID
  contactIDs: [ID!]
  documentIDs: [ID!]
  noteIDs: [ID!]
  fileIDs: [ID!]
  entityTypeID: ID
}
"""
CreateEntityTypeInput is used for create EntityType object.
Input was generated by ent.
"""
input CreateEntityTypeInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the entity
  """
  name: String!
  ownerID: ID
  entityIDs: [ID!]
}
"""
CreateEventInput is used for create Event object.
Input was generated by ent.
"""
input CreateEventInput {
  """
  tags associated with the object
  """
  tags: [String!]
  eventID: String
  correlationID: String
  eventType: String!
  metadata: Map
  userIDs: [ID!]
  groupIDs: [ID!]
  integrationIDs: [ID!]
  organizationIDs: [ID!]
  inviteIDs: [ID!]
  featureIDs: [ID!]
  entitlementplanIDs: [ID!]
  personalAccessTokenIDs: [ID!]
  oauth2tokenIDs: [ID!]
  hushIDs: [ID!]
  entitlementIDs: [ID!]
  webhookIDs: [ID!]
  subscriberIDs: [ID!]
  fileIDs: [ID!]
}
"""
CreateFeatureInput is used for create Feature object.
Input was generated by ent.
"""
input CreateFeatureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the unique name of the feature
  """
  name: String!
  """
  the displayed 'friendly' name of the feature
  """
  displayName: String
  """
  enabled features are available for use
  """
  enabled: Boolean
  """
  a description of the feature
  """
  description: String
  """
  metadata for the feature
  """
  metadata: Map
  ownerID: ID
  planIDs: [ID!]
  eventIDs: [ID!]
}
"""
CreateFileInput is used for create File object.
Input was generated by ent.
"""
input CreateFileInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the file provided in the payload key without the extension
  """
  providedFileName: String!
  """
  the extension of the file provided
  """
  providedFileExtension: String!
  """
  the computed size of the file in the original http request
  """
  providedFileSize: Int
  persistedFileSize: Int
  """
  the mime type detected by the system
  """
  detectedMimeType: String
  """
  the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage
  """
  md5Hash: String
  """
  the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types
  """
  detectedContentType: String!
  """
  the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key
  """
  storeKey: String
  """
  the category type of the file, if any (e.g. evidence, invoice, etc.)
  """
  categoryType: String
  """
  the full URI of the file
  """
  uri: String
  """
  the storage scheme of the file, e.g. file://, s3://, etc.
  """
  storageScheme: String
  """
  the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping
  """
  storageVolume: String
  """
  the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty
  """
  storagePath: String
  userIDs: [ID!]
  organizationIDs: [ID!]
  groupIDs: [ID!]
  contactIDs: [ID!]
  entityIDs: [ID!]
  usersettingIDs: [ID!]
  organizationsettingIDs: [ID!]
  templateIDs: [ID!]
  documentdatumIDs: [ID!]
  eventIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateGroupInput is used for create Group object.
Input was generated by ent.
"""
input CreateGroupInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String
  ownerID: ID
  settingID: ID!
  userIDs: [ID!]
  eventIDs: [ID!]
  integrationIDs: [ID!]
  fileIDs: [ID!]
  taskIDs: [ID!]
}
"""
CreateGroupMembershipInput is used for create GroupMembership object.
Input was generated by ent.
"""
input CreateGroupMembershipInput {
  role: GroupMembershipRole
  groupID: ID!
  userID: ID!
  eventIDs: [ID!]
}
"""
CreateGroupSettingInput is used for create GroupSetting object.
Input was generated by ent.
"""
input CreateGroupSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  groupID: ID
}
"""
CreateHushInput is used for create Hush object.
Input was generated by ent.
"""
input CreateHushInput {
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
  """
  the secret value
  """
  secretValue: String
  integrationIDs: [ID!]
  organizationIDs: [ID!]
  eventIDs: [ID!]
}
"""
CreateIntegrationInput is used for create Integration object.
Input was generated by ent.
"""
input CreateIntegrationInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
  ownerID: ID
  secretIDs: [ID!]
  oauth2tokenIDs: [ID!]
  eventIDs: [ID!]
  webhookIDs: [ID!]
}
"""
CreateInternalPolicyInput is used for create InternalPolicy object.
Input was generated by ent.
"""
input CreateInternalPolicyInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the policy
  """
  name: String!
  """
  description of the policy
  """
  description: String!
  """
  status of the policy
  """
  status: String
  """
  type of the policy
  """
  policyType: String
  """
  version of the policy
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the policy
  """
  background: String
  """
  json data for the policy document
  """
  details: Map
  controlobjectiveIDs: [ID!]
  controlIDs: [ID!]
  procedureIDs: [ID!]
  narrativeIDs: [ID!]
  taskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateInviteInput is used for create Invite object.
Input was generated by ent.
"""
input CreateInviteInput {
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time
  """
  the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
  """
  recipient: String!
  """
  the status of the invitation
  """
  status: InviteInviteStatus
  role: InviteRole
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int
  """
  the user who initiated the invitation
  """
  requestorID: String
  ownerID: ID
  eventIDs: [ID!]
}
"""
CreateNarrativeInput is used for create Narrative object.
Input was generated by ent.
"""
input CreateNarrativeInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the narrative
  """
  name: String!
  """
  the description of the narrative
  """
  description: String
  """
  which controls are satisfied by the narrative
  """
  satisfies: String
  """
  json data for the narrative document
  """
  details: Map
  policyIDs: [ID!]
  controlIDs: [ID!]
  procedureIDs: [ID!]
  controlobjectiveIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateNoteInput is used for create Note object.
Input was generated by ent.
"""
input CreateNoteInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the text of the note
  """
  text: String!
  ownerID: ID
  entityID: ID
  subcontrolIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateOauthProviderInput is used for create OauthProvider object.
Input was generated by ent.
"""
input CreateOauthProviderInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
  ownerID: ID
}
"""
CreateOhAuthTooTokenInput is used for create OhAuthTooToken object.
Input was generated by ent.
"""
input CreateOhAuthTooTokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  clientID: String!
  scopes: [String!]
  nonce: String!
  claimsUserID: String!
  claimsUsername: String!
  claimsEmail: String!
  claimsEmailVerified: Boolean!
  claimsGroups: [String!]
  claimsPreferredUsername: String!
  connectorID: String!
  connectorData: [String!]
  lastUsed: Time
  integrationIDs: [ID!]
  eventIDs: [ID!]
}
"""
CreateOrgMembershipInput is used for create OrgMembership object.
Input was generated by ent.
"""
input CreateOrgMembershipInput {
  role: OrgMembershipRole
  organizationID: ID!
  userID: ID!
  eventIDs: [ID!]
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean
  parentID: ID
  groupIDs: [ID!]
  templateIDs: [ID!]
  integrationIDs: [ID!]
  settingID: ID
  documentdatumIDs: [ID!]
  entitlementIDs: [ID!]
  organizationEntitlementIDs: [ID!]
  personalAccessTokenIDs: [ID!]
  apiTokenIDs: [ID!]
  oauthproviderIDs: [ID!]
  userIDs: [ID!]
  inviteIDs: [ID!]
  subscriberIDs: [ID!]
  webhookIDs: [ID!]
  eventIDs: [ID!]
  secretIDs: [ID!]
  featureIDs: [ID!]
  fileIDs: [ID!]
  entitlementplanIDs: [ID!]
  entityIDs: [ID!]
  entitytypeIDs: [ID!]
  contactIDs: [ID!]
  noteIDs: [ID!]
  taskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateOrganizationSettingInput is used for create OrganizationSetting object.
Input was generated by ent.
"""
input CreateOrganizationSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  organizationID: ID
  fileIDs: [ID!]
}
"""
CreatePersonalAccessTokenInput is used for create PersonalAccessToken object.
Input was generated by ent.
"""
input CreatePersonalAccessTokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name associated with the token
  """
  name: String!
  """
  when the token expires
  """
  expiresAt: Time
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  ownerID: ID!
  organizationIDs: [ID!]
  eventIDs: [ID!]
}
"""
CreateProcedureInput is used for create Procedure object.
Input was generated by ent.
"""
input CreateProcedureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the procedure
  """
  name: String!
  """
  description of the procedure
  """
  description: String
  """
  status of the procedure
  """
  status: String
  """
  type of the procedure
  """
  procedureType: String
  """
  version of the procedure
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the procedure
  """
  background: String
  """
  which controls are satisfied by the procedure
  """
  satisfies: String
  """
  json data for the procedure document
  """
  details: Map
  controlIDs: [ID!]
  internalpolicyIDs: [ID!]
  narrativeIDs: [ID!]
  riskIDs: [ID!]
  taskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateProgramInput is used for create Program object.
Input was generated by ent.
"""
input CreateProgramInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the program
  """
  name: String!
  """
  the description of the program
  """
  description: String
  """
  the status of the program
  """
  status: ProgramProgramStatus
  """
  the start date of the period
  """
  startDate: Time
  """
  the end date of the period
  """
  endDate: Time
  """
  is the program ready for the auditor
  """
  auditorReady: Boolean
  """
  can the auditor write comments
  """
  auditorWriteComments: Boolean
  """
  can the auditor read comments
  """
  auditorReadComments: Boolean
  ownerID: ID
  controlIDs: [ID!]
  subcontrolIDs: [ID!]
  controlobjectiveIDs: [ID!]
  policyIDs: [ID!]
  procedureIDs: [ID!]
  riskIDs: [ID!]
  taskIDs: [ID!]
  noteIDs: [ID!]
  fileIDs: [ID!]
  narrativeIDs: [ID!]
  actionplanIDs: [ID!]
  standardIDs: [ID!]
  userIDs: [ID!]
}
"""
CreateProgramMembershipInput is used for create ProgramMembership object.
Input was generated by ent.
"""
input CreateProgramMembershipInput {
  role: ProgramMembershipRole
  programID: ID!
  userID: ID!
}
"""
CreateRiskInput is used for create Risk object.
Input was generated by ent.
"""
input CreateRiskInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the risk
  """
  name: String!
  """
  description of the risk
  """
  description: String
  """
  status of the risk - mitigated or not, inflight, etc.
  """
  status: String
  """
  type of the risk, e.g. strategic, operational, financial, external, etc.
  """
  riskType: String
  """
  business costs associated with the risk
  """
  businessCosts: String
  """
  impact of the risk - high, medium, low
  """
  impact: RiskRiskImpact
  """
  likelihood of the risk occurring; unlikely, likely, highly likely
  """
  likelihood: RiskRiskLikelihood
  """
  mitigation for the risk
  """
  mitigation: String
  """
  which controls are satisfied by the risk
  """
  satisfies: String
  """
  json data for the risk document
  """
  details: Map
  controlIDs: [ID!]
  procedureIDs: [ID!]
  actionplanIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateStandardInput is used for create Standard object.
Input was generated by ent.
"""
input CreateStandardInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc.
  """
  name: String!
  """
  description of the standard
  """
  description: String
  """
  family of the standard, e.g. 800-53, 800-171, 27001, etc.
  """
  family: String
  """
  status of the standard - active, deprecated, etc.
  """
  status: String
  """
  type of the standard - security, privacy, etc.
  """
  standardType: String
  """
  version of the standard
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the standard
  """
  background: String
  """
  which controls are satisfied by the standard
  """
  satisfies: String
  """
  json data with details of the standard
  """
  details: Map
  controlobjectiveIDs: [ID!]
  controlIDs: [ID!]
  procedureIDs: [ID!]
  actionplanIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateSubcontrolInput is used for create Subcontrol object.
Input was generated by ent.
"""
input CreateSubcontrolInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the subcontrol
  """
  name: String!
  """
  description of the subcontrol
  """
  description: String
  """
  status of the subcontrol
  """
  status: String
  """
  type of the subcontrol
  """
  subcontrolType: String
  """
  version of the control
  """
  version: String
  """
  number of the subcontrol
  """
  subcontrolNumber: String
  """
  subcontrol family 
  """
  family: String
  """
  subcontrol class
  """
  class: String
  """
  source of the control, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks that the subcontrol is part of
  """
  mappedFrameworks: String
  """
  implementation evidence of the subcontrol
  """
  implementationEvidence: String
  """
  implementation status
  """
  implementationStatus: String
  """
  date the subcontrol was implemented
  """
  implementationDate: Time
  """
  implementation verification
  """
  implementationVerification: String
  """
  date the subcontrol implementation was verified
  """
  implementationVerificationDate: Time
  """
  json data details of the subcontrol
  """
  details: Map
  controlIDs: [ID!]
  userIDs: [ID!]
  taskIDs: [ID!]
  notesID: ID
  programIDs: [ID!]
}
"""
CreateSubscriberInput is used for create Subscriber object.
Input was generated by ent.
"""
input CreateSubscriberInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  email address of the subscriber
  """
  email: String!
  """
  phone number of the subscriber
  """
  phoneNumber: String
  ownerID: ID
  eventIDs: [ID!]
}
"""
CreateTFASettingInput is used for create TFASetting object.
Input was generated by ent.
"""
input CreateTFASettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  ownerID: ID
}
"""
CreateTaskInput is used for create Task object.
Input was generated by ent.
"""
input CreateTaskInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the title of the task
  """
  title: String!
  """
  the description of the task
  """
  description: String
  """
  the details of the task
  """
  details: Map
  """
  the status of the task
  """
  status: TaskTaskStatus
  """
  the due date of the task
  """
  due: Time
  """
  the completion date of the task
  """
  completed: Time
  assignerID: ID!
  assigneeID: ID
  organizationIDs: [ID!]
  groupIDs: [ID!]
  policyIDs: [ID!]
  procedureIDs: [ID!]
  controlIDs: [ID!]
  controlObjectiveIDs: [ID!]
  subcontrolIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateTemplateInput is used for create Template object.
Input was generated by ent.
"""
input CreateTemplateInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  ownerID: ID
  documentIDs: [ID!]
  fileIDs: [ID!]
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  """
  tags associated with the object
  """
  tags: [String!]
  email: String!
  firstName: String
  lastName: String
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  user password hash
  """
  password: String
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider
  """
  the user's role
  """
  role: UserRole
  personalAccessTokenIDs: [ID!]
  tfaSettingIDs: [ID!]
  settingID: ID!
  emailVerificationTokenIDs: [ID!]
  passwordResetTokenIDs: [ID!]
  groupIDs: [ID!]
  organizationIDs: [ID!]
  webauthnIDs: [ID!]
  fileIDs: [ID!]
  fileID: ID
  eventIDs: [ID!]
  actionplanIDs: [ID!]
  subcontrolIDs: [ID!]
  assignerTaskIDs: [ID!]
  assigneeTaskIDs: [ID!]
  programIDs: [ID!]
}
"""
CreateUserSettingInput is used for create UserSetting object.
Input was generated by ent.
"""
input CreateUserSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingUserStatus
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  userID: ID
  defaultOrgID: ID
  fileIDs: [ID!]
}
"""
CreateWebhookInput is used for create Webhook object.
Input was generated by ent.
"""
input CreateWebhookInput {
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the webhook
  """
  name: String!
  """
  a description of the webhook
  """
  description: String
  """
  the url to send the webhook to
  """
  destinationURL: String!
  """
  indicates if the webhook is active and enabled
  """
  enabled: Boolean
  """
  the number of failures
  """
  failures: Int
  """
  the last error message
  """
  lastError: String
  """
  the last response
  """
  lastResponse: String
  ownerID: ID
  eventIDs: [ID!]
  integrationIDs: [ID!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DocumentData implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the template id of the document
  """
  templateID: ID!
  """
  the json data of the document
  """
  data: JSON!
  owner: Organization
  template: Template!
  entity: [Entity!]
  files: [File!]
}
"""
A connection to a list of items.
"""
type DocumentDataConnection {
  """
  A list of edges.
  """
  edges: [DocumentDataEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DocumentDataEdge {
  """
  The item at the end of the edge.
  """
  node: DocumentData
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DocumentDataHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: DocumentDataHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the template id of the document
  """
  templateID: String!
  """
  the json data of the document
  """
  data: JSON!
}
"""
A connection to a list of items.
"""
type DocumentDataHistoryConnection {
  """
  A list of edges.
  """
  edges: [DocumentDataHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DocumentDataHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: DocumentDataHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DocumentDataHistoryOpType is enum for the field operation
"""
enum DocumentDataHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
DocumentDataHistoryWhereInput is used for filtering DocumentDataHistory objects.
Input was generated by ent.
"""
input DocumentDataHistoryWhereInput {
  not: DocumentDataHistoryWhereInput
  and: [DocumentDataHistoryWhereInput!]
  or: [DocumentDataHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: DocumentDataHistoryOpType
  operationNEQ: DocumentDataHistoryOpType
  operationIn: [DocumentDataHistoryOpType!]
  operationNotIn: [DocumentDataHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  template_id field predicates
  """
  templateID: String
  templateIDNEQ: String
  templateIDIn: [String!]
  templateIDNotIn: [String!]
  templateIDGT: String
  templateIDGTE: String
  templateIDLT: String
  templateIDLTE: String
  templateIDContains: String
  templateIDHasPrefix: String
  templateIDHasSuffix: String
  templateIDEqualFold: String
  templateIDContainsFold: String
}
"""
DocumentDataWhereInput is used for filtering DocumentData objects.
Input was generated by ent.
"""
input DocumentDataWhereInput {
  not: DocumentDataWhereInput
  and: [DocumentDataWhereInput!]
  or: [DocumentDataWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  template_id field predicates
  """
  templateID: ID
  templateIDNEQ: ID
  templateIDIn: [ID!]
  templateIDNotIn: [ID!]
  templateIDGT: ID
  templateIDGTE: ID
  templateIDLT: ID
  templateIDLTE: ID
  templateIDContains: ID
  templateIDHasPrefix: ID
  templateIDHasSuffix: ID
  templateIDEqualFold: ID
  templateIDContainsFold: ID
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  template edge predicates
  """
  hasTemplate: Boolean
  hasTemplateWith: [TemplateWhereInput!]
  """
  entity edge predicates
  """
  hasEntity: Boolean
  hasEntityWith: [EntityWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
}
type Entitlement implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the plan to which the entitlement belongs
  """
  planID: ID!
  """
  the organization to which the entitlement belongs
  """
  organizationID: ID!
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean!
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean!
  owner: Organization
  plan: EntitlementPlan!
  organization: Organization!
  events: [Event!]
}
"""
A connection to a list of items.
"""
type EntitlementConnection {
  """
  A list of edges.
  """
  edges: [EntitlementEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementEdge {
  """
  The item at the end of the edge.
  """
  node: Entitlement
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntitlementHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntitlementHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the plan to which the entitlement belongs
  """
  planID: String!
  """
  the organization to which the entitlement belongs
  """
  organizationID: String!
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  """
  whether or not the customers entitlement expires - expires_at will show the time
  """
  expires: Boolean!
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean!
}
"""
A connection to a list of items.
"""
type EntitlementHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntitlementHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntitlementHistoryOpType is enum for the field operation
"""
enum EntitlementHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
EntitlementHistoryWhereInput is used for filtering EntitlementHistory objects.
Input was generated by ent.
"""
input EntitlementHistoryWhereInput {
  not: EntitlementHistoryWhereInput
  and: [EntitlementHistoryWhereInput!]
  or: [EntitlementHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntitlementHistoryOpType
  operationNEQ: EntitlementHistoryOpType
  operationIn: [EntitlementHistoryOpType!]
  operationNotIn: [EntitlementHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  plan_id field predicates
  """
  planID: String
  planIDNEQ: String
  planIDIn: [String!]
  planIDNotIn: [String!]
  planIDGT: String
  planIDGTE: String
  planIDLT: String
  planIDLTE: String
  planIDContains: String
  planIDHasPrefix: String
  planIDHasSuffix: String
  planIDEqualFold: String
  planIDContainsFold: String
  """
  organization_id field predicates
  """
  organizationID: String
  organizationIDNEQ: String
  organizationIDIn: [String!]
  organizationIDNotIn: [String!]
  organizationIDGT: String
  organizationIDGTE: String
  organizationIDLT: String
  organizationIDLTE: String
  organizationIDContains: String
  organizationIDHasPrefix: String
  organizationIDHasSuffix: String
  organizationIDEqualFold: String
  organizationIDContainsFold: String
  """
  external_customer_id field predicates
  """
  externalCustomerID: String
  externalCustomerIDNEQ: String
  externalCustomerIDIn: [String!]
  externalCustomerIDNotIn: [String!]
  externalCustomerIDGT: String
  externalCustomerIDGTE: String
  externalCustomerIDLT: String
  externalCustomerIDLTE: String
  externalCustomerIDContains: String
  externalCustomerIDHasPrefix: String
  externalCustomerIDHasSuffix: String
  externalCustomerIDIsNil: Boolean
  externalCustomerIDNotNil: Boolean
  externalCustomerIDEqualFold: String
  externalCustomerIDContainsFold: String
  """
  external_subscription_id field predicates
  """
  externalSubscriptionID: String
  externalSubscriptionIDNEQ: String
  externalSubscriptionIDIn: [String!]
  externalSubscriptionIDNotIn: [String!]
  externalSubscriptionIDGT: String
  externalSubscriptionIDGTE: String
  externalSubscriptionIDLT: String
  externalSubscriptionIDLTE: String
  externalSubscriptionIDContains: String
  externalSubscriptionIDHasPrefix: String
  externalSubscriptionIDHasSuffix: String
  externalSubscriptionIDIsNil: Boolean
  externalSubscriptionIDNotNil: Boolean
  externalSubscriptionIDEqualFold: String
  externalSubscriptionIDContainsFold: String
  """
  expires field predicates
  """
  expires: Boolean
  expiresNEQ: Boolean
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  cancelled field predicates
  """
  cancelled: Boolean
  cancelledNEQ: Boolean
}
type EntitlementPlan implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the displayed 'friendly' name of the plan
  """
  displayName: String
  """
  the unique name of the plan
  """
  name: String!
  """
  a description of the plan
  """
  description: String
  """
  the version of the plan
  """
  version: String!
  """
  metadata for the plan
  """
  metadata: Map
  owner: Organization
  entitlements: [Entitlement!]
  baseFeatures: [Feature!]
  events: [Event!]
  features: [EntitlementPlanFeature!]
}
"""
A connection to a list of items.
"""
type EntitlementPlanConnection {
  """
  A list of edges.
  """
  edges: [EntitlementPlanEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementPlanEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementPlan
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntitlementPlanFeature implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  metadata for the entitlement plan feature such as usage limits
  """
  metadata: Map
  planID: ID!
  featureID: ID!
  owner: Organization
  plan: EntitlementPlan!
  feature: Feature!
  events: [Event!]
}
"""
A connection to a list of items.
"""
type EntitlementPlanFeatureConnection {
  """
  A list of edges.
  """
  edges: [EntitlementPlanFeatureEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementPlanFeatureEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementPlanFeature
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntitlementPlanFeatureHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntitlementPlanFeatureHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  metadata for the entitlement plan feature such as usage limits
  """
  metadata: Map
  planID: String!
  featureID: String!
}
"""
A connection to a list of items.
"""
type EntitlementPlanFeatureHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntitlementPlanFeatureHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementPlanFeatureHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementPlanFeatureHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntitlementPlanFeatureHistoryOpType is enum for the field operation
"""
enum EntitlementPlanFeatureHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
EntitlementPlanFeatureHistoryWhereInput is used for filtering EntitlementPlanFeatureHistory objects.
Input was generated by ent.
"""
input EntitlementPlanFeatureHistoryWhereInput {
  not: EntitlementPlanFeatureHistoryWhereInput
  and: [EntitlementPlanFeatureHistoryWhereInput!]
  or: [EntitlementPlanFeatureHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntitlementPlanFeatureHistoryOpType
  operationNEQ: EntitlementPlanFeatureHistoryOpType
  operationIn: [EntitlementPlanFeatureHistoryOpType!]
  operationNotIn: [EntitlementPlanFeatureHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  plan_id field predicates
  """
  planID: String
  planIDNEQ: String
  planIDIn: [String!]
  planIDNotIn: [String!]
  planIDGT: String
  planIDGTE: String
  planIDLT: String
  planIDLTE: String
  planIDContains: String
  planIDHasPrefix: String
  planIDHasSuffix: String
  planIDEqualFold: String
  planIDContainsFold: String
  """
  feature_id field predicates
  """
  featureID: String
  featureIDNEQ: String
  featureIDIn: [String!]
  featureIDNotIn: [String!]
  featureIDGT: String
  featureIDGTE: String
  featureIDLT: String
  featureIDLTE: String
  featureIDContains: String
  featureIDHasPrefix: String
  featureIDHasSuffix: String
  featureIDEqualFold: String
  featureIDContainsFold: String
}
"""
EntitlementPlanFeatureWhereInput is used for filtering EntitlementPlanFeature objects.
Input was generated by ent.
"""
input EntitlementPlanFeatureWhereInput {
  not: EntitlementPlanFeatureWhereInput
  and: [EntitlementPlanFeatureWhereInput!]
  or: [EntitlementPlanFeatureWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
}
type EntitlementPlanHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntitlementPlanHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the displayed 'friendly' name of the plan
  """
  displayName: String
  """
  the unique name of the plan
  """
  name: String!
  """
  a description of the plan
  """
  description: String
  """
  the version of the plan
  """
  version: String!
  """
  metadata for the plan
  """
  metadata: Map
}
"""
A connection to a list of items.
"""
type EntitlementPlanHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntitlementPlanHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntitlementPlanHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntitlementPlanHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntitlementPlanHistoryOpType is enum for the field operation
"""
enum EntitlementPlanHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
EntitlementPlanHistoryWhereInput is used for filtering EntitlementPlanHistory objects.
Input was generated by ent.
"""
input EntitlementPlanHistoryWhereInput {
  not: EntitlementPlanHistoryWhereInput
  and: [EntitlementPlanHistoryWhereInput!]
  or: [EntitlementPlanHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntitlementPlanHistoryOpType
  operationNEQ: EntitlementPlanHistoryOpType
  operationIn: [EntitlementPlanHistoryOpType!]
  operationNotIn: [EntitlementPlanHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionEqualFold: String
  versionContainsFold: String
}
"""
EntitlementPlanWhereInput is used for filtering EntitlementPlan objects.
Input was generated by ent.
"""
input EntitlementPlanWhereInput {
  not: EntitlementPlanWhereInput
  and: [EntitlementPlanWhereInput!]
  or: [EntitlementPlanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionEqualFold: String
  versionContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  entitlements edge predicates
  """
  hasEntitlements: Boolean
  hasEntitlementsWith: [EntitlementWhereInput!]
  """
  base_features edge predicates
  """
  hasBaseFeatures: Boolean
  hasBaseFeaturesWith: [FeatureWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  features edge predicates
  """
  hasFeatures: Boolean
  hasFeaturesWith: [EntitlementPlanFeatureWhereInput!]
}
"""
EntitlementWhereInput is used for filtering Entitlement objects.
Input was generated by ent.
"""
input EntitlementWhereInput {
  not: EntitlementWhereInput
  and: [EntitlementWhereInput!]
  or: [EntitlementWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  plan_id field predicates
  """
  planID: ID
  planIDNEQ: ID
  planIDIn: [ID!]
  planIDNotIn: [ID!]
  planIDGT: ID
  planIDGTE: ID
  planIDLT: ID
  planIDLTE: ID
  planIDContains: ID
  planIDHasPrefix: ID
  planIDHasSuffix: ID
  planIDEqualFold: ID
  planIDContainsFold: ID
  """
  organization_id field predicates
  """
  organizationID: ID
  organizationIDNEQ: ID
  organizationIDIn: [ID!]
  organizationIDNotIn: [ID!]
  organizationIDGT: ID
  organizationIDGTE: ID
  organizationIDLT: ID
  organizationIDLTE: ID
  organizationIDContains: ID
  organizationIDHasPrefix: ID
  organizationIDHasSuffix: ID
  organizationIDEqualFold: ID
  organizationIDContainsFold: ID
  """
  external_customer_id field predicates
  """
  externalCustomerID: String
  externalCustomerIDNEQ: String
  externalCustomerIDIn: [String!]
  externalCustomerIDNotIn: [String!]
  externalCustomerIDGT: String
  externalCustomerIDGTE: String
  externalCustomerIDLT: String
  externalCustomerIDLTE: String
  externalCustomerIDContains: String
  externalCustomerIDHasPrefix: String
  externalCustomerIDHasSuffix: String
  externalCustomerIDIsNil: Boolean
  externalCustomerIDNotNil: Boolean
  externalCustomerIDEqualFold: String
  externalCustomerIDContainsFold: String
  """
  external_subscription_id field predicates
  """
  externalSubscriptionID: String
  externalSubscriptionIDNEQ: String
  externalSubscriptionIDIn: [String!]
  externalSubscriptionIDNotIn: [String!]
  externalSubscriptionIDGT: String
  externalSubscriptionIDGTE: String
  externalSubscriptionIDLT: String
  externalSubscriptionIDLTE: String
  externalSubscriptionIDContains: String
  externalSubscriptionIDHasPrefix: String
  externalSubscriptionIDHasSuffix: String
  externalSubscriptionIDIsNil: Boolean
  externalSubscriptionIDNotNil: Boolean
  externalSubscriptionIDEqualFold: String
  externalSubscriptionIDContainsFold: String
  """
  expires field predicates
  """
  expires: Boolean
  expiresNEQ: Boolean
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  cancelled field predicates
  """
  cancelled: Boolean
  cancelledNEQ: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  plan edge predicates
  """
  hasPlan: Boolean
  hasPlanWith: [EntitlementPlanWhereInput!]
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
type Entity implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the entity
  """
  name: String
  """
  The entity's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the entity
  """
  description: String
  """
  domains associated with the entity
  """
  domains: [String!]
  """
  The type of the entity
  """
  entityTypeID: ID
  """
  status of the entity
  """
  status: String
  owner: Organization
  contacts: [Contact!]
  documents: [DocumentData!]
  notes: [Note!]
  files: [File!]
  entityType: EntityType
}
"""
A connection to a list of items.
"""
type EntityConnection {
  """
  A list of edges.
  """
  edges: [EntityEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntityEdge {
  """
  The item at the end of the edge.
  """
  node: Entity
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntityHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntityHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the entity
  """
  name: String
  """
  The entity's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the entity
  """
  description: String
  """
  domains associated with the entity
  """
  domains: [String!]
  """
  The type of the entity
  """
  entityTypeID: String
  """
  status of the entity
  """
  status: String
}
"""
A connection to a list of items.
"""
type EntityHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntityHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntityHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntityHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntityHistoryOpType is enum for the field operation
"""
enum EntityHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for EntityHistory connections
"""
input EntityHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order EntityHistories.
  """
  field: EntityHistoryOrderField!
}
"""
Properties by which EntityHistory connections can be ordered.
"""
enum EntityHistoryOrderField {
  name
  display_name
}
"""
EntityHistoryWhereInput is used for filtering EntityHistory objects.
Input was generated by ent.
"""
input EntityHistoryWhereInput {
  not: EntityHistoryWhereInput
  and: [EntityHistoryWhereInput!]
  or: [EntityHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntityHistoryOpType
  operationNEQ: EntityHistoryOpType
  operationIn: [EntityHistoryOpType!]
  operationNotIn: [EntityHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  entity_type_id field predicates
  """
  entityTypeID: String
  entityTypeIDNEQ: String
  entityTypeIDIn: [String!]
  entityTypeIDNotIn: [String!]
  entityTypeIDGT: String
  entityTypeIDGTE: String
  entityTypeIDLT: String
  entityTypeIDLTE: String
  entityTypeIDContains: String
  entityTypeIDHasPrefix: String
  entityTypeIDHasSuffix: String
  entityTypeIDIsNil: Boolean
  entityTypeIDNotNil: Boolean
  entityTypeIDEqualFold: String
  entityTypeIDContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
}
"""
Ordering options for Entity connections
"""
input EntityOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Entities.
  """
  field: EntityOrderField!
}
"""
Properties by which Entity connections can be ordered.
"""
enum EntityOrderField {
  name
  display_name
}
type EntityType implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the entity
  """
  name: String!
  owner: Organization
  entities: [Entity!]
}
"""
A connection to a list of items.
"""
type EntityTypeConnection {
  """
  A list of edges.
  """
  edges: [EntityTypeEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntityTypeEdge {
  """
  The item at the end of the edge.
  """
  node: EntityType
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EntityTypeHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EntityTypeHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the entity
  """
  name: String!
}
"""
A connection to a list of items.
"""
type EntityTypeHistoryConnection {
  """
  A list of edges.
  """
  edges: [EntityTypeHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EntityTypeHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EntityTypeHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EntityTypeHistoryOpType is enum for the field operation
"""
enum EntityTypeHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for EntityTypeHistory connections
"""
input EntityTypeHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order EntityTypeHistories.
  """
  field: EntityTypeHistoryOrderField!
}
"""
Properties by which EntityTypeHistory connections can be ordered.
"""
enum EntityTypeHistoryOrderField {
  name
}
"""
EntityTypeHistoryWhereInput is used for filtering EntityTypeHistory objects.
Input was generated by ent.
"""
input EntityTypeHistoryWhereInput {
  not: EntityTypeHistoryWhereInput
  and: [EntityTypeHistoryWhereInput!]
  or: [EntityTypeHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EntityTypeHistoryOpType
  operationNEQ: EntityTypeHistoryOpType
  operationIn: [EntityTypeHistoryOpType!]
  operationNotIn: [EntityTypeHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
}
"""
Ordering options for EntityType connections
"""
input EntityTypeOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order EntityTypes.
  """
  field: EntityTypeOrderField!
}
"""
Properties by which EntityType connections can be ordered.
"""
enum EntityTypeOrderField {
  name
}
"""
EntityTypeWhereInput is used for filtering EntityType objects.
Input was generated by ent.
"""
input EntityTypeWhereInput {
  not: EntityTypeWhereInput
  and: [EntityTypeWhereInput!]
  or: [EntityTypeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  entities edge predicates
  """
  hasEntities: Boolean
  hasEntitiesWith: [EntityWhereInput!]
}
"""
EntityWhereInput is used for filtering Entity objects.
Input was generated by ent.
"""
input EntityWhereInput {
  not: EntityWhereInput
  and: [EntityWhereInput!]
  or: [EntityWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  entity_type_id field predicates
  """
  entityTypeID: ID
  entityTypeIDNEQ: ID
  entityTypeIDIn: [ID!]
  entityTypeIDNotIn: [ID!]
  entityTypeIDGT: ID
  entityTypeIDGTE: ID
  entityTypeIDLT: ID
  entityTypeIDLTE: ID
  entityTypeIDContains: ID
  entityTypeIDHasPrefix: ID
  entityTypeIDHasSuffix: ID
  entityTypeIDIsNil: Boolean
  entityTypeIDNotNil: Boolean
  entityTypeIDEqualFold: ID
  entityTypeIDContainsFold: ID
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  contacts edge predicates
  """
  hasContacts: Boolean
  hasContactsWith: [ContactWhereInput!]
  """
  documents edge predicates
  """
  hasDocuments: Boolean
  hasDocumentsWith: [DocumentDataWhereInput!]
  """
  notes edge predicates
  """
  hasNotes: Boolean
  hasNotesWith: [NoteWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
  """
  entity_type edge predicates
  """
  hasEntityType: Boolean
  hasEntityTypeWith: [EntityTypeWhereInput!]
}
type Event implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  eventID: String
  correlationID: String
  eventType: String!
  metadata: Map
  user: [User!]
  group: [Group!]
  integration: [Integration!]
  organization: [Organization!]
  invite: [Invite!]
  feature: [Feature!]
  entitlementplan: [EntitlementPlan!]
  entitlementplanfeature: [EntitlementPlanFeature!]
  personalAccessToken: [PersonalAccessToken!]
  oauth2token: [OhAuthTooToken!]
  hush: [Hush!]
  orgmembership: [OrgMembership!]
  groupmembership: [GroupMembership!]
  entitlement: [Entitlement!]
  webhook: [Webhook!]
  subscriber: [Subscriber!]
  file: [File!]
}
"""
A connection to a list of items.
"""
type EventConnection {
  """
  A list of edges.
  """
  edges: [EventEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EventEdge {
  """
  The item at the end of the edge.
  """
  node: Event
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type EventHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: EventHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  eventID: String
  correlationID: String
  eventType: String!
  metadata: Map
}
"""
A connection to a list of items.
"""
type EventHistoryConnection {
  """
  A list of edges.
  """
  edges: [EventHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EventHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: EventHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EventHistoryOpType is enum for the field operation
"""
enum EventHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
EventHistoryWhereInput is used for filtering EventHistory objects.
Input was generated by ent.
"""
input EventHistoryWhereInput {
  not: EventHistoryWhereInput
  and: [EventHistoryWhereInput!]
  or: [EventHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: EventHistoryOpType
  operationNEQ: EventHistoryOpType
  operationIn: [EventHistoryOpType!]
  operationNotIn: [EventHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  event_id field predicates
  """
  eventID: String
  eventIDNEQ: String
  eventIDIn: [String!]
  eventIDNotIn: [String!]
  eventIDGT: String
  eventIDGTE: String
  eventIDLT: String
  eventIDLTE: String
  eventIDContains: String
  eventIDHasPrefix: String
  eventIDHasSuffix: String
  eventIDIsNil: Boolean
  eventIDNotNil: Boolean
  eventIDEqualFold: String
  eventIDContainsFold: String
  """
  correlation_id field predicates
  """
  correlationID: String
  correlationIDNEQ: String
  correlationIDIn: [String!]
  correlationIDNotIn: [String!]
  correlationIDGT: String
  correlationIDGTE: String
  correlationIDLT: String
  correlationIDLTE: String
  correlationIDContains: String
  correlationIDHasPrefix: String
  correlationIDHasSuffix: String
  correlationIDIsNil: Boolean
  correlationIDNotNil: Boolean
  correlationIDEqualFold: String
  correlationIDContainsFold: String
  """
  event_type field predicates
  """
  eventType: String
  eventTypeNEQ: String
  eventTypeIn: [String!]
  eventTypeNotIn: [String!]
  eventTypeGT: String
  eventTypeGTE: String
  eventTypeLT: String
  eventTypeLTE: String
  eventTypeContains: String
  eventTypeHasPrefix: String
  eventTypeHasSuffix: String
  eventTypeEqualFold: String
  eventTypeContainsFold: String
}
"""
EventWhereInput is used for filtering Event objects.
Input was generated by ent.
"""
input EventWhereInput {
  not: EventWhereInput
  and: [EventWhereInput!]
  or: [EventWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  event_id field predicates
  """
  eventID: String
  eventIDNEQ: String
  eventIDIn: [String!]
  eventIDNotIn: [String!]
  eventIDGT: String
  eventIDGTE: String
  eventIDLT: String
  eventIDLTE: String
  eventIDContains: String
  eventIDHasPrefix: String
  eventIDHasSuffix: String
  eventIDIsNil: Boolean
  eventIDNotNil: Boolean
  eventIDEqualFold: String
  eventIDContainsFold: String
  """
  correlation_id field predicates
  """
  correlationID: String
  correlationIDNEQ: String
  correlationIDIn: [String!]
  correlationIDNotIn: [String!]
  correlationIDGT: String
  correlationIDGTE: String
  correlationIDLT: String
  correlationIDLTE: String
  correlationIDContains: String
  correlationIDHasPrefix: String
  correlationIDHasSuffix: String
  correlationIDIsNil: Boolean
  correlationIDNotNil: Boolean
  correlationIDEqualFold: String
  correlationIDContainsFold: String
  """
  event_type field predicates
  """
  eventType: String
  eventTypeNEQ: String
  eventTypeIn: [String!]
  eventTypeNotIn: [String!]
  eventTypeGT: String
  eventTypeGTE: String
  eventTypeLT: String
  eventTypeLTE: String
  eventTypeContains: String
  eventTypeHasPrefix: String
  eventTypeHasSuffix: String
  eventTypeEqualFold: String
  eventTypeContainsFold: String
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  group edge predicates
  """
  hasGroup: Boolean
  hasGroupWith: [GroupWhereInput!]
  """
  integration edge predicates
  """
  hasIntegration: Boolean
  hasIntegrationWith: [IntegrationWhereInput!]
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  invite edge predicates
  """
  hasInvite: Boolean
  hasInviteWith: [InviteWhereInput!]
  """
  feature edge predicates
  """
  hasFeature: Boolean
  hasFeatureWith: [FeatureWhereInput!]
  """
  entitlementplan edge predicates
  """
  hasEntitlementplan: Boolean
  hasEntitlementplanWith: [EntitlementPlanWhereInput!]
  """
  entitlementplanfeature edge predicates
  """
  hasEntitlementplanfeature: Boolean
  hasEntitlementplanfeatureWith: [EntitlementPlanFeatureWhereInput!]
  """
  personal_access_token edge predicates
  """
  hasPersonalAccessToken: Boolean
  hasPersonalAccessTokenWith: [PersonalAccessTokenWhereInput!]
  """
  oauth2token edge predicates
  """
  hasOauth2token: Boolean
  hasOauth2tokenWith: [OhAuthTooTokenWhereInput!]
  """
  hush edge predicates
  """
  hasHush: Boolean
  hasHushWith: [HushWhereInput!]
  """
  orgmembership edge predicates
  """
  hasOrgmembership: Boolean
  hasOrgmembershipWith: [OrgMembershipWhereInput!]
  """
  groupmembership edge predicates
  """
  hasGroupmembership: Boolean
  hasGroupmembershipWith: [GroupMembershipWhereInput!]
  """
  entitlement edge predicates
  """
  hasEntitlement: Boolean
  hasEntitlementWith: [EntitlementWhereInput!]
  """
  webhook edge predicates
  """
  hasWebhook: Boolean
  hasWebhookWith: [WebhookWhereInput!]
  """
  subscriber edge predicates
  """
  hasSubscriber: Boolean
  hasSubscriberWith: [SubscriberWhereInput!]
  """
  file edge predicates
  """
  hasFile: Boolean
  hasFileWith: [FileWhereInput!]
}
type Feature implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the unique name of the feature
  """
  name: String!
  """
  the displayed 'friendly' name of the feature
  """
  displayName: String
  """
  enabled features are available for use
  """
  enabled: Boolean!
  """
  a description of the feature
  """
  description: String
  """
  metadata for the feature
  """
  metadata: Map
  owner: Organization
  plans: [EntitlementPlan!]
  events: [Event!]
  features: [EntitlementPlanFeature!]
}
"""
A connection to a list of items.
"""
type FeatureConnection {
  """
  A list of edges.
  """
  edges: [FeatureEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type FeatureEdge {
  """
  The item at the end of the edge.
  """
  node: Feature
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type FeatureHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: FeatureHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the unique name of the feature
  """
  name: String!
  """
  the displayed 'friendly' name of the feature
  """
  displayName: String
  """
  enabled features are available for use
  """
  enabled: Boolean!
  """
  a description of the feature
  """
  description: String
  """
  metadata for the feature
  """
  metadata: Map
}
"""
A connection to a list of items.
"""
type FeatureHistoryConnection {
  """
  A list of edges.
  """
  edges: [FeatureHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type FeatureHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: FeatureHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
FeatureHistoryOpType is enum for the field operation
"""
enum FeatureHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
FeatureHistoryWhereInput is used for filtering FeatureHistory objects.
Input was generated by ent.
"""
input FeatureHistoryWhereInput {
  not: FeatureHistoryWhereInput
  and: [FeatureHistoryWhereInput!]
  or: [FeatureHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: FeatureHistoryOpType
  operationNEQ: FeatureHistoryOpType
  operationIn: [FeatureHistoryOpType!]
  operationNotIn: [FeatureHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  enabled field predicates
  """
  enabled: Boolean
  enabledNEQ: Boolean
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
}
"""
FeatureWhereInput is used for filtering Feature objects.
Input was generated by ent.
"""
input FeatureWhereInput {
  not: FeatureWhereInput
  and: [FeatureWhereInput!]
  or: [FeatureWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameIsNil: Boolean
  displayNameNotNil: Boolean
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  enabled field predicates
  """
  enabled: Boolean
  enabledNEQ: Boolean
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  plans edge predicates
  """
  hasPlans: Boolean
  hasPlansWith: [EntitlementPlanWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  features edge predicates
  """
  hasFeatures: Boolean
  hasFeaturesWith: [EntitlementPlanFeatureWhereInput!]
}
type File implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the file provided in the payload key without the extension
  """
  providedFileName: String!
  """
  the extension of the file provided
  """
  providedFileExtension: String!
  """
  the computed size of the file in the original http request
  """
  providedFileSize: Int
  persistedFileSize: Int
  """
  the mime type detected by the system
  """
  detectedMimeType: String
  """
  the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage
  """
  md5Hash: String
  """
  the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types
  """
  detectedContentType: String!
  """
  the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key
  """
  storeKey: String
  """
  the category type of the file, if any (e.g. evidence, invoice, etc.)
  """
  categoryType: String
  """
  the full URI of the file
  """
  uri: String
  """
  the storage scheme of the file, e.g. file://, s3://, etc.
  """
  storageScheme: String
  """
  the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping
  """
  storageVolume: String
  """
  the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty
  """
  storagePath: String
  user: [User!]
  organization: [Organization!]
  group: [Group!]
  contact: [Contact!]
  entity: [Entity!]
  usersetting: [UserSetting!]
  organizationsetting: [OrganizationSetting!]
  template: [Template!]
  documentdata: [DocumentData!]
  events: [Event!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type FileConnection {
  """
  A list of edges.
  """
  edges: [FileEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type FileEdge {
  """
  The item at the end of the edge.
  """
  node: File
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type FileHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: FileHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the file provided in the payload key without the extension
  """
  providedFileName: String!
  """
  the extension of the file provided
  """
  providedFileExtension: String!
  """
  the computed size of the file in the original http request
  """
  providedFileSize: Int
  persistedFileSize: Int
  """
  the mime type detected by the system
  """
  detectedMimeType: String
  """
  the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage
  """
  md5Hash: String
  """
  the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types
  """
  detectedContentType: String!
  """
  the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key
  """
  storeKey: String
  """
  the category type of the file, if any (e.g. evidence, invoice, etc.)
  """
  categoryType: String
  """
  the full URI of the file
  """
  uri: String
  """
  the storage scheme of the file, e.g. file://, s3://, etc.
  """
  storageScheme: String
  """
  the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping
  """
  storageVolume: String
  """
  the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty
  """
  storagePath: String
}
"""
A connection to a list of items.
"""
type FileHistoryConnection {
  """
  A list of edges.
  """
  edges: [FileHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type FileHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: FileHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
FileHistoryOpType is enum for the field operation
"""
enum FileHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
FileHistoryWhereInput is used for filtering FileHistory objects.
Input was generated by ent.
"""
input FileHistoryWhereInput {
  not: FileHistoryWhereInput
  and: [FileHistoryWhereInput!]
  or: [FileHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: FileHistoryOpType
  operationNEQ: FileHistoryOpType
  operationIn: [FileHistoryOpType!]
  operationNotIn: [FileHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  provided_file_name field predicates
  """
  providedFileName: String
  providedFileNameNEQ: String
  providedFileNameIn: [String!]
  providedFileNameNotIn: [String!]
  providedFileNameGT: String
  providedFileNameGTE: String
  providedFileNameLT: String
  providedFileNameLTE: String
  providedFileNameContains: String
  providedFileNameHasPrefix: String
  providedFileNameHasSuffix: String
  providedFileNameEqualFold: String
  providedFileNameContainsFold: String
  """
  provided_file_extension field predicates
  """
  providedFileExtension: String
  providedFileExtensionNEQ: String
  providedFileExtensionIn: [String!]
  providedFileExtensionNotIn: [String!]
  providedFileExtensionGT: String
  providedFileExtensionGTE: String
  providedFileExtensionLT: String
  providedFileExtensionLTE: String
  providedFileExtensionContains: String
  providedFileExtensionHasPrefix: String
  providedFileExtensionHasSuffix: String
  providedFileExtensionEqualFold: String
  providedFileExtensionContainsFold: String
  """
  provided_file_size field predicates
  """
  providedFileSize: Int
  providedFileSizeNEQ: Int
  providedFileSizeIn: [Int!]
  providedFileSizeNotIn: [Int!]
  providedFileSizeGT: Int
  providedFileSizeGTE: Int
  providedFileSizeLT: Int
  providedFileSizeLTE: Int
  providedFileSizeIsNil: Boolean
  providedFileSizeNotNil: Boolean
  """
  persisted_file_size field predicates
  """
  persistedFileSize: Int
  persistedFileSizeNEQ: Int
  persistedFileSizeIn: [Int!]
  persistedFileSizeNotIn: [Int!]
  persistedFileSizeGT: Int
  persistedFileSizeGTE: Int
  persistedFileSizeLT: Int
  persistedFileSizeLTE: Int
  persistedFileSizeIsNil: Boolean
  persistedFileSizeNotNil: Boolean
  """
  detected_mime_type field predicates
  """
  detectedMimeType: String
  detectedMimeTypeNEQ: String
  detectedMimeTypeIn: [String!]
  detectedMimeTypeNotIn: [String!]
  detectedMimeTypeGT: String
  detectedMimeTypeGTE: String
  detectedMimeTypeLT: String
  detectedMimeTypeLTE: String
  detectedMimeTypeContains: String
  detectedMimeTypeHasPrefix: String
  detectedMimeTypeHasSuffix: String
  detectedMimeTypeIsNil: Boolean
  detectedMimeTypeNotNil: Boolean
  detectedMimeTypeEqualFold: String
  detectedMimeTypeContainsFold: String
  """
  md5_hash field predicates
  """
  md5Hash: String
  md5HashNEQ: String
  md5HashIn: [String!]
  md5HashNotIn: [String!]
  md5HashGT: String
  md5HashGTE: String
  md5HashLT: String
  md5HashLTE: String
  md5HashContains: String
  md5HashHasPrefix: String
  md5HashHasSuffix: String
  md5HashIsNil: Boolean
  md5HashNotNil: Boolean
  md5HashEqualFold: String
  md5HashContainsFold: String
  """
  detected_content_type field predicates
  """
  detectedContentType: String
  detectedContentTypeNEQ: String
  detectedContentTypeIn: [String!]
  detectedContentTypeNotIn: [String!]
  detectedContentTypeGT: String
  detectedContentTypeGTE: String
  detectedContentTypeLT: String
  detectedContentTypeLTE: String
  detectedContentTypeContains: String
  detectedContentTypeHasPrefix: String
  detectedContentTypeHasSuffix: String
  detectedContentTypeEqualFold: String
  detectedContentTypeContainsFold: String
  """
  store_key field predicates
  """
  storeKey: String
  storeKeyNEQ: String
  storeKeyIn: [String!]
  storeKeyNotIn: [String!]
  storeKeyGT: String
  storeKeyGTE: String
  storeKeyLT: String
  storeKeyLTE: String
  storeKeyContains: String
  storeKeyHasPrefix: String
  storeKeyHasSuffix: String
  storeKeyIsNil: Boolean
  storeKeyNotNil: Boolean
  storeKeyEqualFold: String
  storeKeyContainsFold: String
  """
  category_type field predicates
  """
  categoryType: String
  categoryTypeNEQ: String
  categoryTypeIn: [String!]
  categoryTypeNotIn: [String!]
  categoryTypeGT: String
  categoryTypeGTE: String
  categoryTypeLT: String
  categoryTypeLTE: String
  categoryTypeContains: String
  categoryTypeHasPrefix: String
  categoryTypeHasSuffix: String
  categoryTypeIsNil: Boolean
  categoryTypeNotNil: Boolean
  categoryTypeEqualFold: String
  categoryTypeContainsFold: String
  """
  uri field predicates
  """
  uri: String
  uriNEQ: String
  uriIn: [String!]
  uriNotIn: [String!]
  uriGT: String
  uriGTE: String
  uriLT: String
  uriLTE: String
  uriContains: String
  uriHasPrefix: String
  uriHasSuffix: String
  uriIsNil: Boolean
  uriNotNil: Boolean
  uriEqualFold: String
  uriContainsFold: String
  """
  storage_scheme field predicates
  """
  storageScheme: String
  storageSchemeNEQ: String
  storageSchemeIn: [String!]
  storageSchemeNotIn: [String!]
  storageSchemeGT: String
  storageSchemeGTE: String
  storageSchemeLT: String
  storageSchemeLTE: String
  storageSchemeContains: String
  storageSchemeHasPrefix: String
  storageSchemeHasSuffix: String
  storageSchemeIsNil: Boolean
  storageSchemeNotNil: Boolean
  storageSchemeEqualFold: String
  storageSchemeContainsFold: String
  """
  storage_volume field predicates
  """
  storageVolume: String
  storageVolumeNEQ: String
  storageVolumeIn: [String!]
  storageVolumeNotIn: [String!]
  storageVolumeGT: String
  storageVolumeGTE: String
  storageVolumeLT: String
  storageVolumeLTE: String
  storageVolumeContains: String
  storageVolumeHasPrefix: String
  storageVolumeHasSuffix: String
  storageVolumeIsNil: Boolean
  storageVolumeNotNil: Boolean
  storageVolumeEqualFold: String
  storageVolumeContainsFold: String
  """
  storage_path field predicates
  """
  storagePath: String
  storagePathNEQ: String
  storagePathIn: [String!]
  storagePathNotIn: [String!]
  storagePathGT: String
  storagePathGTE: String
  storagePathLT: String
  storagePathLTE: String
  storagePathContains: String
  storagePathHasPrefix: String
  storagePathHasSuffix: String
  storagePathIsNil: Boolean
  storagePathNotNil: Boolean
  storagePathEqualFold: String
  storagePathContainsFold: String
}
"""
FileWhereInput is used for filtering File objects.
Input was generated by ent.
"""
input FileWhereInput {
  not: FileWhereInput
  and: [FileWhereInput!]
  or: [FileWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  provided_file_name field predicates
  """
  providedFileName: String
  providedFileNameNEQ: String
  providedFileNameIn: [String!]
  providedFileNameNotIn: [String!]
  providedFileNameGT: String
  providedFileNameGTE: String
  providedFileNameLT: String
  providedFileNameLTE: String
  providedFileNameContains: String
  providedFileNameHasPrefix: String
  providedFileNameHasSuffix: String
  providedFileNameEqualFold: String
  providedFileNameContainsFold: String
  """
  provided_file_extension field predicates
  """
  providedFileExtension: String
  providedFileExtensionNEQ: String
  providedFileExtensionIn: [String!]
  providedFileExtensionNotIn: [String!]
  providedFileExtensionGT: String
  providedFileExtensionGTE: String
  providedFileExtensionLT: String
  providedFileExtensionLTE: String
  providedFileExtensionContains: String
  providedFileExtensionHasPrefix: String
  providedFileExtensionHasSuffix: String
  providedFileExtensionEqualFold: String
  providedFileExtensionContainsFold: String
  """
  provided_file_size field predicates
  """
  providedFileSize: Int
  providedFileSizeNEQ: Int
  providedFileSizeIn: [Int!]
  providedFileSizeNotIn: [Int!]
  providedFileSizeGT: Int
  providedFileSizeGTE: Int
  providedFileSizeLT: Int
  providedFileSizeLTE: Int
  providedFileSizeIsNil: Boolean
  providedFileSizeNotNil: Boolean
  """
  persisted_file_size field predicates
  """
  persistedFileSize: Int
  persistedFileSizeNEQ: Int
  persistedFileSizeIn: [Int!]
  persistedFileSizeNotIn: [Int!]
  persistedFileSizeGT: Int
  persistedFileSizeGTE: Int
  persistedFileSizeLT: Int
  persistedFileSizeLTE: Int
  persistedFileSizeIsNil: Boolean
  persistedFileSizeNotNil: Boolean
  """
  detected_mime_type field predicates
  """
  detectedMimeType: String
  detectedMimeTypeNEQ: String
  detectedMimeTypeIn: [String!]
  detectedMimeTypeNotIn: [String!]
  detectedMimeTypeGT: String
  detectedMimeTypeGTE: String
  detectedMimeTypeLT: String
  detectedMimeTypeLTE: String
  detectedMimeTypeContains: String
  detectedMimeTypeHasPrefix: String
  detectedMimeTypeHasSuffix: String
  detectedMimeTypeIsNil: Boolean
  detectedMimeTypeNotNil: Boolean
  detectedMimeTypeEqualFold: String
  detectedMimeTypeContainsFold: String
  """
  md5_hash field predicates
  """
  md5Hash: String
  md5HashNEQ: String
  md5HashIn: [String!]
  md5HashNotIn: [String!]
  md5HashGT: String
  md5HashGTE: String
  md5HashLT: String
  md5HashLTE: String
  md5HashContains: String
  md5HashHasPrefix: String
  md5HashHasSuffix: String
  md5HashIsNil: Boolean
  md5HashNotNil: Boolean
  md5HashEqualFold: String
  md5HashContainsFold: String
  """
  detected_content_type field predicates
  """
  detectedContentType: String
  detectedContentTypeNEQ: String
  detectedContentTypeIn: [String!]
  detectedContentTypeNotIn: [String!]
  detectedContentTypeGT: String
  detectedContentTypeGTE: String
  detectedContentTypeLT: String
  detectedContentTypeLTE: String
  detectedContentTypeContains: String
  detectedContentTypeHasPrefix: String
  detectedContentTypeHasSuffix: String
  detectedContentTypeEqualFold: String
  detectedContentTypeContainsFold: String
  """
  store_key field predicates
  """
  storeKey: String
  storeKeyNEQ: String
  storeKeyIn: [String!]
  storeKeyNotIn: [String!]
  storeKeyGT: String
  storeKeyGTE: String
  storeKeyLT: String
  storeKeyLTE: String
  storeKeyContains: String
  storeKeyHasPrefix: String
  storeKeyHasSuffix: String
  storeKeyIsNil: Boolean
  storeKeyNotNil: Boolean
  storeKeyEqualFold: String
  storeKeyContainsFold: String
  """
  category_type field predicates
  """
  categoryType: String
  categoryTypeNEQ: String
  categoryTypeIn: [String!]
  categoryTypeNotIn: [String!]
  categoryTypeGT: String
  categoryTypeGTE: String
  categoryTypeLT: String
  categoryTypeLTE: String
  categoryTypeContains: String
  categoryTypeHasPrefix: String
  categoryTypeHasSuffix: String
  categoryTypeIsNil: Boolean
  categoryTypeNotNil: Boolean
  categoryTypeEqualFold: String
  categoryTypeContainsFold: String
  """
  uri field predicates
  """
  uri: String
  uriNEQ: String
  uriIn: [String!]
  uriNotIn: [String!]
  uriGT: String
  uriGTE: String
  uriLT: String
  uriLTE: String
  uriContains: String
  uriHasPrefix: String
  uriHasSuffix: String
  uriIsNil: Boolean
  uriNotNil: Boolean
  uriEqualFold: String
  uriContainsFold: String
  """
  storage_scheme field predicates
  """
  storageScheme: String
  storageSchemeNEQ: String
  storageSchemeIn: [String!]
  storageSchemeNotIn: [String!]
  storageSchemeGT: String
  storageSchemeGTE: String
  storageSchemeLT: String
  storageSchemeLTE: String
  storageSchemeContains: String
  storageSchemeHasPrefix: String
  storageSchemeHasSuffix: String
  storageSchemeIsNil: Boolean
  storageSchemeNotNil: Boolean
  storageSchemeEqualFold: String
  storageSchemeContainsFold: String
  """
  storage_volume field predicates
  """
  storageVolume: String
  storageVolumeNEQ: String
  storageVolumeIn: [String!]
  storageVolumeNotIn: [String!]
  storageVolumeGT: String
  storageVolumeGTE: String
  storageVolumeLT: String
  storageVolumeLTE: String
  storageVolumeContains: String
  storageVolumeHasPrefix: String
  storageVolumeHasSuffix: String
  storageVolumeIsNil: Boolean
  storageVolumeNotNil: Boolean
  storageVolumeEqualFold: String
  storageVolumeContainsFold: String
  """
  storage_path field predicates
  """
  storagePath: String
  storagePathNEQ: String
  storagePathIn: [String!]
  storagePathNotIn: [String!]
  storagePathGT: String
  storagePathGTE: String
  storagePathLT: String
  storagePathLTE: String
  storagePathContains: String
  storagePathHasPrefix: String
  storagePathHasSuffix: String
  storagePathIsNil: Boolean
  storagePathNotNil: Boolean
  storagePathEqualFold: String
  storagePathContainsFold: String
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  group edge predicates
  """
  hasGroup: Boolean
  hasGroupWith: [GroupWhereInput!]
  """
  contact edge predicates
  """
  hasContact: Boolean
  hasContactWith: [ContactWhereInput!]
  """
  entity edge predicates
  """
  hasEntity: Boolean
  hasEntityWith: [EntityWhereInput!]
  """
  usersetting edge predicates
  """
  hasUsersetting: Boolean
  hasUsersettingWith: [UserSettingWhereInput!]
  """
  organizationsetting edge predicates
  """
  hasOrganizationsetting: Boolean
  hasOrganizationsettingWith: [OrganizationSettingWhereInput!]
  """
  template edge predicates
  """
  hasTemplate: Boolean
  hasTemplateWith: [TemplateWhereInput!]
  """
  documentdata edge predicates
  """
  hasDocumentdata: Boolean
  hasDocumentdataWith: [DocumentDataWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
type Group implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String!
  owner: Organization
  setting: GroupSetting!
  users: [User!]
  events: [Event!]
  integrations: [Integration!]
  files: [File!]
  tasks: [Task!]
  members: [GroupMembership!]
}
"""
A connection to a list of items.
"""
type GroupConnection {
  """
  A list of edges.
  """
  edges: [GroupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupEdge {
  """
  The item at the end of the edge.
  """
  node: Group
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the group - must be unique within the organization
  """
  name: String!
  """
  the groups description
  """
  description: String
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  """
  The group's displayed 'friendly' name
  """
  displayName: String!
}
"""
A connection to a list of items.
"""
type GroupHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupHistoryOpType is enum for the field operation
"""
enum GroupHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for GroupHistory connections
"""
input GroupHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order GroupHistories.
  """
  field: GroupHistoryOrderField!
}
"""
Properties by which GroupHistory connections can be ordered.
"""
enum GroupHistoryOrderField {
  name
  display_name
}
"""
GroupHistoryWhereInput is used for filtering GroupHistory objects.
Input was generated by ent.
"""
input GroupHistoryWhereInput {
  not: GroupHistoryWhereInput
  and: [GroupHistoryWhereInput!]
  or: [GroupHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupHistoryOpType
  operationNEQ: GroupHistoryOpType
  operationIn: [GroupHistoryOpType!]
  operationNotIn: [GroupHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
}
type GroupMembership implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: GroupMembershipRole!
  groupID: ID!
  userID: ID!
  group: Group!
  user: User!
  events: [Event!]
}
"""
A connection to a list of items.
"""
type GroupMembershipConnection {
  """
  A list of edges.
  """
  edges: [GroupMembershipEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupMembershipEdge {
  """
  The item at the end of the edge.
  """
  node: GroupMembership
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupMembershipHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupMembershipHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: GroupMembershipHistoryRole!
  groupID: String!
  userID: String!
}
"""
A connection to a list of items.
"""
type GroupMembershipHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupMembershipHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupMembershipHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupMembershipHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupMembershipHistoryOpType is enum for the field operation
"""
enum GroupMembershipHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
GroupMembershipHistoryRole is enum for the field role
"""
enum GroupMembershipHistoryRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
}
"""
GroupMembershipHistoryWhereInput is used for filtering GroupMembershipHistory objects.
Input was generated by ent.
"""
input GroupMembershipHistoryWhereInput {
  not: GroupMembershipHistoryWhereInput
  and: [GroupMembershipHistoryWhereInput!]
  or: [GroupMembershipHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupMembershipHistoryOpType
  operationNEQ: GroupMembershipHistoryOpType
  operationIn: [GroupMembershipHistoryOpType!]
  operationNotIn: [GroupMembershipHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: GroupMembershipHistoryRole
  roleNEQ: GroupMembershipHistoryRole
  roleIn: [GroupMembershipHistoryRole!]
  roleNotIn: [GroupMembershipHistoryRole!]
  """
  group_id field predicates
  """
  groupID: String
  groupIDNEQ: String
  groupIDIn: [String!]
  groupIDNotIn: [String!]
  groupIDGT: String
  groupIDGTE: String
  groupIDLT: String
  groupIDLTE: String
  groupIDContains: String
  groupIDHasPrefix: String
  groupIDHasSuffix: String
  groupIDEqualFold: String
  groupIDContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDEqualFold: String
  userIDContainsFold: String
}
"""
GroupMembershipRole is enum for the field role
"""
enum GroupMembershipRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
}
"""
GroupMembershipWhereInput is used for filtering GroupMembership objects.
Input was generated by ent.
"""
input GroupMembershipWhereInput {
  not: GroupMembershipWhereInput
  and: [GroupMembershipWhereInput!]
  or: [GroupMembershipWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: GroupMembershipRole
  roleNEQ: GroupMembershipRole
  roleIn: [GroupMembershipRole!]
  roleNotIn: [GroupMembershipRole!]
}
"""
Ordering options for Group connections
"""
input GroupOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Groups.
  """
  field: GroupOrderField!
}
"""
Properties by which Group connections can be ordered.
"""
enum GroupOrderField {
  name
  display_name
}
type GroupSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility!
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy!
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  """
  the group id associated with the settings
  """
  groupID: ID
  group: Group
}
"""
A connection to a list of items.
"""
type GroupSettingConnection {
  """
  A list of edges.
  """
  edges: [GroupSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupSettingEdge {
  """
  The item at the end of the edge.
  """
  node: GroupSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type GroupSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: GroupSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingHistoryVisibility!
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingHistoryJoinPolicy!
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  """
  the group id associated with the settings
  """
  groupID: String
}
"""
A connection to a list of items.
"""
type GroupSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [GroupSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type GroupSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: GroupSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
GroupSettingHistoryJoinPolicy is enum for the field join_policy
"""
enum GroupSettingHistoryJoinPolicy @goModel(model: "github.com/theopenlane/core/pkg/enums.JoinPolicy") {
  OPEN
  INVITE_ONLY
  APPLICATION_ONLY
  INVITE_OR_APPLICATION
}
"""
GroupSettingHistoryOpType is enum for the field operation
"""
enum GroupSettingHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
GroupSettingHistoryVisibility is enum for the field visibility
"""
enum GroupSettingHistoryVisibility @goModel(model: "github.com/theopenlane/core/pkg/enums.Visibility") {
  PUBLIC
  PRIVATE
}
"""
GroupSettingHistoryWhereInput is used for filtering GroupSettingHistory objects.
Input was generated by ent.
"""
input GroupSettingHistoryWhereInput {
  not: GroupSettingHistoryWhereInput
  and: [GroupSettingHistoryWhereInput!]
  or: [GroupSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: GroupSettingHistoryOpType
  operationNEQ: GroupSettingHistoryOpType
  operationIn: [GroupSettingHistoryOpType!]
  operationNotIn: [GroupSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  visibility field predicates
  """
  visibility: GroupSettingHistoryVisibility
  visibilityNEQ: GroupSettingHistoryVisibility
  visibilityIn: [GroupSettingHistoryVisibility!]
  visibilityNotIn: [GroupSettingHistoryVisibility!]
  """
  join_policy field predicates
  """
  joinPolicy: GroupSettingHistoryJoinPolicy
  joinPolicyNEQ: GroupSettingHistoryJoinPolicy
  joinPolicyIn: [GroupSettingHistoryJoinPolicy!]
  joinPolicyNotIn: [GroupSettingHistoryJoinPolicy!]
  """
  sync_to_slack field predicates
  """
  syncToSlack: Boolean
  syncToSlackNEQ: Boolean
  syncToSlackIsNil: Boolean
  syncToSlackNotNil: Boolean
  """
  sync_to_github field predicates
  """
  syncToGithub: Boolean
  syncToGithubNEQ: Boolean
  syncToGithubIsNil: Boolean
  syncToGithubNotNil: Boolean
  """
  group_id field predicates
  """
  groupID: String
  groupIDNEQ: String
  groupIDIn: [String!]
  groupIDNotIn: [String!]
  groupIDGT: String
  groupIDGTE: String
  groupIDLT: String
  groupIDLTE: String
  groupIDContains: String
  groupIDHasPrefix: String
  groupIDHasSuffix: String
  groupIDIsNil: Boolean
  groupIDNotNil: Boolean
  groupIDEqualFold: String
  groupIDContainsFold: String
}
"""
GroupSettingJoinPolicy is enum for the field join_policy
"""
enum GroupSettingJoinPolicy @goModel(model: "github.com/theopenlane/core/pkg/enums.JoinPolicy") {
  OPEN
  INVITE_ONLY
  APPLICATION_ONLY
  INVITE_OR_APPLICATION
}
"""
GroupSettingVisibility is enum for the field visibility
"""
enum GroupSettingVisibility @goModel(model: "github.com/theopenlane/core/pkg/enums.Visibility") {
  PUBLIC
  PRIVATE
}
"""
GroupSettingWhereInput is used for filtering GroupSetting objects.
Input was generated by ent.
"""
input GroupSettingWhereInput {
  not: GroupSettingWhereInput
  and: [GroupSettingWhereInput!]
  or: [GroupSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  visibility field predicates
  """
  visibility: GroupSettingVisibility
  visibilityNEQ: GroupSettingVisibility
  visibilityIn: [GroupSettingVisibility!]
  visibilityNotIn: [GroupSettingVisibility!]
  """
  join_policy field predicates
  """
  joinPolicy: GroupSettingJoinPolicy
  joinPolicyNEQ: GroupSettingJoinPolicy
  joinPolicyIn: [GroupSettingJoinPolicy!]
  joinPolicyNotIn: [GroupSettingJoinPolicy!]
  """
  sync_to_slack field predicates
  """
  syncToSlack: Boolean
  syncToSlackNEQ: Boolean
  syncToSlackIsNil: Boolean
  syncToSlackNotNil: Boolean
  """
  sync_to_github field predicates
  """
  syncToGithub: Boolean
  syncToGithubNEQ: Boolean
  syncToGithubIsNil: Boolean
  syncToGithubNotNil: Boolean
  """
  group_id field predicates
  """
  groupID: ID
  groupIDNEQ: ID
  groupIDIn: [ID!]
  groupIDNotIn: [ID!]
  groupIDGT: ID
  groupIDGTE: ID
  groupIDLT: ID
  groupIDLTE: ID
  groupIDContains: ID
  groupIDHasPrefix: ID
  groupIDHasSuffix: ID
  groupIDIsNil: Boolean
  groupIDNotNil: Boolean
  groupIDEqualFold: ID
  groupIDContainsFold: ID
  """
  group edge predicates
  """
  hasGroup: Boolean
  hasGroupWith: [GroupWhereInput!]
}
"""
GroupWhereInput is used for filtering Group objects.
Input was generated by ent.
"""
input GroupWhereInput {
  not: GroupWhereInput
  and: [GroupWhereInput!]
  or: [GroupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [GroupSettingWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  members edge predicates
  """
  hasMembers: Boolean
  hasMembersWith: [GroupMembershipWhereInput!]
}
type Hush implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
  """
  the integration associated with the secret
  """
  integrations: [Integration!]
  organization: [Organization!]
  events: [Event!]
}
"""
A connection to a list of items.
"""
type HushConnection {
  """
  A list of edges.
  """
  edges: [HushEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HushEdge {
  """
  The item at the end of the edge.
  """
  node: Hush
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type HushHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: HushHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String!
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  """
  the generic name of a secret associated with the organization
  """
  secretName: String
}
"""
A connection to a list of items.
"""
type HushHistoryConnection {
  """
  A list of edges.
  """
  edges: [HushHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HushHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: HushHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
HushHistoryOpType is enum for the field operation
"""
enum HushHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for HushHistory connections
"""
input HushHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order HushHistories.
  """
  field: HushHistoryOrderField!
}
"""
Properties by which HushHistory connections can be ordered.
"""
enum HushHistoryOrderField {
  name
  kind
}
"""
HushHistoryWhereInput is used for filtering HushHistory objects.
Input was generated by ent.
"""
input HushHistoryWhereInput {
  not: HushHistoryWhereInput
  and: [HushHistoryWhereInput!]
  or: [HushHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: HushHistoryOpType
  operationNEQ: HushHistoryOpType
  operationIn: [HushHistoryOpType!]
  operationNotIn: [HushHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  secret_name field predicates
  """
  secretName: String
  secretNameNEQ: String
  secretNameIn: [String!]
  secretNameNotIn: [String!]
  secretNameGT: String
  secretNameGTE: String
  secretNameLT: String
  secretNameLTE: String
  secretNameContains: String
  secretNameHasPrefix: String
  secretNameHasSuffix: String
  secretNameIsNil: Boolean
  secretNameNotNil: Boolean
  secretNameEqualFold: String
  secretNameContainsFold: String
}
"""
Ordering options for Hush connections
"""
input HushOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Hushes.
  """
  field: HushOrderField!
}
"""
Properties by which Hush connections can be ordered.
"""
enum HushOrderField {
  name
  kind
}
"""
HushWhereInput is used for filtering Hush objects.
Input was generated by ent.
"""
input HushWhereInput {
  not: HushWhereInput
  and: [HushWhereInput!]
  or: [HushWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  secret_name field predicates
  """
  secretName: String
  secretNameNEQ: String
  secretNameIn: [String!]
  secretNameNotIn: [String!]
  secretNameGT: String
  secretNameGTE: String
  secretNameLT: String
  secretNameLTE: String
  secretNameContains: String
  secretNameHasPrefix: String
  secretNameHasSuffix: String
  secretNameIsNil: Boolean
  secretNameNotNil: Boolean
  secretNameEqualFold: String
  secretNameContainsFold: String
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
type Integration implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
  owner: Organization
  """
  the secrets associated with the integration
  """
  secrets: [Hush!]
  """
  the oauth2 tokens associated with the integration
  """
  oauth2tokens: [OhAuthTooToken!]
  events: [Event!]
  webhooks: [Webhook!]
}
"""
A connection to a list of items.
"""
type IntegrationConnection {
  """
  A list of edges.
  """
  edges: [IntegrationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type IntegrationEdge {
  """
  The item at the end of the edge.
  """
  node: Integration
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type IntegrationHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: IntegrationHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the integration - must be unique within the organization
  """
  name: String!
  """
  a description of the integration
  """
  description: String
  kind: String
}
"""
A connection to a list of items.
"""
type IntegrationHistoryConnection {
  """
  A list of edges.
  """
  edges: [IntegrationHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type IntegrationHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: IntegrationHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
IntegrationHistoryOpType is enum for the field operation
"""
enum IntegrationHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for IntegrationHistory connections
"""
input IntegrationHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order IntegrationHistories.
  """
  field: IntegrationHistoryOrderField!
}
"""
Properties by which IntegrationHistory connections can be ordered.
"""
enum IntegrationHistoryOrderField {
  name
  kind
}
"""
IntegrationHistoryWhereInput is used for filtering IntegrationHistory objects.
Input was generated by ent.
"""
input IntegrationHistoryWhereInput {
  not: IntegrationHistoryWhereInput
  and: [IntegrationHistoryWhereInput!]
  or: [IntegrationHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: IntegrationHistoryOpType
  operationNEQ: IntegrationHistoryOpType
  operationIn: [IntegrationHistoryOpType!]
  operationNotIn: [IntegrationHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
}
"""
Ordering options for Integration connections
"""
input IntegrationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Integrations.
  """
  field: IntegrationOrderField!
}
"""
Properties by which Integration connections can be ordered.
"""
enum IntegrationOrderField {
  name
  kind
}
"""
IntegrationWhereInput is used for filtering Integration objects.
Input was generated by ent.
"""
input IntegrationWhereInput {
  not: IntegrationWhereInput
  and: [IntegrationWhereInput!]
  or: [IntegrationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  kind field predicates
  """
  kind: String
  kindNEQ: String
  kindIn: [String!]
  kindNotIn: [String!]
  kindGT: String
  kindGTE: String
  kindLT: String
  kindLTE: String
  kindContains: String
  kindHasPrefix: String
  kindHasSuffix: String
  kindIsNil: Boolean
  kindNotNil: Boolean
  kindEqualFold: String
  kindContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  secrets edge predicates
  """
  hasSecrets: Boolean
  hasSecretsWith: [HushWhereInput!]
  """
  oauth2tokens edge predicates
  """
  hasOauth2tokens: Boolean
  hasOauth2tokensWith: [OhAuthTooTokenWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  webhooks edge predicates
  """
  hasWebhooks: Boolean
  hasWebhooksWith: [WebhookWhereInput!]
}
type InternalPolicy implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the policy
  """
  name: String!
  """
  description of the policy
  """
  description: String!
  """
  status of the policy
  """
  status: String
  """
  type of the policy
  """
  policyType: String
  """
  version of the policy
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the policy
  """
  background: String
  """
  json data for the policy document
  """
  details: Map
  controlobjectives: [ControlObjective!]
  controls: [Control!]
  procedures: [Procedure!]
  narratives: [Narrative!]
  tasks: [Task!]
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type InternalPolicyConnection {
  """
  A list of edges.
  """
  edges: [InternalPolicyEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type InternalPolicyEdge {
  """
  The item at the end of the edge.
  """
  node: InternalPolicy
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type InternalPolicyHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: InternalPolicyHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the policy
  """
  name: String!
  """
  description of the policy
  """
  description: String!
  """
  status of the policy
  """
  status: String
  """
  type of the policy
  """
  policyType: String
  """
  version of the policy
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the policy
  """
  background: String
  """
  json data for the policy document
  """
  details: Map
}
"""
A connection to a list of items.
"""
type InternalPolicyHistoryConnection {
  """
  A list of edges.
  """
  edges: [InternalPolicyHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type InternalPolicyHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: InternalPolicyHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
InternalPolicyHistoryOpType is enum for the field operation
"""
enum InternalPolicyHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
InternalPolicyHistoryWhereInput is used for filtering InternalPolicyHistory objects.
Input was generated by ent.
"""
input InternalPolicyHistoryWhereInput {
  not: InternalPolicyHistoryWhereInput
  and: [InternalPolicyHistoryWhereInput!]
  or: [InternalPolicyHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: InternalPolicyHistoryOpType
  operationNEQ: InternalPolicyHistoryOpType
  operationIn: [InternalPolicyHistoryOpType!]
  operationNotIn: [InternalPolicyHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  policy_type field predicates
  """
  policyType: String
  policyTypeNEQ: String
  policyTypeIn: [String!]
  policyTypeNotIn: [String!]
  policyTypeGT: String
  policyTypeGTE: String
  policyTypeLT: String
  policyTypeLTE: String
  policyTypeContains: String
  policyTypeHasPrefix: String
  policyTypeHasSuffix: String
  policyTypeIsNil: Boolean
  policyTypeNotNil: Boolean
  policyTypeEqualFold: String
  policyTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
}
"""
InternalPolicyWhereInput is used for filtering InternalPolicy objects.
Input was generated by ent.
"""
input InternalPolicyWhereInput {
  not: InternalPolicyWhereInput
  and: [InternalPolicyWhereInput!]
  or: [InternalPolicyWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  policy_type field predicates
  """
  policyType: String
  policyTypeNEQ: String
  policyTypeIn: [String!]
  policyTypeNotIn: [String!]
  policyTypeGT: String
  policyTypeGTE: String
  policyTypeLT: String
  policyTypeLTE: String
  policyTypeContains: String
  policyTypeHasPrefix: String
  policyTypeHasSuffix: String
  policyTypeIsNil: Boolean
  policyTypeNotNil: Boolean
  policyTypeEqualFold: String
  policyTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
  """
  controlobjectives edge predicates
  """
  hasControlobjectives: Boolean
  hasControlobjectivesWith: [ControlObjectiveWhereInput!]
  """
  controls edge predicates
  """
  hasControls: Boolean
  hasControlsWith: [ControlWhereInput!]
  """
  procedures edge predicates
  """
  hasProcedures: Boolean
  hasProceduresWith: [ProcedureWhereInput!]
  """
  narratives edge predicates
  """
  hasNarratives: Boolean
  hasNarrativesWith: [NarrativeWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
type Invite implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time
  """
  the email used as input to generate the invitation token and is the destination person the invitation is sent to who is required to accept to join the organization
  """
  recipient: String!
  """
  the status of the invitation
  """
  status: InviteInviteStatus!
  role: InviteRole!
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int!
  """
  the user who initiated the invitation
  """
  requestorID: String
  owner: Organization
  events: [Event!]
}
"""
A connection to a list of items.
"""
type InviteConnection {
  """
  A list of edges.
  """
  edges: [InviteEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type InviteEdge {
  """
  The item at the end of the edge.
  """
  node: Invite
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
InviteInviteStatus is enum for the field status
"""
enum InviteInviteStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.InviteStatus") {
  INVITATION_SENT
  APPROVAL_REQUIRED
  INVITATION_ACCEPTED
  INVITATION_EXPIRED
}
"""
InviteRole is enum for the field role
"""
enum InviteRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
}
"""
InviteWhereInput is used for filtering Invite objects.
Input was generated by ent.
"""
input InviteWhereInput {
  not: InviteWhereInput
  and: [InviteWhereInput!]
  or: [InviteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  expires field predicates
  """
  expires: Time
  expiresNEQ: Time
  expiresIn: [Time!]
  expiresNotIn: [Time!]
  expiresGT: Time
  expiresGTE: Time
  expiresLT: Time
  expiresLTE: Time
  expiresIsNil: Boolean
  expiresNotNil: Boolean
  """
  recipient field predicates
  """
  recipient: String
  recipientNEQ: String
  recipientIn: [String!]
  recipientNotIn: [String!]
  recipientGT: String
  recipientGTE: String
  recipientLT: String
  recipientLTE: String
  recipientContains: String
  recipientHasPrefix: String
  recipientHasSuffix: String
  recipientEqualFold: String
  recipientContainsFold: String
  """
  status field predicates
  """
  status: InviteInviteStatus
  statusNEQ: InviteInviteStatus
  statusIn: [InviteInviteStatus!]
  statusNotIn: [InviteInviteStatus!]
  """
  role field predicates
  """
  role: InviteRole
  roleNEQ: InviteRole
  roleIn: [InviteRole!]
  roleNotIn: [InviteRole!]
  """
  send_attempts field predicates
  """
  sendAttempts: Int
  sendAttemptsNEQ: Int
  sendAttemptsIn: [Int!]
  sendAttemptsNotIn: [Int!]
  sendAttemptsGT: Int
  sendAttemptsGTE: Int
  sendAttemptsLT: Int
  sendAttemptsLTE: Int
  """
  requestor_id field predicates
  """
  requestorID: String
  requestorIDNEQ: String
  requestorIDIn: [String!]
  requestorIDNotIn: [String!]
  requestorIDGT: String
  requestorIDGTE: String
  requestorIDLT: String
  requestorIDLTE: String
  requestorIDContains: String
  requestorIDHasPrefix: String
  requestorIDHasSuffix: String
  requestorIDIsNil: Boolean
  requestorIDNotNil: Boolean
  requestorIDEqualFold: String
  requestorIDContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
"""
A valid JSON string.
"""
scalar JSON
"""
The builtin Map type
"""
scalar Map
type Narrative implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the narrative
  """
  name: String!
  """
  the description of the narrative
  """
  description: String
  """
  which controls are satisfied by the narrative
  """
  satisfies: String
  """
  json data for the narrative document
  """
  details: Map
  policy: [InternalPolicy!]
  control: [Control!]
  procedure: [Procedure!]
  controlobjective: [ControlObjective!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type NarrativeConnection {
  """
  A list of edges.
  """
  edges: [NarrativeEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type NarrativeEdge {
  """
  The item at the end of the edge.
  """
  node: Narrative
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type NarrativeHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: NarrativeHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the narrative
  """
  name: String!
  """
  the description of the narrative
  """
  description: String
  """
  which controls are satisfied by the narrative
  """
  satisfies: String
  """
  json data for the narrative document
  """
  details: Map
}
"""
A connection to a list of items.
"""
type NarrativeHistoryConnection {
  """
  A list of edges.
  """
  edges: [NarrativeHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type NarrativeHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: NarrativeHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
NarrativeHistoryOpType is enum for the field operation
"""
enum NarrativeHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
NarrativeHistoryWhereInput is used for filtering NarrativeHistory objects.
Input was generated by ent.
"""
input NarrativeHistoryWhereInput {
  not: NarrativeHistoryWhereInput
  and: [NarrativeHistoryWhereInput!]
  or: [NarrativeHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: NarrativeHistoryOpType
  operationNEQ: NarrativeHistoryOpType
  operationIn: [NarrativeHistoryOpType!]
  operationNotIn: [NarrativeHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
}
"""
NarrativeWhereInput is used for filtering Narrative objects.
Input was generated by ent.
"""
input NarrativeWhereInput {
  not: NarrativeWhereInput
  and: [NarrativeWhereInput!]
  or: [NarrativeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  policy edge predicates
  """
  hasPolicy: Boolean
  hasPolicyWith: [InternalPolicyWhereInput!]
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  procedure edge predicates
  """
  hasProcedure: Boolean
  hasProcedureWith: [ProcedureWhereInput!]
  """
  controlobjective edge predicates
  """
  hasControlobjective: Boolean
  hasControlobjectiveWith: [ControlObjectiveWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/theopenlane/core/internal/ent/generated.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type Note implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the text of the note
  """
  text: String!
  owner: Organization
  entity: Entity
  subcontrols: [Subcontrol!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type NoteConnection {
  """
  A list of edges.
  """
  edges: [NoteEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type NoteEdge {
  """
  The item at the end of the edge.
  """
  node: Note
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type NoteHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: NoteHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the text of the note
  """
  text: String!
}
"""
A connection to a list of items.
"""
type NoteHistoryConnection {
  """
  A list of edges.
  """
  edges: [NoteHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type NoteHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: NoteHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
NoteHistoryOpType is enum for the field operation
"""
enum NoteHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
NoteHistoryWhereInput is used for filtering NoteHistory objects.
Input was generated by ent.
"""
input NoteHistoryWhereInput {
  not: NoteHistoryWhereInput
  and: [NoteHistoryWhereInput!]
  or: [NoteHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: NoteHistoryOpType
  operationNEQ: NoteHistoryOpType
  operationIn: [NoteHistoryOpType!]
  operationNotIn: [NoteHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  text field predicates
  """
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
}
"""
NoteWhereInput is used for filtering Note objects.
Input was generated by ent.
"""
input NoteWhereInput {
  not: NoteWhereInput
  and: [NoteWhereInput!]
  or: [NoteWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  text field predicates
  """
  text: String
  textNEQ: String
  textIn: [String!]
  textNotIn: [String!]
  textGT: String
  textGTE: String
  textLT: String
  textLTE: String
  textContains: String
  textHasPrefix: String
  textHasSuffix: String
  textEqualFold: String
  textContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  entity edge predicates
  """
  hasEntity: Boolean
  hasEntityWith: [EntityWhereInput!]
  """
  subcontrols edge predicates
  """
  hasSubcontrols: Boolean
  hasSubcontrolsWith: [SubcontrolWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
type OauthProvider implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
  owner: Organization
}
"""
A connection to a list of items.
"""
type OauthProviderConnection {
  """
  A list of edges.
  """
  edges: [OauthProviderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthProviderEdge {
  """
  The item at the end of the edge.
  """
  node: OauthProvider
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OauthProviderHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OauthProviderHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the oauth provider's name
  """
  name: String!
  """
  the client id for the oauth provider
  """
  clientID: String!
  """
  the client secret
  """
  clientSecret: String!
  """
  the redirect url
  """
  redirectURL: String!
  """
  the scopes
  """
  scopes: String!
  """
  the auth url of the provider
  """
  authURL: String!
  """
  the token url of the provider
  """
  tokenURL: String!
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint!
  """
  the URL to request user information by token
  """
  infoURL: String!
}
"""
A connection to a list of items.
"""
type OauthProviderHistoryConnection {
  """
  A list of edges.
  """
  edges: [OauthProviderHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OauthProviderHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OauthProviderHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OauthProviderHistoryOpType is enum for the field operation
"""
enum OauthProviderHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OauthProviderHistoryWhereInput is used for filtering OauthProviderHistory objects.
Input was generated by ent.
"""
input OauthProviderHistoryWhereInput {
  not: OauthProviderHistoryWhereInput
  and: [OauthProviderHistoryWhereInput!]
  or: [OauthProviderHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OauthProviderHistoryOpType
  operationNEQ: OauthProviderHistoryOpType
  operationIn: [OauthProviderHistoryOpType!]
  operationNotIn: [OauthProviderHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesEqualFold: String
  scopesContainsFold: String
  """
  auth_url field predicates
  """
  authURL: String
  authURLNEQ: String
  authURLIn: [String!]
  authURLNotIn: [String!]
  authURLGT: String
  authURLGTE: String
  authURLLT: String
  authURLLTE: String
  authURLContains: String
  authURLHasPrefix: String
  authURLHasSuffix: String
  authURLEqualFold: String
  authURLContainsFold: String
  """
  token_url field predicates
  """
  tokenURL: String
  tokenURLNEQ: String
  tokenURLIn: [String!]
  tokenURLNotIn: [String!]
  tokenURLGT: String
  tokenURLGTE: String
  tokenURLLT: String
  tokenURLLTE: String
  tokenURLContains: String
  tokenURLHasPrefix: String
  tokenURLHasSuffix: String
  tokenURLEqualFold: String
  tokenURLContainsFold: String
  """
  auth_style field predicates
  """
  authStyle: Uint
  authStyleNEQ: Uint
  authStyleIn: [Uint!]
  authStyleNotIn: [Uint!]
  authStyleGT: Uint
  authStyleGTE: Uint
  authStyleLT: Uint
  authStyleLTE: Uint
  """
  info_url field predicates
  """
  infoURL: String
  infoURLNEQ: String
  infoURLIn: [String!]
  infoURLNotIn: [String!]
  infoURLGT: String
  infoURLGTE: String
  infoURLLT: String
  infoURLLTE: String
  infoURLContains: String
  infoURLHasPrefix: String
  infoURLHasSuffix: String
  infoURLEqualFold: String
  infoURLContainsFold: String
}
"""
OauthProviderWhereInput is used for filtering OauthProvider objects.
Input was generated by ent.
"""
input OauthProviderWhereInput {
  not: OauthProviderWhereInput
  and: [OauthProviderWhereInput!]
  or: [OauthProviderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  client_secret field predicates
  """
  clientSecret: String
  clientSecretNEQ: String
  clientSecretIn: [String!]
  clientSecretNotIn: [String!]
  clientSecretGT: String
  clientSecretGTE: String
  clientSecretLT: String
  clientSecretLTE: String
  clientSecretContains: String
  clientSecretHasPrefix: String
  clientSecretHasSuffix: String
  clientSecretEqualFold: String
  clientSecretContainsFold: String
  """
  redirect_url field predicates
  """
  redirectURL: String
  redirectURLNEQ: String
  redirectURLIn: [String!]
  redirectURLNotIn: [String!]
  redirectURLGT: String
  redirectURLGTE: String
  redirectURLLT: String
  redirectURLLTE: String
  redirectURLContains: String
  redirectURLHasPrefix: String
  redirectURLHasSuffix: String
  redirectURLEqualFold: String
  redirectURLContainsFold: String
  """
  scopes field predicates
  """
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesEqualFold: String
  scopesContainsFold: String
  """
  auth_url field predicates
  """
  authURL: String
  authURLNEQ: String
  authURLIn: [String!]
  authURLNotIn: [String!]
  authURLGT: String
  authURLGTE: String
  authURLLT: String
  authURLLTE: String
  authURLContains: String
  authURLHasPrefix: String
  authURLHasSuffix: String
  authURLEqualFold: String
  authURLContainsFold: String
  """
  token_url field predicates
  """
  tokenURL: String
  tokenURLNEQ: String
  tokenURLIn: [String!]
  tokenURLNotIn: [String!]
  tokenURLGT: String
  tokenURLGTE: String
  tokenURLLT: String
  tokenURLLTE: String
  tokenURLContains: String
  tokenURLHasPrefix: String
  tokenURLHasSuffix: String
  tokenURLEqualFold: String
  tokenURLContainsFold: String
  """
  auth_style field predicates
  """
  authStyle: Uint
  authStyleNEQ: Uint
  authStyleIn: [Uint!]
  authStyleNotIn: [Uint!]
  authStyleGT: Uint
  authStyleGTE: Uint
  authStyleLT: Uint
  authStyleLTE: Uint
  """
  info_url field predicates
  """
  infoURL: String
  infoURLNEQ: String
  infoURLIn: [String!]
  infoURLNotIn: [String!]
  infoURLGT: String
  infoURLGTE: String
  infoURLLT: String
  infoURLLTE: String
  infoURLContains: String
  infoURLHasPrefix: String
  infoURLHasSuffix: String
  infoURLEqualFold: String
  infoURLContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}
type OhAuthTooToken implements Node {
  id: ID!
  """
  tags associated with the object
  """
  tags: [String!]
  clientID: String!
  scopes: [String!]
  nonce: String!
  claimsUserID: String!
  claimsUsername: String!
  claimsEmail: String!
  claimsEmailVerified: Boolean!
  claimsGroups: [String!]
  claimsPreferredUsername: String!
  connectorID: String!
  connectorData: [String!]
  lastUsed: Time!
  integration: [Integration!]
  events: [Event!]
}
"""
A connection to a list of items.
"""
type OhAuthTooTokenConnection {
  """
  A list of edges.
  """
  edges: [OhAuthTooTokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OhAuthTooTokenEdge {
  """
  The item at the end of the edge.
  """
  node: OhAuthTooToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OhAuthTooTokenWhereInput is used for filtering OhAuthTooToken objects.
Input was generated by ent.
"""
input OhAuthTooTokenWhereInput {
  not: OhAuthTooTokenWhereInput
  and: [OhAuthTooTokenWhereInput!]
  or: [OhAuthTooTokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  client_id field predicates
  """
  clientID: String
  clientIDNEQ: String
  clientIDIn: [String!]
  clientIDNotIn: [String!]
  clientIDGT: String
  clientIDGTE: String
  clientIDLT: String
  clientIDLTE: String
  clientIDContains: String
  clientIDHasPrefix: String
  clientIDHasSuffix: String
  clientIDEqualFold: String
  clientIDContainsFold: String
  """
  nonce field predicates
  """
  nonce: String
  nonceNEQ: String
  nonceIn: [String!]
  nonceNotIn: [String!]
  nonceGT: String
  nonceGTE: String
  nonceLT: String
  nonceLTE: String
  nonceContains: String
  nonceHasPrefix: String
  nonceHasSuffix: String
  nonceEqualFold: String
  nonceContainsFold: String
  """
  claims_user_id field predicates
  """
  claimsUserID: String
  claimsUserIDNEQ: String
  claimsUserIDIn: [String!]
  claimsUserIDNotIn: [String!]
  claimsUserIDGT: String
  claimsUserIDGTE: String
  claimsUserIDLT: String
  claimsUserIDLTE: String
  claimsUserIDContains: String
  claimsUserIDHasPrefix: String
  claimsUserIDHasSuffix: String
  claimsUserIDEqualFold: String
  claimsUserIDContainsFold: String
  """
  claims_username field predicates
  """
  claimsUsername: String
  claimsUsernameNEQ: String
  claimsUsernameIn: [String!]
  claimsUsernameNotIn: [String!]
  claimsUsernameGT: String
  claimsUsernameGTE: String
  claimsUsernameLT: String
  claimsUsernameLTE: String
  claimsUsernameContains: String
  claimsUsernameHasPrefix: String
  claimsUsernameHasSuffix: String
  claimsUsernameEqualFold: String
  claimsUsernameContainsFold: String
  """
  claims_email field predicates
  """
  claimsEmail: String
  claimsEmailNEQ: String
  claimsEmailIn: [String!]
  claimsEmailNotIn: [String!]
  claimsEmailGT: String
  claimsEmailGTE: String
  claimsEmailLT: String
  claimsEmailLTE: String
  claimsEmailContains: String
  claimsEmailHasPrefix: String
  claimsEmailHasSuffix: String
  claimsEmailEqualFold: String
  claimsEmailContainsFold: String
  """
  claims_email_verified field predicates
  """
  claimsEmailVerified: Boolean
  claimsEmailVerifiedNEQ: Boolean
  """
  claims_preferred_username field predicates
  """
  claimsPreferredUsername: String
  claimsPreferredUsernameNEQ: String
  claimsPreferredUsernameIn: [String!]
  claimsPreferredUsernameNotIn: [String!]
  claimsPreferredUsernameGT: String
  claimsPreferredUsernameGTE: String
  claimsPreferredUsernameLT: String
  claimsPreferredUsernameLTE: String
  claimsPreferredUsernameContains: String
  claimsPreferredUsernameHasPrefix: String
  claimsPreferredUsernameHasSuffix: String
  claimsPreferredUsernameEqualFold: String
  claimsPreferredUsernameContainsFold: String
  """
  connector_id field predicates
  """
  connectorID: String
  connectorIDNEQ: String
  connectorIDIn: [String!]
  connectorIDNotIn: [String!]
  connectorIDGT: String
  connectorIDGTE: String
  connectorIDLT: String
  connectorIDLTE: String
  connectorIDContains: String
  connectorIDHasPrefix: String
  connectorIDHasSuffix: String
  connectorIDEqualFold: String
  connectorIDContainsFold: String
  """
  last_used field predicates
  """
  lastUsed: Time
  lastUsedNEQ: Time
  lastUsedIn: [Time!]
  lastUsedNotIn: [Time!]
  lastUsedGT: Time
  lastUsedGTE: Time
  lastUsedLT: Time
  lastUsedLTE: Time
  """
  integration edge predicates
  """
  hasIntegration: Boolean
  hasIntegrationWith: [IntegrationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
type OrgMembership implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: OrgMembershipRole!
  organizationID: ID!
  userID: ID!
  organization: Organization!
  user: User!
  events: [Event!]
}
"""
A connection to a list of items.
"""
type OrgMembershipConnection {
  """
  A list of edges.
  """
  edges: [OrgMembershipEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrgMembershipEdge {
  """
  The item at the end of the edge.
  """
  node: OrgMembership
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrgMembershipHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrgMembershipHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: OrgMembershipHistoryRole!
  organizationID: String!
  userID: String!
}
"""
A connection to a list of items.
"""
type OrgMembershipHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrgMembershipHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrgMembershipHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrgMembershipHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrgMembershipHistoryOpType is enum for the field operation
"""
enum OrgMembershipHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OrgMembershipHistoryRole is enum for the field role
"""
enum OrgMembershipHistoryRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
  OWNER
}
"""
OrgMembershipHistoryWhereInput is used for filtering OrgMembershipHistory objects.
Input was generated by ent.
"""
input OrgMembershipHistoryWhereInput {
  not: OrgMembershipHistoryWhereInput
  and: [OrgMembershipHistoryWhereInput!]
  or: [OrgMembershipHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrgMembershipHistoryOpType
  operationNEQ: OrgMembershipHistoryOpType
  operationIn: [OrgMembershipHistoryOpType!]
  operationNotIn: [OrgMembershipHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: OrgMembershipHistoryRole
  roleNEQ: OrgMembershipHistoryRole
  roleIn: [OrgMembershipHistoryRole!]
  roleNotIn: [OrgMembershipHistoryRole!]
  """
  organization_id field predicates
  """
  organizationID: String
  organizationIDNEQ: String
  organizationIDIn: [String!]
  organizationIDNotIn: [String!]
  organizationIDGT: String
  organizationIDGTE: String
  organizationIDLT: String
  organizationIDLTE: String
  organizationIDContains: String
  organizationIDHasPrefix: String
  organizationIDHasSuffix: String
  organizationIDEqualFold: String
  organizationIDContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDEqualFold: String
  userIDContainsFold: String
}
"""
OrgMembershipRole is enum for the field role
"""
enum OrgMembershipRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
  OWNER
}
"""
OrgMembershipWhereInput is used for filtering OrgMembership objects.
Input was generated by ent.
"""
input OrgMembershipWhereInput {
  not: OrgMembershipWhereInput
  and: [OrgMembershipWhereInput!]
  or: [OrgMembershipWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: OrgMembershipRole
  roleNEQ: OrgMembershipRole
  roleIn: [OrgMembershipRole!]
  roleNotIn: [OrgMembershipRole!]
}
type Organization implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String!
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean!
  parent: Organization
  children(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Organizations returned from the connection.
    """
    orderBy: OrganizationOrder

    """
    Filtering options for Organizations returned from the connection.
    """
    where: OrganizationWhereInput
  ): OrganizationConnection!
  groups: [Group!]
  templates: [Template!]
  integrations: [Integration!]
  setting: OrganizationSetting
  documentdata: [DocumentData!]
  entitlements: [Entitlement!]
  organizationEntitlement: [Entitlement!]
  personalAccessTokens: [PersonalAccessToken!]
  apiTokens: [APIToken!]
  oauthprovider: [OauthProvider!]
  users: [User!]
  invites: [Invite!]
  subscribers: [Subscriber!]
  webhooks: [Webhook!]
  events: [Event!]
  secrets: [Hush!]
  features: [Feature!]
  files: [File!]
  entitlementplans: [EntitlementPlan!]
  entitlementplanfeatures: [EntitlementPlanFeature!]
  entities: [Entity!]
  entitytypes: [EntityType!]
  contacts: [Contact!]
  notes: [Note!]
  tasks: [Task!]
  programs: [Program!]
  members: [OrgMembership!]
}
"""
A connection to a list of items.
"""
type OrganizationConnection {
  """
  A list of edges.
  """
  edges: [OrganizationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationEdge {
  """
  The item at the end of the edge.
  """
  node: Organization
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrganizationHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrganizationHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the name of the organization
  """
  name: String!
  """
  The organization's displayed 'friendly' name
  """
  displayName: String!
  """
  An optional description of the organization
  """
  description: String
  """
  orgs directly associated with a user
  """
  personalOrg: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  Whether the organization has a dedicated database
  """
  dedicatedDb: Boolean!
}
"""
A connection to a list of items.
"""
type OrganizationHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrganizationHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrganizationHistoryOpType is enum for the field operation
"""
enum OrganizationHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for OrganizationHistory connections
"""
input OrganizationHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order OrganizationHistories.
  """
  field: OrganizationHistoryOrderField!
}
"""
Properties by which OrganizationHistory connections can be ordered.
"""
enum OrganizationHistoryOrderField {
  name
  display_name
}
"""
OrganizationHistoryWhereInput is used for filtering OrganizationHistory objects.
Input was generated by ent.
"""
input OrganizationHistoryWhereInput {
  not: OrganizationHistoryWhereInput
  and: [OrganizationHistoryWhereInput!]
  or: [OrganizationHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrganizationHistoryOpType
  operationNEQ: OrganizationHistoryOpType
  operationIn: [OrganizationHistoryOpType!]
  operationNotIn: [OrganizationHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  parent_organization_id field predicates
  """
  parentOrganizationID: ID
  parentOrganizationIDNEQ: ID
  parentOrganizationIDIn: [ID!]
  parentOrganizationIDNotIn: [ID!]
  parentOrganizationIDGT: ID
  parentOrganizationIDGTE: ID
  parentOrganizationIDLT: ID
  parentOrganizationIDLTE: ID
  parentOrganizationIDContains: ID
  parentOrganizationIDHasPrefix: ID
  parentOrganizationIDHasSuffix: ID
  parentOrganizationIDIsNil: Boolean
  parentOrganizationIDNotNil: Boolean
  parentOrganizationIDEqualFold: ID
  parentOrganizationIDContainsFold: ID
  """
  personal_org field predicates
  """
  personalOrg: Boolean
  personalOrgNEQ: Boolean
  personalOrgIsNil: Boolean
  personalOrgNotNil: Boolean
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
}
"""
Ordering options for Organization connections
"""
input OrganizationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Organizations.
  """
  field: OrganizationOrderField!
}
"""
Properties by which Organization connections can be ordered.
"""
enum OrganizationOrderField {
  name
  display_name
}
type OrganizationSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  """
  the ID of the organization the settings belong to
  """
  organizationID: ID
  organization: Organization
  files: [File!]
}
"""
A connection to a list of items.
"""
type OrganizationSettingConnection {
  """
  A list of edges.
  """
  edges: [OrganizationSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationSettingEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrganizationSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: OrganizationSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  domains associated with the organization
  """
  domains: [String!]
  """
  Name of the person to contact for billing
  """
  billingContact: String
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  """
  Phone number to contact for billing
  """
  billingPhone: String
  """
  Address to send billing information to
  """
  billingAddress: String
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingHistoryRegion
  """
  the ID of the organization the settings belong to
  """
  organizationID: String
}
"""
A connection to a list of items.
"""
type OrganizationSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [OrganizationSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrganizationSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: OrganizationSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrganizationSettingHistoryOpType is enum for the field operation
"""
enum OrganizationSettingHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
OrganizationSettingHistoryRegion is enum for the field geo_location
"""
enum OrganizationSettingHistoryRegion @goModel(model: "github.com/theopenlane/core/pkg/enums.Region") {
  AMER
  EMEA
  APAC
}
"""
OrganizationSettingHistoryWhereInput is used for filtering OrganizationSettingHistory objects.
Input was generated by ent.
"""
input OrganizationSettingHistoryWhereInput {
  not: OrganizationSettingHistoryWhereInput
  and: [OrganizationSettingHistoryWhereInput!]
  or: [OrganizationSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: OrganizationSettingHistoryOpType
  operationNEQ: OrganizationSettingHistoryOpType
  operationIn: [OrganizationSettingHistoryOpType!]
  operationNotIn: [OrganizationSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  billing_contact field predicates
  """
  billingContact: String
  billingContactNEQ: String
  billingContactIn: [String!]
  billingContactNotIn: [String!]
  billingContactGT: String
  billingContactGTE: String
  billingContactLT: String
  billingContactLTE: String
  billingContactContains: String
  billingContactHasPrefix: String
  billingContactHasSuffix: String
  billingContactIsNil: Boolean
  billingContactNotNil: Boolean
  billingContactEqualFold: String
  billingContactContainsFold: String
  """
  billing_email field predicates
  """
  billingEmail: String
  billingEmailNEQ: String
  billingEmailIn: [String!]
  billingEmailNotIn: [String!]
  billingEmailGT: String
  billingEmailGTE: String
  billingEmailLT: String
  billingEmailLTE: String
  billingEmailContains: String
  billingEmailHasPrefix: String
  billingEmailHasSuffix: String
  billingEmailIsNil: Boolean
  billingEmailNotNil: Boolean
  billingEmailEqualFold: String
  billingEmailContainsFold: String
  """
  billing_phone field predicates
  """
  billingPhone: String
  billingPhoneNEQ: String
  billingPhoneIn: [String!]
  billingPhoneNotIn: [String!]
  billingPhoneGT: String
  billingPhoneGTE: String
  billingPhoneLT: String
  billingPhoneLTE: String
  billingPhoneContains: String
  billingPhoneHasPrefix: String
  billingPhoneHasSuffix: String
  billingPhoneIsNil: Boolean
  billingPhoneNotNil: Boolean
  billingPhoneEqualFold: String
  billingPhoneContainsFold: String
  """
  billing_address field predicates
  """
  billingAddress: String
  billingAddressNEQ: String
  billingAddressIn: [String!]
  billingAddressNotIn: [String!]
  billingAddressGT: String
  billingAddressGTE: String
  billingAddressLT: String
  billingAddressLTE: String
  billingAddressContains: String
  billingAddressHasPrefix: String
  billingAddressHasSuffix: String
  billingAddressIsNil: Boolean
  billingAddressNotNil: Boolean
  billingAddressEqualFold: String
  billingAddressContainsFold: String
  """
  tax_identifier field predicates
  """
  taxIdentifier: String
  taxIdentifierNEQ: String
  taxIdentifierIn: [String!]
  taxIdentifierNotIn: [String!]
  taxIdentifierGT: String
  taxIdentifierGTE: String
  taxIdentifierLT: String
  taxIdentifierLTE: String
  taxIdentifierContains: String
  taxIdentifierHasPrefix: String
  taxIdentifierHasSuffix: String
  taxIdentifierIsNil: Boolean
  taxIdentifierNotNil: Boolean
  taxIdentifierEqualFold: String
  taxIdentifierContainsFold: String
  """
  geo_location field predicates
  """
  geoLocation: OrganizationSettingHistoryRegion
  geoLocationNEQ: OrganizationSettingHistoryRegion
  geoLocationIn: [OrganizationSettingHistoryRegion!]
  geoLocationNotIn: [OrganizationSettingHistoryRegion!]
  geoLocationIsNil: Boolean
  geoLocationNotNil: Boolean
  """
  organization_id field predicates
  """
  organizationID: String
  organizationIDNEQ: String
  organizationIDIn: [String!]
  organizationIDNotIn: [String!]
  organizationIDGT: String
  organizationIDGTE: String
  organizationIDLT: String
  organizationIDLTE: String
  organizationIDContains: String
  organizationIDHasPrefix: String
  organizationIDHasSuffix: String
  organizationIDIsNil: Boolean
  organizationIDNotNil: Boolean
  organizationIDEqualFold: String
  organizationIDContainsFold: String
}
"""
OrganizationSettingRegion is enum for the field geo_location
"""
enum OrganizationSettingRegion @goModel(model: "github.com/theopenlane/core/pkg/enums.Region") {
  AMER
  EMEA
  APAC
}
"""
OrganizationSettingWhereInput is used for filtering OrganizationSetting objects.
Input was generated by ent.
"""
input OrganizationSettingWhereInput {
  not: OrganizationSettingWhereInput
  and: [OrganizationSettingWhereInput!]
  or: [OrganizationSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  billing_contact field predicates
  """
  billingContact: String
  billingContactNEQ: String
  billingContactIn: [String!]
  billingContactNotIn: [String!]
  billingContactGT: String
  billingContactGTE: String
  billingContactLT: String
  billingContactLTE: String
  billingContactContains: String
  billingContactHasPrefix: String
  billingContactHasSuffix: String
  billingContactIsNil: Boolean
  billingContactNotNil: Boolean
  billingContactEqualFold: String
  billingContactContainsFold: String
  """
  billing_email field predicates
  """
  billingEmail: String
  billingEmailNEQ: String
  billingEmailIn: [String!]
  billingEmailNotIn: [String!]
  billingEmailGT: String
  billingEmailGTE: String
  billingEmailLT: String
  billingEmailLTE: String
  billingEmailContains: String
  billingEmailHasPrefix: String
  billingEmailHasSuffix: String
  billingEmailIsNil: Boolean
  billingEmailNotNil: Boolean
  billingEmailEqualFold: String
  billingEmailContainsFold: String
  """
  billing_phone field predicates
  """
  billingPhone: String
  billingPhoneNEQ: String
  billingPhoneIn: [String!]
  billingPhoneNotIn: [String!]
  billingPhoneGT: String
  billingPhoneGTE: String
  billingPhoneLT: String
  billingPhoneLTE: String
  billingPhoneContains: String
  billingPhoneHasPrefix: String
  billingPhoneHasSuffix: String
  billingPhoneIsNil: Boolean
  billingPhoneNotNil: Boolean
  billingPhoneEqualFold: String
  billingPhoneContainsFold: String
  """
  billing_address field predicates
  """
  billingAddress: String
  billingAddressNEQ: String
  billingAddressIn: [String!]
  billingAddressNotIn: [String!]
  billingAddressGT: String
  billingAddressGTE: String
  billingAddressLT: String
  billingAddressLTE: String
  billingAddressContains: String
  billingAddressHasPrefix: String
  billingAddressHasSuffix: String
  billingAddressIsNil: Boolean
  billingAddressNotNil: Boolean
  billingAddressEqualFold: String
  billingAddressContainsFold: String
  """
  tax_identifier field predicates
  """
  taxIdentifier: String
  taxIdentifierNEQ: String
  taxIdentifierIn: [String!]
  taxIdentifierNotIn: [String!]
  taxIdentifierGT: String
  taxIdentifierGTE: String
  taxIdentifierLT: String
  taxIdentifierLTE: String
  taxIdentifierContains: String
  taxIdentifierHasPrefix: String
  taxIdentifierHasSuffix: String
  taxIdentifierIsNil: Boolean
  taxIdentifierNotNil: Boolean
  taxIdentifierEqualFold: String
  taxIdentifierContainsFold: String
  """
  geo_location field predicates
  """
  geoLocation: OrganizationSettingRegion
  geoLocationNEQ: OrganizationSettingRegion
  geoLocationIn: [OrganizationSettingRegion!]
  geoLocationNotIn: [OrganizationSettingRegion!]
  geoLocationIsNil: Boolean
  geoLocationNotNil: Boolean
  """
  organization_id field predicates
  """
  organizationID: ID
  organizationIDNEQ: ID
  organizationIDIn: [ID!]
  organizationIDNotIn: [ID!]
  organizationIDGT: ID
  organizationIDGTE: ID
  organizationIDLT: ID
  organizationIDLTE: ID
  organizationIDContains: ID
  organizationIDHasPrefix: ID
  organizationIDHasSuffix: ID
  organizationIDIsNil: Boolean
  organizationIDNotNil: Boolean
  organizationIDEqualFold: ID
  organizationIDContainsFold: ID
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
  not: OrganizationWhereInput
  and: [OrganizationWhereInput!]
  or: [OrganizationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  parent_organization_id field predicates
  """
  parentOrganizationID: ID
  parentOrganizationIDNEQ: ID
  parentOrganizationIDIn: [ID!]
  parentOrganizationIDNotIn: [ID!]
  parentOrganizationIDGT: ID
  parentOrganizationIDGTE: ID
  parentOrganizationIDLT: ID
  parentOrganizationIDLTE: ID
  parentOrganizationIDContains: ID
  parentOrganizationIDHasPrefix: ID
  parentOrganizationIDHasSuffix: ID
  parentOrganizationIDIsNil: Boolean
  parentOrganizationIDNotNil: Boolean
  parentOrganizationIDEqualFold: ID
  parentOrganizationIDContainsFold: ID
  """
  personal_org field predicates
  """
  personalOrg: Boolean
  personalOrgNEQ: Boolean
  personalOrgIsNil: Boolean
  personalOrgNotNil: Boolean
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  parent edge predicates
  """
  hasParent: Boolean
  hasParentWith: [OrganizationWhereInput!]
  """
  children edge predicates
  """
  hasChildren: Boolean
  hasChildrenWith: [OrganizationWhereInput!]
  """
  groups edge predicates
  """
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  """
  templates edge predicates
  """
  hasTemplates: Boolean
  hasTemplatesWith: [TemplateWhereInput!]
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [OrganizationSettingWhereInput!]
  """
  documentdata edge predicates
  """
  hasDocumentdata: Boolean
  hasDocumentdataWith: [DocumentDataWhereInput!]
  """
  entitlements edge predicates
  """
  hasEntitlements: Boolean
  hasEntitlementsWith: [EntitlementWhereInput!]
  """
  organization_entitlement edge predicates
  """
  hasOrganizationEntitlement: Boolean
  hasOrganizationEntitlementWith: [EntitlementWhereInput!]
  """
  personal_access_tokens edge predicates
  """
  hasPersonalAccessTokens: Boolean
  hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
  """
  api_tokens edge predicates
  """
  hasAPITokens: Boolean
  hasAPITokensWith: [APITokenWhereInput!]
  """
  oauthprovider edge predicates
  """
  hasOauthprovider: Boolean
  hasOauthproviderWith: [OauthProviderWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  invites edge predicates
  """
  hasInvites: Boolean
  hasInvitesWith: [InviteWhereInput!]
  """
  subscribers edge predicates
  """
  hasSubscribers: Boolean
  hasSubscribersWith: [SubscriberWhereInput!]
  """
  webhooks edge predicates
  """
  hasWebhooks: Boolean
  hasWebhooksWith: [WebhookWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  secrets edge predicates
  """
  hasSecrets: Boolean
  hasSecretsWith: [HushWhereInput!]
  """
  features edge predicates
  """
  hasFeatures: Boolean
  hasFeaturesWith: [FeatureWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
  """
  entitlementplans edge predicates
  """
  hasEntitlementplans: Boolean
  hasEntitlementplansWith: [EntitlementPlanWhereInput!]
  """
  entitlementplanfeatures edge predicates
  """
  hasEntitlementplanfeatures: Boolean
  hasEntitlementplanfeaturesWith: [EntitlementPlanFeatureWhereInput!]
  """
  entities edge predicates
  """
  hasEntities: Boolean
  hasEntitiesWith: [EntityWhereInput!]
  """
  entitytypes edge predicates
  """
  hasEntitytypes: Boolean
  hasEntitytypesWith: [EntityTypeWhereInput!]
  """
  contacts edge predicates
  """
  hasContacts: Boolean
  hasContactsWith: [ContactWhereInput!]
  """
  notes edge predicates
  """
  hasNotes: Boolean
  hasNotesWith: [NoteWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
  """
  members edge predicates
  """
  hasMembers: Boolean
  hasMembersWith: [OrgMembershipWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type PersonalAccessToken implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name associated with the token
  """
  name: String!
  token: String!
  """
  when the token expires
  """
  expiresAt: Time
  """
  a description of the token's purpose
  """
  description: String
  scopes: [String!]
  lastUsedAt: Time
  owner: User!
  """
  the organization(s) the token is associated with
  """
  organizations: [Organization!]
  events: [Event!]
}
"""
A connection to a list of items.
"""
type PersonalAccessTokenConnection {
  """
  A list of edges.
  """
  edges: [PersonalAccessTokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PersonalAccessTokenEdge {
  """
  The item at the end of the edge.
  """
  node: PersonalAccessToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PersonalAccessTokenWhereInput is used for filtering PersonalAccessToken objects.
Input was generated by ent.
"""
input PersonalAccessTokenWhereInput {
  not: PersonalAccessTokenWhereInput
  and: [PersonalAccessTokenWhereInput!]
  or: [PersonalAccessTokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  expires_at field predicates
  """
  expiresAt: Time
  expiresAtNEQ: Time
  expiresAtIn: [Time!]
  expiresAtNotIn: [Time!]
  expiresAtGT: Time
  expiresAtGTE: Time
  expiresAtLT: Time
  expiresAtLTE: Time
  expiresAtIsNil: Boolean
  expiresAtNotNil: Boolean
  """
  last_used_at field predicates
  """
  lastUsedAt: Time
  lastUsedAtNEQ: Time
  lastUsedAtIn: [Time!]
  lastUsedAtNotIn: [Time!]
  lastUsedAtGT: Time
  lastUsedAtGTE: Time
  lastUsedAtLT: Time
  lastUsedAtLTE: Time
  lastUsedAtIsNil: Boolean
  lastUsedAtNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
  """
  organizations edge predicates
  """
  hasOrganizations: Boolean
  hasOrganizationsWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
type Procedure implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the procedure
  """
  name: String!
  """
  description of the procedure
  """
  description: String
  """
  status of the procedure
  """
  status: String
  """
  type of the procedure
  """
  procedureType: String
  """
  version of the procedure
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the procedure
  """
  background: String
  """
  which controls are satisfied by the procedure
  """
  satisfies: String
  """
  json data for the procedure document
  """
  details: Map
  control: [Control!]
  internalpolicy: [InternalPolicy!]
  narratives: [Narrative!]
  risks: [Risk!]
  tasks: [Task!]
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type ProcedureConnection {
  """
  A list of edges.
  """
  edges: [ProcedureEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProcedureEdge {
  """
  The item at the end of the edge.
  """
  node: Procedure
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ProcedureHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ProcedureHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the procedure
  """
  name: String!
  """
  description of the procedure
  """
  description: String
  """
  status of the procedure
  """
  status: String
  """
  type of the procedure
  """
  procedureType: String
  """
  version of the procedure
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the procedure
  """
  background: String
  """
  which controls are satisfied by the procedure
  """
  satisfies: String
  """
  json data for the procedure document
  """
  details: Map
}
"""
A connection to a list of items.
"""
type ProcedureHistoryConnection {
  """
  A list of edges.
  """
  edges: [ProcedureHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProcedureHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ProcedureHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProcedureHistoryOpType is enum for the field operation
"""
enum ProcedureHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ProcedureHistoryWhereInput is used for filtering ProcedureHistory objects.
Input was generated by ent.
"""
input ProcedureHistoryWhereInput {
  not: ProcedureHistoryWhereInput
  and: [ProcedureHistoryWhereInput!]
  or: [ProcedureHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ProcedureHistoryOpType
  operationNEQ: ProcedureHistoryOpType
  operationIn: [ProcedureHistoryOpType!]
  operationNotIn: [ProcedureHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  procedure_type field predicates
  """
  procedureType: String
  procedureTypeNEQ: String
  procedureTypeIn: [String!]
  procedureTypeNotIn: [String!]
  procedureTypeGT: String
  procedureTypeGTE: String
  procedureTypeLT: String
  procedureTypeLTE: String
  procedureTypeContains: String
  procedureTypeHasPrefix: String
  procedureTypeHasSuffix: String
  procedureTypeIsNil: Boolean
  procedureTypeNotNil: Boolean
  procedureTypeEqualFold: String
  procedureTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
}
"""
ProcedureWhereInput is used for filtering Procedure objects.
Input was generated by ent.
"""
input ProcedureWhereInput {
  not: ProcedureWhereInput
  and: [ProcedureWhereInput!]
  or: [ProcedureWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  procedure_type field predicates
  """
  procedureType: String
  procedureTypeNEQ: String
  procedureTypeIn: [String!]
  procedureTypeNotIn: [String!]
  procedureTypeGT: String
  procedureTypeGTE: String
  procedureTypeLT: String
  procedureTypeLTE: String
  procedureTypeContains: String
  procedureTypeHasPrefix: String
  procedureTypeHasSuffix: String
  procedureTypeIsNil: Boolean
  procedureTypeNotNil: Boolean
  procedureTypeEqualFold: String
  procedureTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  internalpolicy edge predicates
  """
  hasInternalpolicy: Boolean
  hasInternalpolicyWith: [InternalPolicyWhereInput!]
  """
  narratives edge predicates
  """
  hasNarratives: Boolean
  hasNarrativesWith: [NarrativeWhereInput!]
  """
  risks edge predicates
  """
  hasRisks: Boolean
  hasRisksWith: [RiskWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
type Program implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the program
  """
  name: String!
  """
  the description of the program
  """
  description: String
  """
  the status of the program
  """
  status: ProgramProgramStatus!
  """
  the start date of the period
  """
  startDate: Time
  """
  the end date of the period
  """
  endDate: Time
  """
  is the program ready for the auditor
  """
  auditorReady: Boolean!
  """
  can the auditor write comments
  """
  auditorWriteComments: Boolean!
  """
  can the auditor read comments
  """
  auditorReadComments: Boolean!
  owner: Organization
  controls: [Control!]
  subcontrols: [Subcontrol!]
  controlobjectives: [ControlObjective!]
  policies: [InternalPolicy!]
  procedures: [Procedure!]
  risks: [Risk!]
  tasks: [Task!]
  notes: [Note!]
  files: [File!]
  narratives: [Narrative!]
  actionplans: [ActionPlan!]
  """
  the framework(s) that the program is based on
  """
  standards: [Standard!]
  users: [User!]
  members: [ProgramMembership!]
}
"""
A connection to a list of items.
"""
type ProgramConnection {
  """
  A list of edges.
  """
  edges: [ProgramEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProgramEdge {
  """
  The item at the end of the edge.
  """
  node: Program
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ProgramHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ProgramHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the program
  """
  name: String!
  """
  the description of the program
  """
  description: String
  """
  the status of the program
  """
  status: ProgramHistoryProgramStatus!
  """
  the start date of the period
  """
  startDate: Time
  """
  the end date of the period
  """
  endDate: Time
  """
  is the program ready for the auditor
  """
  auditorReady: Boolean!
  """
  can the auditor write comments
  """
  auditorWriteComments: Boolean!
  """
  can the auditor read comments
  """
  auditorReadComments: Boolean!
}
"""
A connection to a list of items.
"""
type ProgramHistoryConnection {
  """
  A list of edges.
  """
  edges: [ProgramHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProgramHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ProgramHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProgramHistoryOpType is enum for the field operation
"""
enum ProgramHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ProgramHistoryProgramStatus is enum for the field status
"""
enum ProgramHistoryProgramStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.ProgramStatus") {
  NOT_STARTED
  IN_PROGRESS
  READY_FOR_AUDITOR
  COMPLETED
  ACTION_REQUIRED
}
"""
ProgramHistoryWhereInput is used for filtering ProgramHistory objects.
Input was generated by ent.
"""
input ProgramHistoryWhereInput {
  not: ProgramHistoryWhereInput
  and: [ProgramHistoryWhereInput!]
  or: [ProgramHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ProgramHistoryOpType
  operationNEQ: ProgramHistoryOpType
  operationIn: [ProgramHistoryOpType!]
  operationNotIn: [ProgramHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: ProgramHistoryProgramStatus
  statusNEQ: ProgramHistoryProgramStatus
  statusIn: [ProgramHistoryProgramStatus!]
  statusNotIn: [ProgramHistoryProgramStatus!]
  """
  start_date field predicates
  """
  startDate: Time
  startDateNEQ: Time
  startDateIn: [Time!]
  startDateNotIn: [Time!]
  startDateGT: Time
  startDateGTE: Time
  startDateLT: Time
  startDateLTE: Time
  startDateIsNil: Boolean
  startDateNotNil: Boolean
  """
  end_date field predicates
  """
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  """
  auditor_ready field predicates
  """
  auditorReady: Boolean
  auditorReadyNEQ: Boolean
  """
  auditor_write_comments field predicates
  """
  auditorWriteComments: Boolean
  auditorWriteCommentsNEQ: Boolean
  """
  auditor_read_comments field predicates
  """
  auditorReadComments: Boolean
  auditorReadCommentsNEQ: Boolean
}
type ProgramMembership implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: ProgramMembershipRole!
  programID: ID!
  userID: ID!
  program: Program!
  user: User!
}
"""
A connection to a list of items.
"""
type ProgramMembershipConnection {
  """
  A list of edges.
  """
  edges: [ProgramMembershipEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProgramMembershipEdge {
  """
  The item at the end of the edge.
  """
  node: ProgramMembership
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ProgramMembershipHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: ProgramMembershipHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  role: ProgramMembershipHistoryRole!
  programID: String!
  userID: String!
}
"""
A connection to a list of items.
"""
type ProgramMembershipHistoryConnection {
  """
  A list of edges.
  """
  edges: [ProgramMembershipHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProgramMembershipHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ProgramMembershipHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProgramMembershipHistoryOpType is enum for the field operation
"""
enum ProgramMembershipHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
ProgramMembershipHistoryRole is enum for the field role
"""
enum ProgramMembershipHistoryRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
}
"""
ProgramMembershipHistoryWhereInput is used for filtering ProgramMembershipHistory objects.
Input was generated by ent.
"""
input ProgramMembershipHistoryWhereInput {
  not: ProgramMembershipHistoryWhereInput
  and: [ProgramMembershipHistoryWhereInput!]
  or: [ProgramMembershipHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: ProgramMembershipHistoryOpType
  operationNEQ: ProgramMembershipHistoryOpType
  operationIn: [ProgramMembershipHistoryOpType!]
  operationNotIn: [ProgramMembershipHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: ProgramMembershipHistoryRole
  roleNEQ: ProgramMembershipHistoryRole
  roleIn: [ProgramMembershipHistoryRole!]
  roleNotIn: [ProgramMembershipHistoryRole!]
  """
  program_id field predicates
  """
  programID: String
  programIDNEQ: String
  programIDIn: [String!]
  programIDNotIn: [String!]
  programIDGT: String
  programIDGTE: String
  programIDLT: String
  programIDLTE: String
  programIDContains: String
  programIDHasPrefix: String
  programIDHasSuffix: String
  programIDEqualFold: String
  programIDContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDEqualFold: String
  userIDContainsFold: String
}
"""
ProgramMembershipRole is enum for the field role
"""
enum ProgramMembershipRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
}
"""
ProgramMembershipWhereInput is used for filtering ProgramMembership objects.
Input was generated by ent.
"""
input ProgramMembershipWhereInput {
  not: ProgramMembershipWhereInput
  and: [ProgramMembershipWhereInput!]
  or: [ProgramMembershipWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  role field predicates
  """
  role: ProgramMembershipRole
  roleNEQ: ProgramMembershipRole
  roleIn: [ProgramMembershipRole!]
  roleNotIn: [ProgramMembershipRole!]
}
"""
ProgramProgramStatus is enum for the field status
"""
enum ProgramProgramStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.ProgramStatus") {
  NOT_STARTED
  IN_PROGRESS
  READY_FOR_AUDITOR
  COMPLETED
  ACTION_REQUIRED
}
"""
ProgramWhereInput is used for filtering Program objects.
Input was generated by ent.
"""
input ProgramWhereInput {
  not: ProgramWhereInput
  and: [ProgramWhereInput!]
  or: [ProgramWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: ProgramProgramStatus
  statusNEQ: ProgramProgramStatus
  statusIn: [ProgramProgramStatus!]
  statusNotIn: [ProgramProgramStatus!]
  """
  start_date field predicates
  """
  startDate: Time
  startDateNEQ: Time
  startDateIn: [Time!]
  startDateNotIn: [Time!]
  startDateGT: Time
  startDateGTE: Time
  startDateLT: Time
  startDateLTE: Time
  startDateIsNil: Boolean
  startDateNotNil: Boolean
  """
  end_date field predicates
  """
  endDate: Time
  endDateNEQ: Time
  endDateIn: [Time!]
  endDateNotIn: [Time!]
  endDateGT: Time
  endDateGTE: Time
  endDateLT: Time
  endDateLTE: Time
  endDateIsNil: Boolean
  endDateNotNil: Boolean
  """
  auditor_ready field predicates
  """
  auditorReady: Boolean
  auditorReadyNEQ: Boolean
  """
  auditor_write_comments field predicates
  """
  auditorWriteComments: Boolean
  auditorWriteCommentsNEQ: Boolean
  """
  auditor_read_comments field predicates
  """
  auditorReadComments: Boolean
  auditorReadCommentsNEQ: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  controls edge predicates
  """
  hasControls: Boolean
  hasControlsWith: [ControlWhereInput!]
  """
  subcontrols edge predicates
  """
  hasSubcontrols: Boolean
  hasSubcontrolsWith: [SubcontrolWhereInput!]
  """
  controlobjectives edge predicates
  """
  hasControlobjectives: Boolean
  hasControlobjectivesWith: [ControlObjectiveWhereInput!]
  """
  policies edge predicates
  """
  hasPolicies: Boolean
  hasPoliciesWith: [InternalPolicyWhereInput!]
  """
  procedures edge predicates
  """
  hasProcedures: Boolean
  hasProceduresWith: [ProcedureWhereInput!]
  """
  risks edge predicates
  """
  hasRisks: Boolean
  hasRisksWith: [RiskWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  notes edge predicates
  """
  hasNotes: Boolean
  hasNotesWith: [NoteWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
  """
  narratives edge predicates
  """
  hasNarratives: Boolean
  hasNarrativesWith: [NarrativeWhereInput!]
  """
  actionplans edge predicates
  """
  hasActionplans: Boolean
  hasActionplansWith: [ActionPlanWhereInput!]
  """
  standards edge predicates
  """
  hasStandards: Boolean
  hasStandardsWith: [StandardWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  members edge predicates
  """
  hasMembers: Boolean
  hasMembersWith: [ProgramMembershipWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  apiTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for APITokens returned from the connection.
    """
    where: APITokenWhereInput
  ): APITokenConnection!
  actionPlans(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ActionPlans returned from the connection.
    """
    where: ActionPlanWhereInput
  ): ActionPlanConnection!
  actionPlanHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ActionPlanHistories returned from the connection.
    """
    where: ActionPlanHistoryWhereInput
  ): ActionPlanHistoryConnection!
  contacts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Contacts returned from the connection.
    """
    where: ContactWhereInput
  ): ContactConnection!
  contactHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ContactHistories returned from the connection.
    """
    where: ContactHistoryWhereInput
  ): ContactHistoryConnection!
  controls(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Controls returned from the connection.
    """
    where: ControlWhereInput
  ): ControlConnection!
  controlHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ControlHistories returned from the connection.
    """
    where: ControlHistoryWhereInput
  ): ControlHistoryConnection!
  controlObjectives(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ControlObjectives returned from the connection.
    """
    where: ControlObjectiveWhereInput
  ): ControlObjectiveConnection!
  controlObjectiveHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ControlObjectiveHistories returned from the connection.
    """
    where: ControlObjectiveHistoryWhereInput
  ): ControlObjectiveHistoryConnection!
  documentDataSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DocumentDataSlice returned from the connection.
    """
    where: DocumentDataWhereInput
  ): DocumentDataConnection!
  documentDataHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DocumentDataHistories returned from the connection.
    """
    where: DocumentDataHistoryWhereInput
  ): DocumentDataHistoryConnection!
  entitlements(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Entitlements returned from the connection.
    """
    where: EntitlementWhereInput
  ): EntitlementConnection!
  entitlementHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementHistories returned from the connection.
    """
    where: EntitlementHistoryWhereInput
  ): EntitlementHistoryConnection!
  entitlementPlans(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementPlans returned from the connection.
    """
    where: EntitlementPlanWhereInput
  ): EntitlementPlanConnection!
  entitlementPlanFeatures(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementPlanFeatures returned from the connection.
    """
    where: EntitlementPlanFeatureWhereInput
  ): EntitlementPlanFeatureConnection!
  entitlementPlanFeatureHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementPlanFeatureHistories returned from the connection.
    """
    where: EntitlementPlanFeatureHistoryWhereInput
  ): EntitlementPlanFeatureHistoryConnection!
  entitlementPlanHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EntitlementPlanHistories returned from the connection.
    """
    where: EntitlementPlanHistoryWhereInput
  ): EntitlementPlanHistoryConnection!
  entities(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Entities returned from the connection.
    """
    orderBy: EntityOrder

    """
    Filtering options for Entities returned from the connection.
    """
    where: EntityWhereInput
  ): EntityConnection!
  entityHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for EntityHistories returned from the connection.
    """
    orderBy: EntityHistoryOrder

    """
    Filtering options for EntityHistories returned from the connection.
    """
    where: EntityHistoryWhereInput
  ): EntityHistoryConnection!
  entityTypes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for EntityTypes returned from the connection.
    """
    orderBy: EntityTypeOrder

    """
    Filtering options for EntityTypes returned from the connection.
    """
    where: EntityTypeWhereInput
  ): EntityTypeConnection!
  entityTypeHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for EntityTypeHistories returned from the connection.
    """
    orderBy: EntityTypeHistoryOrder

    """
    Filtering options for EntityTypeHistories returned from the connection.
    """
    where: EntityTypeHistoryWhereInput
  ): EntityTypeHistoryConnection!
  events(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Events returned from the connection.
    """
    where: EventWhereInput
  ): EventConnection!
  eventHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EventHistories returned from the connection.
    """
    where: EventHistoryWhereInput
  ): EventHistoryConnection!
  features(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Features returned from the connection.
    """
    where: FeatureWhereInput
  ): FeatureConnection!
  featureHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for FeatureHistories returned from the connection.
    """
    where: FeatureHistoryWhereInput
  ): FeatureHistoryConnection!
  files(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Files returned from the connection.
    """
    where: FileWhereInput
  ): FileConnection!
  fileHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for FileHistories returned from the connection.
    """
    where: FileHistoryWhereInput
  ): FileHistoryConnection!
  groups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Groups returned from the connection.
    """
    orderBy: GroupOrder

    """
    Filtering options for Groups returned from the connection.
    """
    where: GroupWhereInput
  ): GroupConnection!
  groupHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for GroupHistories returned from the connection.
    """
    orderBy: GroupHistoryOrder

    """
    Filtering options for GroupHistories returned from the connection.
    """
    where: GroupHistoryWhereInput
  ): GroupHistoryConnection!
  groupMemberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupMemberships returned from the connection.
    """
    where: GroupMembershipWhereInput
  ): GroupMembershipConnection!
  groupMembershipHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupMembershipHistories returned from the connection.
    """
    where: GroupMembershipHistoryWhereInput
  ): GroupMembershipHistoryConnection!
  groupSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupSettings returned from the connection.
    """
    where: GroupSettingWhereInput
  ): GroupSettingConnection!
  groupSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for GroupSettingHistories returned from the connection.
    """
    where: GroupSettingHistoryWhereInput
  ): GroupSettingHistoryConnection!
  hushes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Hushes returned from the connection.
    """
    orderBy: HushOrder

    """
    Filtering options for Hushes returned from the connection.
    """
    where: HushWhereInput
  ): HushConnection!
  hushHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for HushHistories returned from the connection.
    """
    orderBy: HushHistoryOrder

    """
    Filtering options for HushHistories returned from the connection.
    """
    where: HushHistoryWhereInput
  ): HushHistoryConnection!
  integrations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Integrations returned from the connection.
    """
    orderBy: IntegrationOrder

    """
    Filtering options for Integrations returned from the connection.
    """
    where: IntegrationWhereInput
  ): IntegrationConnection!
  integrationHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for IntegrationHistories returned from the connection.
    """
    orderBy: IntegrationHistoryOrder

    """
    Filtering options for IntegrationHistories returned from the connection.
    """
    where: IntegrationHistoryWhereInput
  ): IntegrationHistoryConnection!
  internalPolicies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for InternalPolicies returned from the connection.
    """
    where: InternalPolicyWhereInput
  ): InternalPolicyConnection!
  internalPolicyHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for InternalPolicyHistories returned from the connection.
    """
    where: InternalPolicyHistoryWhereInput
  ): InternalPolicyHistoryConnection!
  invites(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Invites returned from the connection.
    """
    where: InviteWhereInput
  ): InviteConnection!
  narratives(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Narratives returned from the connection.
    """
    where: NarrativeWhereInput
  ): NarrativeConnection!
  narrativeHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for NarrativeHistories returned from the connection.
    """
    where: NarrativeHistoryWhereInput
  ): NarrativeHistoryConnection!
  notes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Notes returned from the connection.
    """
    where: NoteWhereInput
  ): NoteConnection!
  noteHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for NoteHistories returned from the connection.
    """
    where: NoteHistoryWhereInput
  ): NoteHistoryConnection!
  oauthProviders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OauthProviders returned from the connection.
    """
    where: OauthProviderWhereInput
  ): OauthProviderConnection!
  oauthProviderHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OauthProviderHistories returned from the connection.
    """
    where: OauthProviderHistoryWhereInput
  ): OauthProviderHistoryConnection!
  ohAuthTooTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OhAuthTooTokens returned from the connection.
    """
    where: OhAuthTooTokenWhereInput
  ): OhAuthTooTokenConnection!
  orgMemberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrgMemberships returned from the connection.
    """
    where: OrgMembershipWhereInput
  ): OrgMembershipConnection!
  orgMembershipHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrgMembershipHistories returned from the connection.
    """
    where: OrgMembershipHistoryWhereInput
  ): OrgMembershipHistoryConnection!
  organizations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Organizations returned from the connection.
    """
    orderBy: OrganizationOrder

    """
    Filtering options for Organizations returned from the connection.
    """
    where: OrganizationWhereInput
  ): OrganizationConnection!
  organizationHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for OrganizationHistories returned from the connection.
    """
    orderBy: OrganizationHistoryOrder

    """
    Filtering options for OrganizationHistories returned from the connection.
    """
    where: OrganizationHistoryWhereInput
  ): OrganizationHistoryConnection!
  organizationSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrganizationSettings returned from the connection.
    """
    where: OrganizationSettingWhereInput
  ): OrganizationSettingConnection!
  organizationSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrganizationSettingHistories returned from the connection.
    """
    where: OrganizationSettingHistoryWhereInput
  ): OrganizationSettingHistoryConnection!
  personalAccessTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PersonalAccessTokens returned from the connection.
    """
    where: PersonalAccessTokenWhereInput
  ): PersonalAccessTokenConnection!
  procedures(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Procedures returned from the connection.
    """
    where: ProcedureWhereInput
  ): ProcedureConnection!
  procedureHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProcedureHistories returned from the connection.
    """
    where: ProcedureHistoryWhereInput
  ): ProcedureHistoryConnection!
  programs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Programs returned from the connection.
    """
    where: ProgramWhereInput
  ): ProgramConnection!
  programHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProgramHistories returned from the connection.
    """
    where: ProgramHistoryWhereInput
  ): ProgramHistoryConnection!
  programMemberships(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProgramMemberships returned from the connection.
    """
    where: ProgramMembershipWhereInput
  ): ProgramMembershipConnection!
  programMembershipHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProgramMembershipHistories returned from the connection.
    """
    where: ProgramMembershipHistoryWhereInput
  ): ProgramMembershipHistoryConnection!
  risks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Risks returned from the connection.
    """
    where: RiskWhereInput
  ): RiskConnection!
  riskHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for RiskHistories returned from the connection.
    """
    where: RiskHistoryWhereInput
  ): RiskHistoryConnection!
  standards(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Standards returned from the connection.
    """
    where: StandardWhereInput
  ): StandardConnection!
  standardHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for StandardHistories returned from the connection.
    """
    where: StandardHistoryWhereInput
  ): StandardHistoryConnection!
  subcontrols(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Subcontrols returned from the connection.
    """
    where: SubcontrolWhereInput
  ): SubcontrolConnection!
  subcontrolHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for SubcontrolHistories returned from the connection.
    """
    where: SubcontrolHistoryWhereInput
  ): SubcontrolHistoryConnection!
  subscribers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Subscribers returned from the connection.
    """
    where: SubscriberWhereInput
  ): SubscriberConnection!
  tfaSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for TFASettings returned from the connection.
    """
    where: TFASettingWhereInput
  ): TFASettingConnection!
  tasks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Tasks returned from the connection.
    """
    where: TaskWhereInput
  ): TaskConnection!
  taskHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for TaskHistories returned from the connection.
    """
    where: TaskHistoryWhereInput
  ): TaskHistoryConnection!
  templates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Templates returned from the connection.
    """
    orderBy: TemplateOrder

    """
    Filtering options for Templates returned from the connection.
    """
    where: TemplateWhereInput
  ): TemplateConnection!
  templateHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for TemplateHistories returned from the connection.
    """
    orderBy: TemplateHistoryOrder

    """
    Filtering options for TemplateHistories returned from the connection.
    """
    where: TemplateHistoryWhereInput
  ): TemplateHistoryConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
  userHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for UserHistories returned from the connection.
    """
    orderBy: UserHistoryOrder

    """
    Filtering options for UserHistories returned from the connection.
    """
    where: UserHistoryWhereInput
  ): UserHistoryConnection!
  userSettings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for UserSettings returned from the connection.
    """
    where: UserSettingWhereInput
  ): UserSettingConnection!
  userSettingHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for UserSettingHistories returned from the connection.
    """
    where: UserSettingHistoryWhereInput
  ): UserSettingHistoryConnection!
  webhooks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Webhooks returned from the connection.
    """
    orderBy: WebhookOrder

    """
    Filtering options for Webhooks returned from the connection.
    """
    where: WebhookWhereInput
  ): WebhookConnection!
  webhookHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for WebhookHistories returned from the connection.
    """
    orderBy: WebhookHistoryOrder

    """
    Filtering options for WebhookHistories returned from the connection.
    """
    where: WebhookHistoryWhereInput
  ): WebhookHistoryConnection!
}
type Risk implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the risk
  """
  name: String!
  """
  description of the risk
  """
  description: String
  """
  status of the risk - mitigated or not, inflight, etc.
  """
  status: String
  """
  type of the risk, e.g. strategic, operational, financial, external, etc.
  """
  riskType: String
  """
  business costs associated with the risk
  """
  businessCosts: String
  """
  impact of the risk - high, medium, low
  """
  impact: RiskRiskImpact
  """
  likelihood of the risk occurring; unlikely, likely, highly likely
  """
  likelihood: RiskRiskLikelihood
  """
  mitigation for the risk
  """
  mitigation: String
  """
  which controls are satisfied by the risk
  """
  satisfies: String
  """
  json data for the risk document
  """
  details: Map
  control: [Control!]
  procedure: [Procedure!]
  actionplans: [ActionPlan!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type RiskConnection {
  """
  A list of edges.
  """
  edges: [RiskEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type RiskEdge {
  """
  The item at the end of the edge.
  """
  node: Risk
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type RiskHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: RiskHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the risk
  """
  name: String!
  """
  description of the risk
  """
  description: String
  """
  status of the risk - mitigated or not, inflight, etc.
  """
  status: String
  """
  type of the risk, e.g. strategic, operational, financial, external, etc.
  """
  riskType: String
  """
  business costs associated with the risk
  """
  businessCosts: String
  """
  impact of the risk - high, medium, low
  """
  impact: RiskHistoryRiskImpact
  """
  likelihood of the risk occurring; unlikely, likely, highly likely
  """
  likelihood: RiskHistoryRiskLikelihood
  """
  mitigation for the risk
  """
  mitigation: String
  """
  which controls are satisfied by the risk
  """
  satisfies: String
  """
  json data for the risk document
  """
  details: Map
}
"""
A connection to a list of items.
"""
type RiskHistoryConnection {
  """
  A list of edges.
  """
  edges: [RiskHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type RiskHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: RiskHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
RiskHistoryOpType is enum for the field operation
"""
enum RiskHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
RiskHistoryRiskImpact is enum for the field impact
"""
enum RiskHistoryRiskImpact @goModel(model: "github.com/theopenlane/core/pkg/enums.RiskImpact") {
  LOW
  MODERATE
  HIGH
}
"""
RiskHistoryRiskLikelihood is enum for the field likelihood
"""
enum RiskHistoryRiskLikelihood @goModel(model: "github.com/theopenlane/core/pkg/enums.RiskLikelihood") {
  UNLIKELY
  LIKELY
  HIGHLY_LIKELY
}
"""
RiskHistoryWhereInput is used for filtering RiskHistory objects.
Input was generated by ent.
"""
input RiskHistoryWhereInput {
  not: RiskHistoryWhereInput
  and: [RiskHistoryWhereInput!]
  or: [RiskHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: RiskHistoryOpType
  operationNEQ: RiskHistoryOpType
  operationIn: [RiskHistoryOpType!]
  operationNotIn: [RiskHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  risk_type field predicates
  """
  riskType: String
  riskTypeNEQ: String
  riskTypeIn: [String!]
  riskTypeNotIn: [String!]
  riskTypeGT: String
  riskTypeGTE: String
  riskTypeLT: String
  riskTypeLTE: String
  riskTypeContains: String
  riskTypeHasPrefix: String
  riskTypeHasSuffix: String
  riskTypeIsNil: Boolean
  riskTypeNotNil: Boolean
  riskTypeEqualFold: String
  riskTypeContainsFold: String
  """
  business_costs field predicates
  """
  businessCosts: String
  businessCostsNEQ: String
  businessCostsIn: [String!]
  businessCostsNotIn: [String!]
  businessCostsGT: String
  businessCostsGTE: String
  businessCostsLT: String
  businessCostsLTE: String
  businessCostsContains: String
  businessCostsHasPrefix: String
  businessCostsHasSuffix: String
  businessCostsIsNil: Boolean
  businessCostsNotNil: Boolean
  businessCostsEqualFold: String
  businessCostsContainsFold: String
  """
  impact field predicates
  """
  impact: RiskHistoryRiskImpact
  impactNEQ: RiskHistoryRiskImpact
  impactIn: [RiskHistoryRiskImpact!]
  impactNotIn: [RiskHistoryRiskImpact!]
  impactIsNil: Boolean
  impactNotNil: Boolean
  """
  likelihood field predicates
  """
  likelihood: RiskHistoryRiskLikelihood
  likelihoodNEQ: RiskHistoryRiskLikelihood
  likelihoodIn: [RiskHistoryRiskLikelihood!]
  likelihoodNotIn: [RiskHistoryRiskLikelihood!]
  likelihoodIsNil: Boolean
  likelihoodNotNil: Boolean
  """
  mitigation field predicates
  """
  mitigation: String
  mitigationNEQ: String
  mitigationIn: [String!]
  mitigationNotIn: [String!]
  mitigationGT: String
  mitigationGTE: String
  mitigationLT: String
  mitigationLTE: String
  mitigationContains: String
  mitigationHasPrefix: String
  mitigationHasSuffix: String
  mitigationIsNil: Boolean
  mitigationNotNil: Boolean
  mitigationEqualFold: String
  mitigationContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
}
"""
RiskRiskImpact is enum for the field impact
"""
enum RiskRiskImpact @goModel(model: "github.com/theopenlane/core/pkg/enums.RiskImpact") {
  LOW
  MODERATE
  HIGH
}
"""
RiskRiskLikelihood is enum for the field likelihood
"""
enum RiskRiskLikelihood @goModel(model: "github.com/theopenlane/core/pkg/enums.RiskLikelihood") {
  UNLIKELY
  LIKELY
  HIGHLY_LIKELY
}
"""
RiskWhereInput is used for filtering Risk objects.
Input was generated by ent.
"""
input RiskWhereInput {
  not: RiskWhereInput
  and: [RiskWhereInput!]
  or: [RiskWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  risk_type field predicates
  """
  riskType: String
  riskTypeNEQ: String
  riskTypeIn: [String!]
  riskTypeNotIn: [String!]
  riskTypeGT: String
  riskTypeGTE: String
  riskTypeLT: String
  riskTypeLTE: String
  riskTypeContains: String
  riskTypeHasPrefix: String
  riskTypeHasSuffix: String
  riskTypeIsNil: Boolean
  riskTypeNotNil: Boolean
  riskTypeEqualFold: String
  riskTypeContainsFold: String
  """
  business_costs field predicates
  """
  businessCosts: String
  businessCostsNEQ: String
  businessCostsIn: [String!]
  businessCostsNotIn: [String!]
  businessCostsGT: String
  businessCostsGTE: String
  businessCostsLT: String
  businessCostsLTE: String
  businessCostsContains: String
  businessCostsHasPrefix: String
  businessCostsHasSuffix: String
  businessCostsIsNil: Boolean
  businessCostsNotNil: Boolean
  businessCostsEqualFold: String
  businessCostsContainsFold: String
  """
  impact field predicates
  """
  impact: RiskRiskImpact
  impactNEQ: RiskRiskImpact
  impactIn: [RiskRiskImpact!]
  impactNotIn: [RiskRiskImpact!]
  impactIsNil: Boolean
  impactNotNil: Boolean
  """
  likelihood field predicates
  """
  likelihood: RiskRiskLikelihood
  likelihoodNEQ: RiskRiskLikelihood
  likelihoodIn: [RiskRiskLikelihood!]
  likelihoodNotIn: [RiskRiskLikelihood!]
  likelihoodIsNil: Boolean
  likelihoodNotNil: Boolean
  """
  mitigation field predicates
  """
  mitigation: String
  mitigationNEQ: String
  mitigationIn: [String!]
  mitigationNotIn: [String!]
  mitigationGT: String
  mitigationGTE: String
  mitigationLT: String
  mitigationLTE: String
  mitigationContains: String
  mitigationHasPrefix: String
  mitigationHasSuffix: String
  mitigationIsNil: Boolean
  mitigationNotNil: Boolean
  mitigationEqualFold: String
  mitigationContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  procedure edge predicates
  """
  hasProcedure: Boolean
  hasProcedureWith: [ProcedureWhereInput!]
  """
  actionplans edge predicates
  """
  hasActionplans: Boolean
  hasActionplansWith: [ActionPlanWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
type Standard implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc.
  """
  name: String!
  """
  description of the standard
  """
  description: String
  """
  family of the standard, e.g. 800-53, 800-171, 27001, etc.
  """
  family: String
  """
  status of the standard - active, deprecated, etc.
  """
  status: String
  """
  type of the standard - security, privacy, etc.
  """
  standardType: String
  """
  version of the standard
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the standard
  """
  background: String
  """
  which controls are satisfied by the standard
  """
  satisfies: String
  """
  json data with details of the standard
  """
  details: Map
  controlobjectives: [ControlObjective!]
  controls: [Control!]
  procedures: [Procedure!]
  actionplans: [ActionPlan!]
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type StandardConnection {
  """
  A list of edges.
  """
  edges: [StandardEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type StandardEdge {
  """
  The item at the end of the edge.
  """
  node: Standard
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type StandardHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: StandardHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc.
  """
  name: String!
  """
  description of the standard
  """
  description: String
  """
  family of the standard, e.g. 800-53, 800-171, 27001, etc.
  """
  family: String
  """
  status of the standard - active, deprecated, etc.
  """
  status: String
  """
  type of the standard - security, privacy, etc.
  """
  standardType: String
  """
  version of the standard
  """
  version: String
  """
  purpose and scope
  """
  purposeAndScope: String
  """
  background of the standard
  """
  background: String
  """
  which controls are satisfied by the standard
  """
  satisfies: String
  """
  json data with details of the standard
  """
  details: Map
}
"""
A connection to a list of items.
"""
type StandardHistoryConnection {
  """
  A list of edges.
  """
  edges: [StandardHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type StandardHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: StandardHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
StandardHistoryOpType is enum for the field operation
"""
enum StandardHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
StandardHistoryWhereInput is used for filtering StandardHistory objects.
Input was generated by ent.
"""
input StandardHistoryWhereInput {
  not: StandardHistoryWhereInput
  and: [StandardHistoryWhereInput!]
  or: [StandardHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: StandardHistoryOpType
  operationNEQ: StandardHistoryOpType
  operationIn: [StandardHistoryOpType!]
  operationNotIn: [StandardHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  standard_type field predicates
  """
  standardType: String
  standardTypeNEQ: String
  standardTypeIn: [String!]
  standardTypeNotIn: [String!]
  standardTypeGT: String
  standardTypeGTE: String
  standardTypeLT: String
  standardTypeLTE: String
  standardTypeContains: String
  standardTypeHasPrefix: String
  standardTypeHasSuffix: String
  standardTypeIsNil: Boolean
  standardTypeNotNil: Boolean
  standardTypeEqualFold: String
  standardTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
}
"""
StandardWhereInput is used for filtering Standard objects.
Input was generated by ent.
"""
input StandardWhereInput {
  not: StandardWhereInput
  and: [StandardWhereInput!]
  or: [StandardWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  standard_type field predicates
  """
  standardType: String
  standardTypeNEQ: String
  standardTypeIn: [String!]
  standardTypeNotIn: [String!]
  standardTypeGT: String
  standardTypeGTE: String
  standardTypeLT: String
  standardTypeLTE: String
  standardTypeContains: String
  standardTypeHasPrefix: String
  standardTypeHasSuffix: String
  standardTypeIsNil: Boolean
  standardTypeNotNil: Boolean
  standardTypeEqualFold: String
  standardTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  purpose_and_scope field predicates
  """
  purposeAndScope: String
  purposeAndScopeNEQ: String
  purposeAndScopeIn: [String!]
  purposeAndScopeNotIn: [String!]
  purposeAndScopeGT: String
  purposeAndScopeGTE: String
  purposeAndScopeLT: String
  purposeAndScopeLTE: String
  purposeAndScopeContains: String
  purposeAndScopeHasPrefix: String
  purposeAndScopeHasSuffix: String
  purposeAndScopeIsNil: Boolean
  purposeAndScopeNotNil: Boolean
  purposeAndScopeEqualFold: String
  purposeAndScopeContainsFold: String
  """
  background field predicates
  """
  background: String
  backgroundNEQ: String
  backgroundIn: [String!]
  backgroundNotIn: [String!]
  backgroundGT: String
  backgroundGTE: String
  backgroundLT: String
  backgroundLTE: String
  backgroundContains: String
  backgroundHasPrefix: String
  backgroundHasSuffix: String
  backgroundIsNil: Boolean
  backgroundNotNil: Boolean
  backgroundEqualFold: String
  backgroundContainsFold: String
  """
  satisfies field predicates
  """
  satisfies: String
  satisfiesNEQ: String
  satisfiesIn: [String!]
  satisfiesNotIn: [String!]
  satisfiesGT: String
  satisfiesGTE: String
  satisfiesLT: String
  satisfiesLTE: String
  satisfiesContains: String
  satisfiesHasPrefix: String
  satisfiesHasSuffix: String
  satisfiesIsNil: Boolean
  satisfiesNotNil: Boolean
  satisfiesEqualFold: String
  satisfiesContainsFold: String
  """
  controlobjectives edge predicates
  """
  hasControlobjectives: Boolean
  hasControlobjectivesWith: [ControlObjectiveWhereInput!]
  """
  controls edge predicates
  """
  hasControls: Boolean
  hasControlsWith: [ControlWhereInput!]
  """
  procedures edge predicates
  """
  hasProcedures: Boolean
  hasProceduresWith: [ProcedureWhereInput!]
  """
  actionplans edge predicates
  """
  hasActionplans: Boolean
  hasActionplansWith: [ActionPlanWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
type Subcontrol implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the subcontrol
  """
  name: String!
  """
  description of the subcontrol
  """
  description: String
  """
  status of the subcontrol
  """
  status: String
  """
  type of the subcontrol
  """
  subcontrolType: String
  """
  version of the control
  """
  version: String
  """
  number of the subcontrol
  """
  subcontrolNumber: String
  """
  subcontrol family 
  """
  family: String
  """
  subcontrol class
  """
  class: String
  """
  source of the control, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks that the subcontrol is part of
  """
  mappedFrameworks: String
  """
  implementation evidence of the subcontrol
  """
  implementationEvidence: String
  """
  implementation status
  """
  implementationStatus: String
  """
  date the subcontrol was implemented
  """
  implementationDate: Time
  """
  implementation verification
  """
  implementationVerification: String
  """
  date the subcontrol implementation was verified
  """
  implementationVerificationDate: Time
  """
  json data details of the subcontrol
  """
  details: Map
  control: [Control!]
  user: [User!]
  tasks: [Task!]
  notes: Note
  programs: [Program!]
}
"""
A connection to a list of items.
"""
type SubcontrolConnection {
  """
  A list of edges.
  """
  edges: [SubcontrolEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SubcontrolEdge {
  """
  The item at the end of the edge.
  """
  node: Subcontrol
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type SubcontrolHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: SubcontrolHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the name of the subcontrol
  """
  name: String!
  """
  description of the subcontrol
  """
  description: String
  """
  status of the subcontrol
  """
  status: String
  """
  type of the subcontrol
  """
  subcontrolType: String
  """
  version of the control
  """
  version: String
  """
  number of the subcontrol
  """
  subcontrolNumber: String
  """
  subcontrol family 
  """
  family: String
  """
  subcontrol class
  """
  class: String
  """
  source of the control, e.g. framework, template, user-defined, etc.
  """
  source: String
  """
  mapped frameworks that the subcontrol is part of
  """
  mappedFrameworks: String
  """
  implementation evidence of the subcontrol
  """
  implementationEvidence: String
  """
  implementation status
  """
  implementationStatus: String
  """
  date the subcontrol was implemented
  """
  implementationDate: Time
  """
  implementation verification
  """
  implementationVerification: String
  """
  date the subcontrol implementation was verified
  """
  implementationVerificationDate: Time
  """
  json data details of the subcontrol
  """
  details: Map
}
"""
A connection to a list of items.
"""
type SubcontrolHistoryConnection {
  """
  A list of edges.
  """
  edges: [SubcontrolHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SubcontrolHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: SubcontrolHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SubcontrolHistoryOpType is enum for the field operation
"""
enum SubcontrolHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
SubcontrolHistoryWhereInput is used for filtering SubcontrolHistory objects.
Input was generated by ent.
"""
input SubcontrolHistoryWhereInput {
  not: SubcontrolHistoryWhereInput
  and: [SubcontrolHistoryWhereInput!]
  or: [SubcontrolHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: SubcontrolHistoryOpType
  operationNEQ: SubcontrolHistoryOpType
  operationIn: [SubcontrolHistoryOpType!]
  operationNotIn: [SubcontrolHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  subcontrol_type field predicates
  """
  subcontrolType: String
  subcontrolTypeNEQ: String
  subcontrolTypeIn: [String!]
  subcontrolTypeNotIn: [String!]
  subcontrolTypeGT: String
  subcontrolTypeGTE: String
  subcontrolTypeLT: String
  subcontrolTypeLTE: String
  subcontrolTypeContains: String
  subcontrolTypeHasPrefix: String
  subcontrolTypeHasSuffix: String
  subcontrolTypeIsNil: Boolean
  subcontrolTypeNotNil: Boolean
  subcontrolTypeEqualFold: String
  subcontrolTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  subcontrol_number field predicates
  """
  subcontrolNumber: String
  subcontrolNumberNEQ: String
  subcontrolNumberIn: [String!]
  subcontrolNumberNotIn: [String!]
  subcontrolNumberGT: String
  subcontrolNumberGTE: String
  subcontrolNumberLT: String
  subcontrolNumberLTE: String
  subcontrolNumberContains: String
  subcontrolNumberHasPrefix: String
  subcontrolNumberHasSuffix: String
  subcontrolNumberIsNil: Boolean
  subcontrolNumberNotNil: Boolean
  subcontrolNumberEqualFold: String
  subcontrolNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
  """
  implementation_evidence field predicates
  """
  implementationEvidence: String
  implementationEvidenceNEQ: String
  implementationEvidenceIn: [String!]
  implementationEvidenceNotIn: [String!]
  implementationEvidenceGT: String
  implementationEvidenceGTE: String
  implementationEvidenceLT: String
  implementationEvidenceLTE: String
  implementationEvidenceContains: String
  implementationEvidenceHasPrefix: String
  implementationEvidenceHasSuffix: String
  implementationEvidenceIsNil: Boolean
  implementationEvidenceNotNil: Boolean
  implementationEvidenceEqualFold: String
  implementationEvidenceContainsFold: String
  """
  implementation_status field predicates
  """
  implementationStatus: String
  implementationStatusNEQ: String
  implementationStatusIn: [String!]
  implementationStatusNotIn: [String!]
  implementationStatusGT: String
  implementationStatusGTE: String
  implementationStatusLT: String
  implementationStatusLTE: String
  implementationStatusContains: String
  implementationStatusHasPrefix: String
  implementationStatusHasSuffix: String
  implementationStatusIsNil: Boolean
  implementationStatusNotNil: Boolean
  implementationStatusEqualFold: String
  implementationStatusContainsFold: String
  """
  implementation_date field predicates
  """
  implementationDate: Time
  implementationDateNEQ: Time
  implementationDateIn: [Time!]
  implementationDateNotIn: [Time!]
  implementationDateGT: Time
  implementationDateGTE: Time
  implementationDateLT: Time
  implementationDateLTE: Time
  implementationDateIsNil: Boolean
  implementationDateNotNil: Boolean
  """
  implementation_verification field predicates
  """
  implementationVerification: String
  implementationVerificationNEQ: String
  implementationVerificationIn: [String!]
  implementationVerificationNotIn: [String!]
  implementationVerificationGT: String
  implementationVerificationGTE: String
  implementationVerificationLT: String
  implementationVerificationLTE: String
  implementationVerificationContains: String
  implementationVerificationHasPrefix: String
  implementationVerificationHasSuffix: String
  implementationVerificationIsNil: Boolean
  implementationVerificationNotNil: Boolean
  implementationVerificationEqualFold: String
  implementationVerificationContainsFold: String
  """
  implementation_verification_date field predicates
  """
  implementationVerificationDate: Time
  implementationVerificationDateNEQ: Time
  implementationVerificationDateIn: [Time!]
  implementationVerificationDateNotIn: [Time!]
  implementationVerificationDateGT: Time
  implementationVerificationDateGTE: Time
  implementationVerificationDateLT: Time
  implementationVerificationDateLTE: Time
  implementationVerificationDateIsNil: Boolean
  implementationVerificationDateNotNil: Boolean
}
"""
SubcontrolWhereInput is used for filtering Subcontrol objects.
Input was generated by ent.
"""
input SubcontrolWhereInput {
  not: SubcontrolWhereInput
  and: [SubcontrolWhereInput!]
  or: [SubcontrolWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: String
  statusNEQ: String
  statusIn: [String!]
  statusNotIn: [String!]
  statusGT: String
  statusGTE: String
  statusLT: String
  statusLTE: String
  statusContains: String
  statusHasPrefix: String
  statusHasSuffix: String
  statusIsNil: Boolean
  statusNotNil: Boolean
  statusEqualFold: String
  statusContainsFold: String
  """
  subcontrol_type field predicates
  """
  subcontrolType: String
  subcontrolTypeNEQ: String
  subcontrolTypeIn: [String!]
  subcontrolTypeNotIn: [String!]
  subcontrolTypeGT: String
  subcontrolTypeGTE: String
  subcontrolTypeLT: String
  subcontrolTypeLTE: String
  subcontrolTypeContains: String
  subcontrolTypeHasPrefix: String
  subcontrolTypeHasSuffix: String
  subcontrolTypeIsNil: Boolean
  subcontrolTypeNotNil: Boolean
  subcontrolTypeEqualFold: String
  subcontrolTypeContainsFold: String
  """
  version field predicates
  """
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionIsNil: Boolean
  versionNotNil: Boolean
  versionEqualFold: String
  versionContainsFold: String
  """
  subcontrol_number field predicates
  """
  subcontrolNumber: String
  subcontrolNumberNEQ: String
  subcontrolNumberIn: [String!]
  subcontrolNumberNotIn: [String!]
  subcontrolNumberGT: String
  subcontrolNumberGTE: String
  subcontrolNumberLT: String
  subcontrolNumberLTE: String
  subcontrolNumberContains: String
  subcontrolNumberHasPrefix: String
  subcontrolNumberHasSuffix: String
  subcontrolNumberIsNil: Boolean
  subcontrolNumberNotNil: Boolean
  subcontrolNumberEqualFold: String
  subcontrolNumberContainsFold: String
  """
  family field predicates
  """
  family: String
  familyNEQ: String
  familyIn: [String!]
  familyNotIn: [String!]
  familyGT: String
  familyGTE: String
  familyLT: String
  familyLTE: String
  familyContains: String
  familyHasPrefix: String
  familyHasSuffix: String
  familyIsNil: Boolean
  familyNotNil: Boolean
  familyEqualFold: String
  familyContainsFold: String
  """
  class field predicates
  """
  class: String
  classNEQ: String
  classIn: [String!]
  classNotIn: [String!]
  classGT: String
  classGTE: String
  classLT: String
  classLTE: String
  classContains: String
  classHasPrefix: String
  classHasSuffix: String
  classIsNil: Boolean
  classNotNil: Boolean
  classEqualFold: String
  classContainsFold: String
  """
  source field predicates
  """
  source: String
  sourceNEQ: String
  sourceIn: [String!]
  sourceNotIn: [String!]
  sourceGT: String
  sourceGTE: String
  sourceLT: String
  sourceLTE: String
  sourceContains: String
  sourceHasPrefix: String
  sourceHasSuffix: String
  sourceIsNil: Boolean
  sourceNotNil: Boolean
  sourceEqualFold: String
  sourceContainsFold: String
  """
  mapped_frameworks field predicates
  """
  mappedFrameworks: String
  mappedFrameworksNEQ: String
  mappedFrameworksIn: [String!]
  mappedFrameworksNotIn: [String!]
  mappedFrameworksGT: String
  mappedFrameworksGTE: String
  mappedFrameworksLT: String
  mappedFrameworksLTE: String
  mappedFrameworksContains: String
  mappedFrameworksHasPrefix: String
  mappedFrameworksHasSuffix: String
  mappedFrameworksIsNil: Boolean
  mappedFrameworksNotNil: Boolean
  mappedFrameworksEqualFold: String
  mappedFrameworksContainsFold: String
  """
  implementation_evidence field predicates
  """
  implementationEvidence: String
  implementationEvidenceNEQ: String
  implementationEvidenceIn: [String!]
  implementationEvidenceNotIn: [String!]
  implementationEvidenceGT: String
  implementationEvidenceGTE: String
  implementationEvidenceLT: String
  implementationEvidenceLTE: String
  implementationEvidenceContains: String
  implementationEvidenceHasPrefix: String
  implementationEvidenceHasSuffix: String
  implementationEvidenceIsNil: Boolean
  implementationEvidenceNotNil: Boolean
  implementationEvidenceEqualFold: String
  implementationEvidenceContainsFold: String
  """
  implementation_status field predicates
  """
  implementationStatus: String
  implementationStatusNEQ: String
  implementationStatusIn: [String!]
  implementationStatusNotIn: [String!]
  implementationStatusGT: String
  implementationStatusGTE: String
  implementationStatusLT: String
  implementationStatusLTE: String
  implementationStatusContains: String
  implementationStatusHasPrefix: String
  implementationStatusHasSuffix: String
  implementationStatusIsNil: Boolean
  implementationStatusNotNil: Boolean
  implementationStatusEqualFold: String
  implementationStatusContainsFold: String
  """
  implementation_date field predicates
  """
  implementationDate: Time
  implementationDateNEQ: Time
  implementationDateIn: [Time!]
  implementationDateNotIn: [Time!]
  implementationDateGT: Time
  implementationDateGTE: Time
  implementationDateLT: Time
  implementationDateLTE: Time
  implementationDateIsNil: Boolean
  implementationDateNotNil: Boolean
  """
  implementation_verification field predicates
  """
  implementationVerification: String
  implementationVerificationNEQ: String
  implementationVerificationIn: [String!]
  implementationVerificationNotIn: [String!]
  implementationVerificationGT: String
  implementationVerificationGTE: String
  implementationVerificationLT: String
  implementationVerificationLTE: String
  implementationVerificationContains: String
  implementationVerificationHasPrefix: String
  implementationVerificationHasSuffix: String
  implementationVerificationIsNil: Boolean
  implementationVerificationNotNil: Boolean
  implementationVerificationEqualFold: String
  implementationVerificationContainsFold: String
  """
  implementation_verification_date field predicates
  """
  implementationVerificationDate: Time
  implementationVerificationDateNEQ: Time
  implementationVerificationDateIn: [Time!]
  implementationVerificationDateNotIn: [Time!]
  implementationVerificationDateGT: Time
  implementationVerificationDateGTE: Time
  implementationVerificationDateLT: Time
  implementationVerificationDateLTE: Time
  implementationVerificationDateIsNil: Boolean
  implementationVerificationDateNotNil: Boolean
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  tasks edge predicates
  """
  hasTasks: Boolean
  hasTasksWith: [TaskWhereInput!]
  """
  notes edge predicates
  """
  hasNotes: Boolean
  hasNotesWith: [NoteWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
}
type Subscriber implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  email address of the subscriber
  """
  email: String!
  """
  phone number of the subscriber
  """
  phoneNumber: String
  """
  indicates if the email address has been verified
  """
  verifiedEmail: Boolean!
  """
  indicates if the phone number has been verified
  """
  verifiedPhone: Boolean!
  """
  indicates if the subscriber is active or not, active users will have at least one verified contact method
  """
  active: Boolean!
  owner: Organization
  events: [Event!]
}
"""
A connection to a list of items.
"""
type SubscriberConnection {
  """
  A list of edges.
  """
  edges: [SubscriberEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SubscriberEdge {
  """
  The item at the end of the edge.
  """
  node: Subscriber
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SubscriberWhereInput is used for filtering Subscriber objects.
Input was generated by ent.
"""
input SubscriberWhereInput {
  not: SubscriberWhereInput
  and: [SubscriberWhereInput!]
  or: [SubscriberWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberIsNil: Boolean
  phoneNumberNotNil: Boolean
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  verified_email field predicates
  """
  verifiedEmail: Boolean
  verifiedEmailNEQ: Boolean
  """
  verified_phone field predicates
  """
  verifiedPhone: Boolean
  verifiedPhoneNEQ: Boolean
  """
  active field predicates
  """
  active: Boolean
  activeNEQ: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
}
type TFASetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  TFA secret for the user
  """
  tfaSecret: String
  """
  specifies if the TFA device has been verified
  """
  verified: Boolean!
  """
  recovery codes for 2fa
  """
  recoveryCodes: [String!]
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  owner: User
}
"""
A connection to a list of items.
"""
type TFASettingConnection {
  """
  A list of edges.
  """
  edges: [TFASettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TFASettingEdge {
  """
  The item at the end of the edge.
  """
  node: TFASetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TFASettingWhereInput is used for filtering TFASetting objects.
Input was generated by ent.
"""
input TFASettingWhereInput {
  not: TFASettingWhereInput
  and: [TFASettingWhereInput!]
  or: [TFASettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  tfa_secret field predicates
  """
  tfaSecret: String
  tfaSecretNEQ: String
  tfaSecretIn: [String!]
  tfaSecretNotIn: [String!]
  tfaSecretGT: String
  tfaSecretGTE: String
  tfaSecretLT: String
  tfaSecretLTE: String
  tfaSecretContains: String
  tfaSecretHasPrefix: String
  tfaSecretHasSuffix: String
  tfaSecretIsNil: Boolean
  tfaSecretNotNil: Boolean
  tfaSecretEqualFold: String
  tfaSecretContainsFold: String
  """
  verified field predicates
  """
  verified: Boolean
  verifiedNEQ: Boolean
  """
  totp_allowed field predicates
  """
  totpAllowed: Boolean
  totpAllowedNEQ: Boolean
  totpAllowedIsNil: Boolean
  totpAllowedNotNil: Boolean
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
}
type Task implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the title of the task
  """
  title: String!
  """
  the description of the task
  """
  description: String
  """
  the details of the task
  """
  details: Map
  """
  the status of the task
  """
  status: TaskTaskStatus!
  """
  the due date of the task
  """
  due: Time
  """
  the completion date of the task
  """
  completed: Time
  assigner: User!
  assignee: User
  organization: [Organization!]
  group: [Group!]
  policy: [InternalPolicy!]
  procedure: [Procedure!]
  control: [Control!]
  controlObjective: [ControlObjective!]
  subcontrol: [Subcontrol!]
  program: [Program!]
}
"""
A connection to a list of items.
"""
type TaskConnection {
  """
  A list of edges.
  """
  edges: [TaskEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TaskEdge {
  """
  The item at the end of the edge.
  """
  node: Task
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type TaskHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: TaskHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the title of the task
  """
  title: String!
  """
  the description of the task
  """
  description: String
  """
  the details of the task
  """
  details: Map
  """
  the status of the task
  """
  status: TaskHistoryTaskStatus!
  """
  the due date of the task
  """
  due: Time
  """
  the completion date of the task
  """
  completed: Time
}
"""
A connection to a list of items.
"""
type TaskHistoryConnection {
  """
  A list of edges.
  """
  edges: [TaskHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TaskHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: TaskHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TaskHistoryOpType is enum for the field operation
"""
enum TaskHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
TaskHistoryTaskStatus is enum for the field status
"""
enum TaskHistoryTaskStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.TaskStatus") {
  OPEN
  IN_PROGRESS
  IN_REVIEW
  COMPLETED
  WONT_DO
}
"""
TaskHistoryWhereInput is used for filtering TaskHistory objects.
Input was generated by ent.
"""
input TaskHistoryWhereInput {
  not: TaskHistoryWhereInput
  and: [TaskHistoryWhereInput!]
  or: [TaskHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: TaskHistoryOpType
  operationNEQ: TaskHistoryOpType
  operationIn: [TaskHistoryOpType!]
  operationNotIn: [TaskHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: TaskHistoryTaskStatus
  statusNEQ: TaskHistoryTaskStatus
  statusIn: [TaskHistoryTaskStatus!]
  statusNotIn: [TaskHistoryTaskStatus!]
  """
  due field predicates
  """
  due: Time
  dueNEQ: Time
  dueIn: [Time!]
  dueNotIn: [Time!]
  dueGT: Time
  dueGTE: Time
  dueLT: Time
  dueLTE: Time
  dueIsNil: Boolean
  dueNotNil: Boolean
  """
  completed field predicates
  """
  completed: Time
  completedNEQ: Time
  completedIn: [Time!]
  completedNotIn: [Time!]
  completedGT: Time
  completedGTE: Time
  completedLT: Time
  completedLTE: Time
  completedIsNil: Boolean
  completedNotNil: Boolean
}
"""
TaskTaskStatus is enum for the field status
"""
enum TaskTaskStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.TaskStatus") {
  OPEN
  IN_PROGRESS
  IN_REVIEW
  COMPLETED
  WONT_DO
}
"""
TaskWhereInput is used for filtering Task objects.
Input was generated by ent.
"""
input TaskWhereInput {
  not: TaskWhereInput
  and: [TaskWhereInput!]
  or: [TaskWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: TaskTaskStatus
  statusNEQ: TaskTaskStatus
  statusIn: [TaskTaskStatus!]
  statusNotIn: [TaskTaskStatus!]
  """
  due field predicates
  """
  due: Time
  dueNEQ: Time
  dueIn: [Time!]
  dueNotIn: [Time!]
  dueGT: Time
  dueGTE: Time
  dueLT: Time
  dueLTE: Time
  dueIsNil: Boolean
  dueNotNil: Boolean
  """
  completed field predicates
  """
  completed: Time
  completedNEQ: Time
  completedIn: [Time!]
  completedNotIn: [Time!]
  completedGT: Time
  completedGTE: Time
  completedLT: Time
  completedLTE: Time
  completedIsNil: Boolean
  completedNotNil: Boolean
  """
  assigner edge predicates
  """
  hasAssigner: Boolean
  hasAssignerWith: [UserWhereInput!]
  """
  assignee edge predicates
  """
  hasAssignee: Boolean
  hasAssigneeWith: [UserWhereInput!]
  """
  organization edge predicates
  """
  hasOrganization: Boolean
  hasOrganizationWith: [OrganizationWhereInput!]
  """
  group edge predicates
  """
  hasGroup: Boolean
  hasGroupWith: [GroupWhereInput!]
  """
  policy edge predicates
  """
  hasPolicy: Boolean
  hasPolicyWith: [InternalPolicyWhereInput!]
  """
  procedure edge predicates
  """
  hasProcedure: Boolean
  hasProcedureWith: [ProcedureWhereInput!]
  """
  control edge predicates
  """
  hasControl: Boolean
  hasControlWith: [ControlWhereInput!]
  """
  control_objective edge predicates
  """
  hasControlObjective: Boolean
  hasControlObjectiveWith: [ControlObjectiveWhereInput!]
  """
  subcontrol edge predicates
  """
  hasSubcontrol: Boolean
  hasSubcontrolWith: [SubcontrolWhereInput!]
  """
  program edge predicates
  """
  hasProgram: Boolean
  hasProgramWith: [ProgramWhereInput!]
}
type Template implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType!
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  owner: Organization
  documents: [DocumentData!]
  files: [File!]
}
"""
A connection to a list of items.
"""
type TemplateConnection {
  """
  A list of edges.
  """
  edges: [TemplateEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
TemplateDocumentType is enum for the field template_type
"""
enum TemplateDocumentType @goModel(model: "github.com/theopenlane/core/pkg/enums.DocumentType") {
  ROOTTEMPLATE
  DOCUMENT
}
"""
An edge in a connection.
"""
type TemplateEdge {
  """
  The item at the end of the edge.
  """
  node: Template
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type TemplateHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: TemplateHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the template
  """
  name: String!
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateHistoryDocumentType!
  """
  the description of the template
  """
  description: String
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON!
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
}
"""
A connection to a list of items.
"""
type TemplateHistoryConnection {
  """
  A list of edges.
  """
  edges: [TemplateHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
TemplateHistoryDocumentType is enum for the field template_type
"""
enum TemplateHistoryDocumentType @goModel(model: "github.com/theopenlane/core/pkg/enums.DocumentType") {
  ROOTTEMPLATE
  DOCUMENT
}
"""
An edge in a connection.
"""
type TemplateHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: TemplateHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TemplateHistoryOpType is enum for the field operation
"""
enum TemplateHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for TemplateHistory connections
"""
input TemplateHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order TemplateHistories.
  """
  field: TemplateHistoryOrderField!
}
"""
Properties by which TemplateHistory connections can be ordered.
"""
enum TemplateHistoryOrderField {
  name
}
"""
TemplateHistoryWhereInput is used for filtering TemplateHistory objects.
Input was generated by ent.
"""
input TemplateHistoryWhereInput {
  not: TemplateHistoryWhereInput
  and: [TemplateHistoryWhereInput!]
  or: [TemplateHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: TemplateHistoryOpType
  operationNEQ: TemplateHistoryOpType
  operationIn: [TemplateHistoryOpType!]
  operationNotIn: [TemplateHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  template_type field predicates
  """
  templateType: TemplateHistoryDocumentType
  templateTypeNEQ: TemplateHistoryDocumentType
  templateTypeIn: [TemplateHistoryDocumentType!]
  templateTypeNotIn: [TemplateHistoryDocumentType!]
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
}
"""
Ordering options for Template connections
"""
input TemplateOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Templates.
  """
  field: TemplateOrderField!
}
"""
Properties by which Template connections can be ordered.
"""
enum TemplateOrderField {
  name
}
"""
TemplateWhereInput is used for filtering Template objects.
Input was generated by ent.
"""
input TemplateWhereInput {
  not: TemplateWhereInput
  and: [TemplateWhereInput!]
  or: [TemplateWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  template_type field predicates
  """
  templateType: TemplateDocumentType
  templateTypeNEQ: TemplateDocumentType
  templateTypeIn: [TemplateDocumentType!]
  templateTypeNotIn: [TemplateDocumentType!]
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  documents edge predicates
  """
  hasDocuments: Boolean
  hasDocumentsWith: [DocumentDataWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
The builtin Uint type
"""
scalar Uint
"""
UpdateAPITokenInput is used for update APIToken object.
Input was generated by ent.
"""
input UpdateAPITokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name associated with the token
  """
  name: String
  """
  a description of the token's purpose
  """
  description: String
  clearDescription: Boolean
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  lastUsedAt: Time
  clearLastUsedAt: Boolean
  ownerID: ID
  clearOwner: Boolean
}
"""
UpdateActionPlanInput is used for update ActionPlan object.
Input was generated by ent.
"""
input UpdateActionPlanInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the action plan
  """
  name: String
  """
  description of the action plan
  """
  description: String
  clearDescription: Boolean
  """
  status of the action plan
  """
  status: String
  clearStatus: Boolean
  """
  due date of the action plan
  """
  dueDate: Time
  clearDueDate: Boolean
  """
  priority of the action plan
  """
  priority: String
  clearPriority: Boolean
  """
  source of the action plan
  """
  source: String
  clearSource: Boolean
  """
  json data including details of the action plan
  """
  details: Map
  clearDetails: Boolean
  addStandardIDs: [ID!]
  removeStandardIDs: [ID!]
  clearStandard: Boolean
  addRiskIDs: [ID!]
  removeRiskIDs: [ID!]
  clearRisk: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUser: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateContactInput is used for update Contact object.
Input was generated by ent.
"""
input UpdateContactInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the full name of the contact
  """
  fullName: String
  """
  the title of the contact
  """
  title: String
  clearTitle: Boolean
  """
  the company of the contact
  """
  company: String
  clearCompany: Boolean
  """
  the email of the contact
  """
  email: String
  clearEmail: Boolean
  """
  the phone number of the contact
  """
  phoneNumber: String
  clearPhoneNumber: Boolean
  """
  the address of the contact
  """
  address: String
  clearAddress: Boolean
  """
  status of the contact
  """
  status: ContactUserStatus
  ownerID: ID
  clearOwner: Boolean
  addEntityIDs: [ID!]
  removeEntityIDs: [ID!]
  clearEntities: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
}
"""
UpdateControlInput is used for update Control object.
Input was generated by ent.
"""
input UpdateControlInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the control
  """
  name: String
  """
  description of the control
  """
  description: String
  clearDescription: Boolean
  """
  status of the control
  """
  status: String
  clearStatus: Boolean
  """
  type of the control
  """
  controlType: String
  clearControlType: Boolean
  """
  version of the control
  """
  version: String
  clearVersion: Boolean
  """
  control number or identifier
  """
  controlNumber: String
  clearControlNumber: Boolean
  """
  family associated with the control
  """
  family: String
  clearFamily: Boolean
  """
  class associated with the control
  """
  class: String
  clearClass: Boolean
  """
  source of the control, e.g. framework, template, custom, etc.
  """
  source: String
  clearSource: Boolean
  """
  which control objectives are satisfied by the control
  """
  satisfies: String
  clearSatisfies: Boolean
  """
  mapped frameworks
  """
  mappedFrameworks: String
  clearMappedFrameworks: Boolean
  """
  json data including details of the control
  """
  details: Map
  clearDetails: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedures: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrols: Boolean
  addControlobjectiveIDs: [ID!]
  removeControlobjectiveIDs: [ID!]
  clearControlobjectives: Boolean
  addStandardIDs: [ID!]
  removeStandardIDs: [ID!]
  clearStandard: Boolean
  addNarrativeIDs: [ID!]
  removeNarrativeIDs: [ID!]
  clearNarratives: Boolean
  addRiskIDs: [ID!]
  removeRiskIDs: [ID!]
  clearRisks: Boolean
  addActionplanIDs: [ID!]
  removeActionplanIDs: [ID!]
  clearActionplans: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateControlObjectiveInput is used for update ControlObjective object.
Input was generated by ent.
"""
input UpdateControlObjectiveInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the control objective
  """
  name: String
  """
  description of the control objective
  """
  description: String
  clearDescription: Boolean
  """
  status of the control objective
  """
  status: String
  clearStatus: Boolean
  """
  type of the control objective
  """
  controlObjectiveType: String
  clearControlObjectiveType: Boolean
  """
  version of the control objective
  """
  version: String
  clearVersion: Boolean
  """
  number of the control objective
  """
  controlNumber: String
  clearControlNumber: Boolean
  """
  family of the control objective
  """
  family: String
  clearFamily: Boolean
  """
  class associated with the control objective
  """
  class: String
  clearClass: Boolean
  """
  source of the control objective, e.g. framework, template, user-defined, etc.
  """
  source: String
  clearSource: Boolean
  """
  mapped frameworks
  """
  mappedFrameworks: String
  clearMappedFrameworks: Boolean
  """
  json data including details of the control objective
  """
  details: Map
  clearDetails: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicy: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControls: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedures: Boolean
  addRiskIDs: [ID!]
  removeRiskIDs: [ID!]
  clearRisks: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrols: Boolean
  addStandardIDs: [ID!]
  removeStandardIDs: [ID!]
  clearStandard: Boolean
  addNarrativeIDs: [ID!]
  removeNarrativeIDs: [ID!]
  clearNarratives: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateDocumentDataInput is used for update DocumentData object.
Input was generated by ent.
"""
input UpdateDocumentDataInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the json data of the document
  """
  data: JSON
  ownerID: ID
  clearOwner: Boolean
  templateID: ID
  addEntityIDs: [ID!]
  removeEntityIDs: [ID!]
  clearEntity: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
}
"""
UpdateEntitlementInput is used for update Entitlement object.
Input was generated by ent.
"""
input UpdateEntitlementInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  used to store references to external systems, e.g. Stripe
  """
  externalCustomerID: String
  clearExternalCustomerID: Boolean
  """
  used to store references to external systems, e.g. Stripe
  """
  externalSubscriptionID: String
  clearExternalSubscriptionID: Boolean
  """
  the time at which a customer's entitlement will expire, e.g. they've cancelled but paid through the end of the month
  """
  expiresAt: Time
  clearExpiresAt: Boolean
  """
  whether or not the customer has cancelled their entitlement - usually used in conjunction with expires and expires at
  """
  cancelled: Boolean
  ownerID: ID
  clearOwner: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateEntitlementPlanFeatureInput is used for update EntitlementPlanFeature object.
Input was generated by ent.
"""
input UpdateEntitlementPlanFeatureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  metadata for the entitlement plan feature such as usage limits
  """
  metadata: Map
  clearMetadata: Boolean
  ownerID: ID
  clearOwner: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateEntitlementPlanInput is used for update EntitlementPlan object.
Input was generated by ent.
"""
input UpdateEntitlementPlanInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the displayed 'friendly' name of the plan
  """
  displayName: String
  clearDisplayName: Boolean
  """
  a description of the plan
  """
  description: String
  clearDescription: Boolean
  """
  metadata for the plan
  """
  metadata: Map
  clearMetadata: Boolean
  ownerID: ID
  clearOwner: Boolean
  addEntitlementIDs: [ID!]
  removeEntitlementIDs: [ID!]
  clearEntitlements: Boolean
  addBaseFeatureIDs: [ID!]
  removeBaseFeatureIDs: [ID!]
  clearBaseFeatures: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateEntityInput is used for update Entity object.
Input was generated by ent.
"""
input UpdateEntityInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the entity
  """
  name: String
  clearName: Boolean
  """
  The entity's displayed 'friendly' name
  """
  displayName: String
  clearDisplayName: Boolean
  """
  An optional description of the entity
  """
  description: String
  clearDescription: Boolean
  """
  domains associated with the entity
  """
  domains: [String!]
  appendDomains: [String!]
  clearDomains: Boolean
  """
  status of the entity
  """
  status: String
  clearStatus: Boolean
  ownerID: ID
  clearOwner: Boolean
  addContactIDs: [ID!]
  removeContactIDs: [ID!]
  clearContacts: Boolean
  addDocumentIDs: [ID!]
  removeDocumentIDs: [ID!]
  clearDocuments: Boolean
  addNoteIDs: [ID!]
  removeNoteIDs: [ID!]
  clearNotes: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
  entityTypeID: ID
  clearEntityType: Boolean
}
"""
UpdateEntityTypeInput is used for update EntityType object.
Input was generated by ent.
"""
input UpdateEntityTypeInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the entity
  """
  name: String
  ownerID: ID
  clearOwner: Boolean
  addEntityIDs: [ID!]
  removeEntityIDs: [ID!]
  clearEntities: Boolean
}
"""
UpdateEventInput is used for update Event object.
Input was generated by ent.
"""
input UpdateEventInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  eventID: String
  clearEventID: Boolean
  correlationID: String
  clearCorrelationID: Boolean
  eventType: String
  metadata: Map
  clearMetadata: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUser: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroup: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegration: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganization: Boolean
  addInviteIDs: [ID!]
  removeInviteIDs: [ID!]
  clearInvite: Boolean
  addFeatureIDs: [ID!]
  removeFeatureIDs: [ID!]
  clearFeature: Boolean
  addEntitlementplanIDs: [ID!]
  removeEntitlementplanIDs: [ID!]
  clearEntitlementplan: Boolean
  addPersonalAccessTokenIDs: [ID!]
  removePersonalAccessTokenIDs: [ID!]
  clearPersonalAccessToken: Boolean
  addOauth2tokenIDs: [ID!]
  removeOauth2tokenIDs: [ID!]
  clearOauth2token: Boolean
  addHushIDs: [ID!]
  removeHushIDs: [ID!]
  clearHush: Boolean
  addEntitlementIDs: [ID!]
  removeEntitlementIDs: [ID!]
  clearEntitlement: Boolean
  addWebhookIDs: [ID!]
  removeWebhookIDs: [ID!]
  clearWebhook: Boolean
  addSubscriberIDs: [ID!]
  removeSubscriberIDs: [ID!]
  clearSubscriber: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFile: Boolean
}
"""
UpdateFeatureInput is used for update Feature object.
Input was generated by ent.
"""
input UpdateFeatureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the displayed 'friendly' name of the feature
  """
  displayName: String
  clearDisplayName: Boolean
  """
  enabled features are available for use
  """
  enabled: Boolean
  """
  a description of the feature
  """
  description: String
  clearDescription: Boolean
  """
  metadata for the feature
  """
  metadata: Map
  clearMetadata: Boolean
  ownerID: ID
  clearOwner: Boolean
  addPlanIDs: [ID!]
  removePlanIDs: [ID!]
  clearPlans: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateFileInput is used for update File object.
Input was generated by ent.
"""
input UpdateFileInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the file provided in the payload key without the extension
  """
  providedFileName: String
  """
  the extension of the file provided
  """
  providedFileExtension: String
  """
  the computed size of the file in the original http request
  """
  providedFileSize: Int
  clearProvidedFileSize: Boolean
  persistedFileSize: Int
  clearPersistedFileSize: Boolean
  """
  the mime type detected by the system
  """
  detectedMimeType: String
  clearDetectedMimeType: Boolean
  """
  the computed md5 hash of the file calculated after we received the contents of the file, but before the file was written to permanent storage
  """
  md5Hash: String
  clearMd5Hash: Boolean
  """
  the content type of the HTTP request - may be different than MIME type as multipart-form can transmit multiple files and different types
  """
  detectedContentType: String
  """
  the key parsed out of a multipart-form request; if we allow multiple files to be uploaded we may want our API specifications to require the use of different keys allowing us to perform easier conditional evaluation on the key and what to do with the file based on key
  """
  storeKey: String
  clearStoreKey: Boolean
  """
  the category type of the file, if any (e.g. evidence, invoice, etc.)
  """
  categoryType: String
  clearCategoryType: Boolean
  """
  the full URI of the file
  """
  uri: String
  clearURI: Boolean
  """
  the storage scheme of the file, e.g. file://, s3://, etc.
  """
  storageScheme: String
  clearStorageScheme: Boolean
  """
  the storage volume of the file which typically will be the organization ID the file belongs to - this is not a literal volume but the overlay file system mapping
  """
  storageVolume: String
  clearStorageVolume: Boolean
  """
  the storage path is the second-level directory of the file path, typically the correlating logical object ID the file is associated with; files can be stand alone objects and not always correlated to a logical one, so this path of the tree may be empty
  """
  storagePath: String
  clearStoragePath: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUser: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganization: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroup: Boolean
  addContactIDs: [ID!]
  removeContactIDs: [ID!]
  clearContact: Boolean
  addEntityIDs: [ID!]
  removeEntityIDs: [ID!]
  clearEntity: Boolean
  addUsersettingIDs: [ID!]
  removeUsersettingIDs: [ID!]
  clearUsersetting: Boolean
  addOrganizationsettingIDs: [ID!]
  removeOrganizationsettingIDs: [ID!]
  clearOrganizationsetting: Boolean
  addTemplateIDs: [ID!]
  removeTemplateIDs: [ID!]
  clearTemplate: Boolean
  addDocumentdatumIDs: [ID!]
  removeDocumentdatumIDs: [ID!]
  clearDocumentdata: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateGroupInput is used for update Group object.
Input was generated by ent.
"""
input UpdateGroupInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the group - must be unique within the organization
  """
  name: String
  """
  the groups description
  """
  description: String
  clearDescription: Boolean
  """
  the URL to an auto generated gravatar image for the group
  """
  gravatarLogoURL: String
  clearGravatarLogoURL: Boolean
  """
  the URL to an image uploaded by the customer for the groups avatar image
  """
  logoURL: String
  clearLogoURL: Boolean
  """
  The group's displayed 'friendly' name
  """
  displayName: String
  ownerID: ID
  clearOwner: Boolean
  settingID: ID
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
}
"""
UpdateGroupMembershipInput is used for update GroupMembership object.
Input was generated by ent.
"""
input UpdateGroupMembershipInput {
  role: GroupMembershipRole
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateGroupSettingInput is used for update GroupSetting object.
Input was generated by ent.
"""
input UpdateGroupSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  whether the group is visible to it's members / owners only or if it's searchable by anyone within the organization
  """
  visibility: GroupSettingVisibility
  """
  the policy governing ability to freely join a group, whether it requires an invitation, application, or either
  """
  joinPolicy: GroupSettingJoinPolicy
  """
  whether to sync group members to slack groups
  """
  syncToSlack: Boolean
  clearSyncToSlack: Boolean
  """
  whether to sync group members to github groups
  """
  syncToGithub: Boolean
  clearSyncToGithub: Boolean
  groupID: ID
  clearGroup: Boolean
}
"""
UpdateHushInput is used for update Hush object.
Input was generated by ent.
"""
input UpdateHushInput {
  """
  the logical name of the corresponding hush secret or it's general grouping
  """
  name: String
  """
  a description of the hush value or purpose, such as github PAT
  """
  description: String
  clearDescription: Boolean
  """
  the kind of secret, such as sshkey, certificate, api token, etc.
  """
  kind: String
  clearKind: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganization: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateIntegrationInput is used for update Integration object.
Input was generated by ent.
"""
input UpdateIntegrationInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the integration - must be unique within the organization
  """
  name: String
  """
  a description of the integration
  """
  description: String
  clearDescription: Boolean
  kind: String
  clearKind: Boolean
  ownerID: ID
  clearOwner: Boolean
  addSecretIDs: [ID!]
  removeSecretIDs: [ID!]
  clearSecrets: Boolean
  addOauth2tokenIDs: [ID!]
  removeOauth2tokenIDs: [ID!]
  clearOauth2tokens: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addWebhookIDs: [ID!]
  removeWebhookIDs: [ID!]
  clearWebhooks: Boolean
}
"""
UpdateInternalPolicyInput is used for update InternalPolicy object.
Input was generated by ent.
"""
input UpdateInternalPolicyInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the policy
  """
  name: String
  """
  description of the policy
  """
  description: String
  """
  status of the policy
  """
  status: String
  clearStatus: Boolean
  """
  type of the policy
  """
  policyType: String
  clearPolicyType: Boolean
  """
  version of the policy
  """
  version: String
  clearVersion: Boolean
  """
  purpose and scope
  """
  purposeAndScope: String
  clearPurposeAndScope: Boolean
  """
  background of the policy
  """
  background: String
  clearBackground: Boolean
  """
  json data for the policy document
  """
  details: Map
  clearDetails: Boolean
  addControlobjectiveIDs: [ID!]
  removeControlobjectiveIDs: [ID!]
  clearControlobjectives: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControls: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedures: Boolean
  addNarrativeIDs: [ID!]
  removeNarrativeIDs: [ID!]
  clearNarratives: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateInviteInput is used for update Invite object.
Input was generated by ent.
"""
input UpdateInviteInput {
  """
  the expiration date of the invitation token which defaults to 14 days in the future from creation
  """
  expires: Time
  clearExpires: Boolean
  """
  the status of the invitation
  """
  status: InviteInviteStatus
  role: InviteRole
  """
  the number of attempts made to perform email send of the invitation, maximum of 5
  """
  sendAttempts: Int
  ownerID: ID
  clearOwner: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateNarrativeInput is used for update Narrative object.
Input was generated by ent.
"""
input UpdateNarrativeInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the narrative
  """
  name: String
  """
  the description of the narrative
  """
  description: String
  clearDescription: Boolean
  """
  which controls are satisfied by the narrative
  """
  satisfies: String
  clearSatisfies: Boolean
  """
  json data for the narrative document
  """
  details: Map
  clearDetails: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicy: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedure: Boolean
  addControlobjectiveIDs: [ID!]
  removeControlobjectiveIDs: [ID!]
  clearControlobjective: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateNoteInput is used for update Note object.
Input was generated by ent.
"""
input UpdateNoteInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the text of the note
  """
  text: String
  ownerID: ID
  clearOwner: Boolean
  entityID: ID
  clearEntity: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrols: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateOauthProviderInput is used for update OauthProvider object.
Input was generated by ent.
"""
input UpdateOauthProviderInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the oauth provider's name
  """
  name: String
  """
  the client id for the oauth provider
  """
  clientID: String
  """
  the client secret
  """
  clientSecret: String
  """
  the redirect url
  """
  redirectURL: String
  """
  the scopes
  """
  scopes: String
  """
  the auth url of the provider
  """
  authURL: String
  """
  the token url of the provider
  """
  tokenURL: String
  """
  the auth style, 0: auto detect 1: third party log in 2: log in with username and password
  """
  authStyle: Uint
  """
  the URL to request user information by token
  """
  infoURL: String
  ownerID: ID
  clearOwner: Boolean
}
"""
UpdateOhAuthTooTokenInput is used for update OhAuthTooToken object.
Input was generated by ent.
"""
input UpdateOhAuthTooTokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  clientID: String
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  nonce: String
  claimsUserID: String
  claimsUsername: String
  claimsEmail: String
  claimsEmailVerified: Boolean
  claimsGroups: [String!]
  appendClaimsGroups: [String!]
  clearClaimsGroups: Boolean
  claimsPreferredUsername: String
  connectorID: String
  connectorData: [String!]
  appendConnectorData: [String!]
  clearConnectorData: Boolean
  lastUsed: Time
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegration: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateOrgMembershipInput is used for update OrgMembership object.
Input was generated by ent.
"""
input UpdateOrgMembershipInput {
  role: OrgMembershipRole
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the organization
  """
  name: String
  """
  The organization's displayed 'friendly' name
  """
  displayName: String
  """
  An optional description of the organization
  """
  description: String
  clearDescription: Boolean
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  clearAvatarRemoteURL: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroups: Boolean
  addTemplateIDs: [ID!]
  removeTemplateIDs: [ID!]
  clearTemplates: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
  settingID: ID
  clearSetting: Boolean
  addDocumentdatumIDs: [ID!]
  removeDocumentdatumIDs: [ID!]
  clearDocumentdata: Boolean
  addEntitlementIDs: [ID!]
  removeEntitlementIDs: [ID!]
  clearEntitlements: Boolean
  addOrganizationEntitlementIDs: [ID!]
  removeOrganizationEntitlementIDs: [ID!]
  clearOrganizationEntitlement: Boolean
  addPersonalAccessTokenIDs: [ID!]
  removePersonalAccessTokenIDs: [ID!]
  clearPersonalAccessTokens: Boolean
  addAPITokenIDs: [ID!]
  removeAPITokenIDs: [ID!]
  clearAPITokens: Boolean
  addOauthproviderIDs: [ID!]
  removeOauthproviderIDs: [ID!]
  clearOauthprovider: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
  addInviteIDs: [ID!]
  removeInviteIDs: [ID!]
  clearInvites: Boolean
  addSubscriberIDs: [ID!]
  removeSubscriberIDs: [ID!]
  clearSubscribers: Boolean
  addWebhookIDs: [ID!]
  removeWebhookIDs: [ID!]
  clearWebhooks: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addSecretIDs: [ID!]
  removeSecretIDs: [ID!]
  clearSecrets: Boolean
  addFeatureIDs: [ID!]
  removeFeatureIDs: [ID!]
  clearFeatures: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
  addEntitlementplanIDs: [ID!]
  removeEntitlementplanIDs: [ID!]
  clearEntitlementplans: Boolean
  addEntityIDs: [ID!]
  removeEntityIDs: [ID!]
  clearEntities: Boolean
  addEntitytypeIDs: [ID!]
  removeEntitytypeIDs: [ID!]
  clearEntitytypes: Boolean
  addContactIDs: [ID!]
  removeContactIDs: [ID!]
  clearContacts: Boolean
  addNoteIDs: [ID!]
  removeNoteIDs: [ID!]
  clearNotes: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateOrganizationSettingInput is used for update OrganizationSetting object.
Input was generated by ent.
"""
input UpdateOrganizationSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  domains associated with the organization
  """
  domains: [String!]
  appendDomains: [String!]
  clearDomains: Boolean
  """
  Name of the person to contact for billing
  """
  billingContact: String
  clearBillingContact: Boolean
  """
  Email address of the person to contact for billing
  """
  billingEmail: String
  clearBillingEmail: Boolean
  """
  Phone number to contact for billing
  """
  billingPhone: String
  clearBillingPhone: Boolean
  """
  Address to send billing information to
  """
  billingAddress: String
  clearBillingAddress: Boolean
  """
  Usually government-issued tax ID or business ID such as ABN in Australia
  """
  taxIdentifier: String
  clearTaxIdentifier: Boolean
  """
  geographical location of the organization
  """
  geoLocation: OrganizationSettingRegion
  clearGeoLocation: Boolean
  organizationID: ID
  clearOrganization: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
}
"""
UpdatePersonalAccessTokenInput is used for update PersonalAccessToken object.
Input was generated by ent.
"""
input UpdatePersonalAccessTokenInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name associated with the token
  """
  name: String
  """
  a description of the token's purpose
  """
  description: String
  clearDescription: Boolean
  scopes: [String!]
  appendScopes: [String!]
  clearScopes: Boolean
  lastUsedAt: Time
  clearLastUsedAt: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganizations: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateProcedureInput is used for update Procedure object.
Input was generated by ent.
"""
input UpdateProcedureInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the procedure
  """
  name: String
  """
  description of the procedure
  """
  description: String
  clearDescription: Boolean
  """
  status of the procedure
  """
  status: String
  clearStatus: Boolean
  """
  type of the procedure
  """
  procedureType: String
  clearProcedureType: Boolean
  """
  version of the procedure
  """
  version: String
  clearVersion: Boolean
  """
  purpose and scope
  """
  purposeAndScope: String
  clearPurposeAndScope: Boolean
  """
  background of the procedure
  """
  background: String
  clearBackground: Boolean
  """
  which controls are satisfied by the procedure
  """
  satisfies: String
  clearSatisfies: Boolean
  """
  json data for the procedure document
  """
  details: Map
  clearDetails: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addInternalpolicyIDs: [ID!]
  removeInternalpolicyIDs: [ID!]
  clearInternalpolicy: Boolean
  addNarrativeIDs: [ID!]
  removeNarrativeIDs: [ID!]
  clearNarratives: Boolean
  addRiskIDs: [ID!]
  removeRiskIDs: [ID!]
  clearRisks: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateProgramInput is used for update Program object.
Input was generated by ent.
"""
input UpdateProgramInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the program
  """
  name: String
  """
  the description of the program
  """
  description: String
  clearDescription: Boolean
  """
  the status of the program
  """
  status: ProgramProgramStatus
  """
  the start date of the period
  """
  startDate: Time
  clearStartDate: Boolean
  """
  the end date of the period
  """
  endDate: Time
  clearEndDate: Boolean
  """
  is the program ready for the auditor
  """
  auditorReady: Boolean
  """
  can the auditor write comments
  """
  auditorWriteComments: Boolean
  """
  can the auditor read comments
  """
  auditorReadComments: Boolean
  ownerID: ID
  clearOwner: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControls: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrols: Boolean
  addControlobjectiveIDs: [ID!]
  removeControlobjectiveIDs: [ID!]
  clearControlobjectives: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicies: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedures: Boolean
  addRiskIDs: [ID!]
  removeRiskIDs: [ID!]
  clearRisks: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  addNoteIDs: [ID!]
  removeNoteIDs: [ID!]
  clearNotes: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
  addNarrativeIDs: [ID!]
  removeNarrativeIDs: [ID!]
  clearNarratives: Boolean
  addActionplanIDs: [ID!]
  removeActionplanIDs: [ID!]
  clearActionplans: Boolean
  addStandardIDs: [ID!]
  removeStandardIDs: [ID!]
  clearStandards: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUsers: Boolean
}
"""
UpdateProgramMembershipInput is used for update ProgramMembership object.
Input was generated by ent.
"""
input UpdateProgramMembershipInput {
  role: ProgramMembershipRole
}
"""
UpdateRiskInput is used for update Risk object.
Input was generated by ent.
"""
input UpdateRiskInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the risk
  """
  name: String
  """
  description of the risk
  """
  description: String
  clearDescription: Boolean
  """
  status of the risk - mitigated or not, inflight, etc.
  """
  status: String
  clearStatus: Boolean
  """
  type of the risk, e.g. strategic, operational, financial, external, etc.
  """
  riskType: String
  clearRiskType: Boolean
  """
  business costs associated with the risk
  """
  businessCosts: String
  clearBusinessCosts: Boolean
  """
  impact of the risk - high, medium, low
  """
  impact: RiskRiskImpact
  clearImpact: Boolean
  """
  likelihood of the risk occurring; unlikely, likely, highly likely
  """
  likelihood: RiskRiskLikelihood
  clearLikelihood: Boolean
  """
  mitigation for the risk
  """
  mitigation: String
  clearMitigation: Boolean
  """
  which controls are satisfied by the risk
  """
  satisfies: String
  clearSatisfies: Boolean
  """
  json data for the risk document
  """
  details: Map
  clearDetails: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedure: Boolean
  addActionplanIDs: [ID!]
  removeActionplanIDs: [ID!]
  clearActionplans: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateStandardInput is used for update Standard object.
Input was generated by ent.
"""
input UpdateStandardInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the standard body, e.g. TSC, NIST, SOC, HITRUST, FedRamp, etc.
  """
  name: String
  """
  description of the standard
  """
  description: String
  clearDescription: Boolean
  """
  family of the standard, e.g. 800-53, 800-171, 27001, etc.
  """
  family: String
  clearFamily: Boolean
  """
  status of the standard - active, deprecated, etc.
  """
  status: String
  clearStatus: Boolean
  """
  type of the standard - security, privacy, etc.
  """
  standardType: String
  clearStandardType: Boolean
  """
  version of the standard
  """
  version: String
  clearVersion: Boolean
  """
  purpose and scope
  """
  purposeAndScope: String
  clearPurposeAndScope: Boolean
  """
  background of the standard
  """
  background: String
  clearBackground: Boolean
  """
  which controls are satisfied by the standard
  """
  satisfies: String
  clearSatisfies: Boolean
  """
  json data with details of the standard
  """
  details: Map
  clearDetails: Boolean
  addControlobjectiveIDs: [ID!]
  removeControlobjectiveIDs: [ID!]
  clearControlobjectives: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControls: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedures: Boolean
  addActionplanIDs: [ID!]
  removeActionplanIDs: [ID!]
  clearActionplans: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateSubcontrolInput is used for update Subcontrol object.
Input was generated by ent.
"""
input UpdateSubcontrolInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the subcontrol
  """
  name: String
  """
  description of the subcontrol
  """
  description: String
  clearDescription: Boolean
  """
  status of the subcontrol
  """
  status: String
  clearStatus: Boolean
  """
  type of the subcontrol
  """
  subcontrolType: String
  clearSubcontrolType: Boolean
  """
  version of the control
  """
  version: String
  clearVersion: Boolean
  """
  number of the subcontrol
  """
  subcontrolNumber: String
  clearSubcontrolNumber: Boolean
  """
  subcontrol family 
  """
  family: String
  clearFamily: Boolean
  """
  subcontrol class
  """
  class: String
  clearClass: Boolean
  """
  source of the control, e.g. framework, template, user-defined, etc.
  """
  source: String
  clearSource: Boolean
  """
  mapped frameworks that the subcontrol is part of
  """
  mappedFrameworks: String
  clearMappedFrameworks: Boolean
  """
  implementation evidence of the subcontrol
  """
  implementationEvidence: String
  clearImplementationEvidence: Boolean
  """
  implementation status
  """
  implementationStatus: String
  clearImplementationStatus: Boolean
  """
  date the subcontrol was implemented
  """
  implementationDate: Time
  clearImplementationDate: Boolean
  """
  implementation verification
  """
  implementationVerification: String
  clearImplementationVerification: Boolean
  """
  date the subcontrol implementation was verified
  """
  implementationVerificationDate: Time
  clearImplementationVerificationDate: Boolean
  """
  json data details of the subcontrol
  """
  details: Map
  clearDetails: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUser: Boolean
  addTaskIDs: [ID!]
  removeTaskIDs: [ID!]
  clearTasks: Boolean
  notesID: ID
  clearNotes: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateSubscriberInput is used for update Subscriber object.
Input was generated by ent.
"""
input UpdateSubscriberInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  email address of the subscriber
  """
  email: String
  """
  phone number of the subscriber
  """
  phoneNumber: String
  clearPhoneNumber: Boolean
  ownerID: ID
  clearOwner: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
}
"""
UpdateTFASettingInput is used for update TFASetting object.
Input was generated by ent.
"""
input UpdateTFASettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  specifies if the TFA device has been verified
  """
  verified: Boolean
  """
  specifies a user may complete authentication by verifying a TOTP code delivered through an authenticator app
  """
  totpAllowed: Boolean
  clearTotpAllowed: Boolean
}
"""
UpdateTaskInput is used for update Task object.
Input was generated by ent.
"""
input UpdateTaskInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the title of the task
  """
  title: String
  """
  the description of the task
  """
  description: String
  clearDescription: Boolean
  """
  the details of the task
  """
  details: Map
  clearDetails: Boolean
  """
  the status of the task
  """
  status: TaskTaskStatus
  """
  the due date of the task
  """
  due: Time
  clearDue: Boolean
  """
  the completion date of the task
  """
  completed: Time
  clearCompleted: Boolean
  assignerID: ID
  assigneeID: ID
  clearAssignee: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganization: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroup: Boolean
  addPolicyIDs: [ID!]
  removePolicyIDs: [ID!]
  clearPolicy: Boolean
  addProcedureIDs: [ID!]
  removeProcedureIDs: [ID!]
  clearProcedure: Boolean
  addControlIDs: [ID!]
  removeControlIDs: [ID!]
  clearControl: Boolean
  addControlObjectiveIDs: [ID!]
  removeControlObjectiveIDs: [ID!]
  clearControlObjective: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrol: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearProgram: Boolean
}
"""
UpdateTemplateInput is used for update Template object.
Input was generated by ent.
"""
input UpdateTemplateInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the template
  """
  name: String
  """
  the type of the template, either a provided template or an implementation (document)
  """
  templateType: TemplateDocumentType
  """
  the description of the template
  """
  description: String
  clearDescription: Boolean
  """
  the jsonschema object of the template
  """
  jsonconfig: JSON
  """
  the uischema for the template to render in the UI
  """
  uischema: JSON
  clearUischema: Boolean
  ownerID: ID
  clearOwner: Boolean
  addDocumentIDs: [ID!]
  removeDocumentIDs: [ID!]
  clearDocuments: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  email: String
  firstName: String
  clearFirstName: Boolean
  lastName: String
  clearLastName: Boolean
  """
  The user's displayed 'friendly' name
  """
  displayName: String
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  clearAvatarRemoteURL: Boolean
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  clearAvatarLocalFile: Boolean
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  clearAvatarUpdatedAt: Boolean
  """
  the time the user was last seen
  """
  lastSeen: Time
  clearLastSeen: Boolean
  """
  user password hash
  """
  password: String
  clearPassword: Boolean
  """
  the Subject of the user JWT
  """
  sub: String
  clearSub: Boolean
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider
  """
  the user's role
  """
  role: UserRole
  clearRole: Boolean
  addPersonalAccessTokenIDs: [ID!]
  removePersonalAccessTokenIDs: [ID!]
  clearPersonalAccessTokens: Boolean
  addTfaSettingIDs: [ID!]
  removeTfaSettingIDs: [ID!]
  clearTfaSettings: Boolean
  settingID: ID
  addEmailVerificationTokenIDs: [ID!]
  removeEmailVerificationTokenIDs: [ID!]
  clearEmailVerificationTokens: Boolean
  addPasswordResetTokenIDs: [ID!]
  removePasswordResetTokenIDs: [ID!]
  clearPasswordResetTokens: Boolean
  addGroupIDs: [ID!]
  removeGroupIDs: [ID!]
  clearGroups: Boolean
  addOrganizationIDs: [ID!]
  removeOrganizationIDs: [ID!]
  clearOrganizations: Boolean
  addWebauthnIDs: [ID!]
  removeWebauthnIDs: [ID!]
  clearWebauthn: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
  fileID: ID
  clearFile: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addActionplanIDs: [ID!]
  removeActionplanIDs: [ID!]
  clearActionplans: Boolean
  addSubcontrolIDs: [ID!]
  removeSubcontrolIDs: [ID!]
  clearSubcontrols: Boolean
  addAssignerTaskIDs: [ID!]
  removeAssignerTaskIDs: [ID!]
  clearAssignerTasks: Boolean
  addAssigneeTaskIDs: [ID!]
  removeAssigneeTaskIDs: [ID!]
  clearAssigneeTasks: Boolean
  addProgramIDs: [ID!]
  removeProgramIDs: [ID!]
  clearPrograms: Boolean
}
"""
UpdateUserSettingInput is used for update UserSetting object.
Input was generated by ent.
"""
input UpdateUserSettingInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  clearSilencedAt: Boolean
  """
  The time the user was suspended
  """
  suspendedAt: Time
  clearSuspendedAt: Boolean
  """
  status of the user account
  """
  status: UserSettingUserStatus
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  clearIsWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  clearIsTfaEnabled: Boolean
  userID: ID
  clearUser: Boolean
  defaultOrgID: ID
  clearDefaultOrg: Boolean
  addFileIDs: [ID!]
  removeFileIDs: [ID!]
  clearFiles: Boolean
}
"""
UpdateWebhookInput is used for update Webhook object.
Input was generated by ent.
"""
input UpdateWebhookInput {
  """
  tags associated with the object
  """
  tags: [String!]
  appendTags: [String!]
  clearTags: Boolean
  """
  the name of the webhook
  """
  name: String
  """
  a description of the webhook
  """
  description: String
  clearDescription: Boolean
  """
  the url to send the webhook to
  """
  destinationURL: String
  """
  indicates if the webhook is active and enabled
  """
  enabled: Boolean
  """
  the number of failures
  """
  failures: Int
  clearFailures: Boolean
  """
  the last error message
  """
  lastError: String
  clearLastError: Boolean
  """
  the last response
  """
  lastResponse: String
  clearLastResponse: Boolean
  ownerID: ID
  clearOwner: Boolean
  addEventIDs: [ID!]
  removeEventIDs: [ID!]
  clearEvents: Boolean
  addIntegrationIDs: [ID!]
  removeIntegrationIDs: [ID!]
  clearIntegrations: Boolean
}
type User implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  email: String!
  firstName: String
  lastName: String
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The user's local avatar file id
  """
  avatarLocalFileID: ID
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserAuthProvider!
  """
  the user's role
  """
  role: UserRole
  personalAccessTokens: [PersonalAccessToken!]
  tfaSettings: [TFASetting!]
  setting: UserSetting!
  groups: [Group!]
  organizations: [Organization!]
  files: [File!]
  file: File
  events: [Event!]
  actionplans: [ActionPlan!]
  subcontrols: [Subcontrol!]
  assignerTasks: [Task!]
  assigneeTasks: [Task!]
  programs: [Program!]
  groupMemberships: [GroupMembership!]
  orgMemberships: [OrgMembership!]
  programMemberships: [ProgramMembership!]
}
"""
UserAuthProvider is enum for the field auth_provider
"""
enum UserAuthProvider @goModel(model: "github.com/theopenlane/core/pkg/enums.AuthProvider") {
  CREDENTIALS
  GOOGLE
  GITHUB
  WEBAUTHN
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type UserHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: UserHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  deletedAt: Time
  deletedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  email: String!
  firstName: String
  lastName: String
  """
  The user's displayed 'friendly' name
  """
  displayName: String!
  """
  URL of the user's remote avatar
  """
  avatarRemoteURL: String
  """
  The user's local avatar file
  """
  avatarLocalFile: String
  """
  The user's local avatar file id
  """
  avatarLocalFileID: String
  """
  The time the user's (local) avatar was last updated
  """
  avatarUpdatedAt: Time
  """
  the time the user was last seen
  """
  lastSeen: Time
  """
  the Subject of the user JWT
  """
  sub: String
  """
  auth provider used to register the account
  """
  authProvider: UserHistoryAuthProvider!
  """
  the user's role
  """
  role: UserHistoryRole
}
"""
UserHistoryAuthProvider is enum for the field auth_provider
"""
enum UserHistoryAuthProvider @goModel(model: "github.com/theopenlane/core/pkg/enums.AuthProvider") {
  CREDENTIALS
  GOOGLE
  GITHUB
  WEBAUTHN
}
"""
A connection to a list of items.
"""
type UserHistoryConnection {
  """
  A list of edges.
  """
  edges: [UserHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: UserHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserHistoryOpType is enum for the field operation
"""
enum UserHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for UserHistory connections
"""
input UserHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order UserHistories.
  """
  field: UserHistoryOrderField!
}
"""
Properties by which UserHistory connections can be ordered.
"""
enum UserHistoryOrderField {
  first_name
  last_name
  display_name
}
"""
UserHistoryRole is enum for the field role
"""
enum UserHistoryRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
  USER
}
"""
UserHistoryWhereInput is used for filtering UserHistory objects.
Input was generated by ent.
"""
input UserHistoryWhereInput {
  not: UserHistoryWhereInput
  and: [UserHistoryWhereInput!]
  or: [UserHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: UserHistoryOpType
  operationNEQ: UserHistoryOpType
  operationIn: [UserHistoryOpType!]
  operationNotIn: [UserHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameIsNil: Boolean
  firstNameNotNil: Boolean
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameIsNil: Boolean
  lastNameNotNil: Boolean
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  avatar_local_file field predicates
  """
  avatarLocalFile: String
  avatarLocalFileNEQ: String
  avatarLocalFileIn: [String!]
  avatarLocalFileNotIn: [String!]
  avatarLocalFileGT: String
  avatarLocalFileGTE: String
  avatarLocalFileLT: String
  avatarLocalFileLTE: String
  avatarLocalFileContains: String
  avatarLocalFileHasPrefix: String
  avatarLocalFileHasSuffix: String
  avatarLocalFileIsNil: Boolean
  avatarLocalFileNotNil: Boolean
  avatarLocalFileEqualFold: String
  avatarLocalFileContainsFold: String
  """
  avatar_local_file_id field predicates
  """
  avatarLocalFileID: String
  avatarLocalFileIDNEQ: String
  avatarLocalFileIDIn: [String!]
  avatarLocalFileIDNotIn: [String!]
  avatarLocalFileIDGT: String
  avatarLocalFileIDGTE: String
  avatarLocalFileIDLT: String
  avatarLocalFileIDLTE: String
  avatarLocalFileIDContains: String
  avatarLocalFileIDHasPrefix: String
  avatarLocalFileIDHasSuffix: String
  avatarLocalFileIDIsNil: Boolean
  avatarLocalFileIDNotNil: Boolean
  avatarLocalFileIDEqualFold: String
  avatarLocalFileIDContainsFold: String
  """
  avatar_updated_at field predicates
  """
  avatarUpdatedAt: Time
  avatarUpdatedAtNEQ: Time
  avatarUpdatedAtIn: [Time!]
  avatarUpdatedAtNotIn: [Time!]
  avatarUpdatedAtGT: Time
  avatarUpdatedAtGTE: Time
  avatarUpdatedAtLT: Time
  avatarUpdatedAtLTE: Time
  avatarUpdatedAtIsNil: Boolean
  avatarUpdatedAtNotNil: Boolean
  """
  last_seen field predicates
  """
  lastSeen: Time
  lastSeenNEQ: Time
  lastSeenIn: [Time!]
  lastSeenNotIn: [Time!]
  lastSeenGT: Time
  lastSeenGTE: Time
  lastSeenLT: Time
  lastSeenLTE: Time
  lastSeenIsNil: Boolean
  lastSeenNotNil: Boolean
  """
  sub field predicates
  """
  sub: String
  subNEQ: String
  subIn: [String!]
  subNotIn: [String!]
  subGT: String
  subGTE: String
  subLT: String
  subLTE: String
  subContains: String
  subHasPrefix: String
  subHasSuffix: String
  subIsNil: Boolean
  subNotNil: Boolean
  subEqualFold: String
  subContainsFold: String
  """
  auth_provider field predicates
  """
  authProvider: UserHistoryAuthProvider
  authProviderNEQ: UserHistoryAuthProvider
  authProviderIn: [UserHistoryAuthProvider!]
  authProviderNotIn: [UserHistoryAuthProvider!]
  """
  role field predicates
  """
  role: UserHistoryRole
  roleNEQ: UserHistoryRole
  roleIn: [UserHistoryRole!]
  roleNotIn: [UserHistoryRole!]
  roleIsNil: Boolean
  roleNotNil: Boolean
}
"""
Ordering options for User connections
"""
input UserOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Users.
  """
  field: UserOrderField!
}
"""
Properties by which User connections can be ordered.
"""
enum UserOrderField {
  first_name
  last_name
  display_name
}
"""
UserRole is enum for the field role
"""
enum UserRole @goModel(model: "github.com/theopenlane/core/pkg/enums.Role") {
  ADMIN
  MEMBER
  USER
}
type UserSetting implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  userID: ID
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean!
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingUserStatus!
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean!
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
  user: User
  """
  organization to load on user login
  """
  defaultOrg: Organization
  files: [File!]
}
"""
A connection to a list of items.
"""
type UserSettingConnection {
  """
  A list of edges.
  """
  edges: [UserSettingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSettingEdge {
  """
  The item at the end of the edge.
  """
  node: UserSetting
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type UserSettingHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: UserSettingHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  userID: String
  """
  user account is locked if unconfirmed or explicitly locked
  """
  locked: Boolean!
  """
  The time notifications regarding the user were silenced
  """
  silencedAt: Time
  """
  The time the user was suspended
  """
  suspendedAt: Time
  """
  status of the user account
  """
  status: UserSettingHistoryUserStatus!
  """
  whether the user has confirmed their email address
  """
  emailConfirmed: Boolean!
  """
  specifies a user may complete authentication by verifying a WebAuthn capable device
  """
  isWebauthnAllowed: Boolean
  """
  whether the user has two factor authentication enabled
  """
  isTfaEnabled: Boolean
}
"""
A connection to a list of items.
"""
type UserSettingHistoryConnection {
  """
  A list of edges.
  """
  edges: [UserSettingHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSettingHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: UserSettingHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserSettingHistoryOpType is enum for the field operation
"""
enum UserSettingHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
UserSettingHistoryUserStatus is enum for the field status
"""
enum UserSettingHistoryUserStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
  ONBOARDING
}
"""
UserSettingHistoryWhereInput is used for filtering UserSettingHistory objects.
Input was generated by ent.
"""
input UserSettingHistoryWhereInput {
  not: UserSettingHistoryWhereInput
  and: [UserSettingHistoryWhereInput!]
  or: [UserSettingHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: UserSettingHistoryOpType
  operationNEQ: UserSettingHistoryOpType
  operationIn: [UserSettingHistoryOpType!]
  operationNotIn: [UserSettingHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  user_id field predicates
  """
  userID: String
  userIDNEQ: String
  userIDIn: [String!]
  userIDNotIn: [String!]
  userIDGT: String
  userIDGTE: String
  userIDLT: String
  userIDLTE: String
  userIDContains: String
  userIDHasPrefix: String
  userIDHasSuffix: String
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: String
  userIDContainsFold: String
  """
  locked field predicates
  """
  locked: Boolean
  lockedNEQ: Boolean
  """
  silenced_at field predicates
  """
  silencedAt: Time
  silencedAtNEQ: Time
  silencedAtIn: [Time!]
  silencedAtNotIn: [Time!]
  silencedAtGT: Time
  silencedAtGTE: Time
  silencedAtLT: Time
  silencedAtLTE: Time
  silencedAtIsNil: Boolean
  silencedAtNotNil: Boolean
  """
  suspended_at field predicates
  """
  suspendedAt: Time
  suspendedAtNEQ: Time
  suspendedAtIn: [Time!]
  suspendedAtNotIn: [Time!]
  suspendedAtGT: Time
  suspendedAtGTE: Time
  suspendedAtLT: Time
  suspendedAtLTE: Time
  suspendedAtIsNil: Boolean
  suspendedAtNotNil: Boolean
  """
  status field predicates
  """
  status: UserSettingHistoryUserStatus
  statusNEQ: UserSettingHistoryUserStatus
  statusIn: [UserSettingHistoryUserStatus!]
  statusNotIn: [UserSettingHistoryUserStatus!]
  """
  email_confirmed field predicates
  """
  emailConfirmed: Boolean
  emailConfirmedNEQ: Boolean
  """
  is_webauthn_allowed field predicates
  """
  isWebauthnAllowed: Boolean
  isWebauthnAllowedNEQ: Boolean
  isWebauthnAllowedIsNil: Boolean
  isWebauthnAllowedNotNil: Boolean
  """
  is_tfa_enabled field predicates
  """
  isTfaEnabled: Boolean
  isTfaEnabledNEQ: Boolean
  isTfaEnabledIsNil: Boolean
  isTfaEnabledNotNil: Boolean
}
"""
UserSettingUserStatus is enum for the field status
"""
enum UserSettingUserStatus @goModel(model: "github.com/theopenlane/core/pkg/enums.UserStatus") {
  ACTIVE
  INACTIVE
  DEACTIVATED
  SUSPENDED
  ONBOARDING
}
"""
UserSettingWhereInput is used for filtering UserSetting objects.
Input was generated by ent.
"""
input UserSettingWhereInput {
  not: UserSettingWhereInput
  and: [UserSettingWhereInput!]
  or: [UserSettingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  user_id field predicates
  """
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDGT: ID
  userIDGTE: ID
  userIDLT: ID
  userIDLTE: ID
  userIDContains: ID
  userIDHasPrefix: ID
  userIDHasSuffix: ID
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  userIDEqualFold: ID
  userIDContainsFold: ID
  """
  locked field predicates
  """
  locked: Boolean
  lockedNEQ: Boolean
  """
  silenced_at field predicates
  """
  silencedAt: Time
  silencedAtNEQ: Time
  silencedAtIn: [Time!]
  silencedAtNotIn: [Time!]
  silencedAtGT: Time
  silencedAtGTE: Time
  silencedAtLT: Time
  silencedAtLTE: Time
  silencedAtIsNil: Boolean
  silencedAtNotNil: Boolean
  """
  suspended_at field predicates
  """
  suspendedAt: Time
  suspendedAtNEQ: Time
  suspendedAtIn: [Time!]
  suspendedAtNotIn: [Time!]
  suspendedAtGT: Time
  suspendedAtGTE: Time
  suspendedAtLT: Time
  suspendedAtLTE: Time
  suspendedAtIsNil: Boolean
  suspendedAtNotNil: Boolean
  """
  status field predicates
  """
  status: UserSettingUserStatus
  statusNEQ: UserSettingUserStatus
  statusIn: [UserSettingUserStatus!]
  statusNotIn: [UserSettingUserStatus!]
  """
  email_confirmed field predicates
  """
  emailConfirmed: Boolean
  emailConfirmedNEQ: Boolean
  """
  is_webauthn_allowed field predicates
  """
  isWebauthnAllowed: Boolean
  isWebauthnAllowedNEQ: Boolean
  isWebauthnAllowedIsNil: Boolean
  isWebauthnAllowedNotNil: Boolean
  """
  is_tfa_enabled field predicates
  """
  isTfaEnabled: Boolean
  isTfaEnabledNEQ: Boolean
  isTfaEnabledIsNil: Boolean
  isTfaEnabledNotNil: Boolean
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  default_org edge predicates
  """
  hasDefaultOrg: Boolean
  hasDefaultOrgWith: [OrganizationWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameIsNil: Boolean
  firstNameNotNil: Boolean
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameIsNil: Boolean
  lastNameNotNil: Boolean
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  display_name field predicates
  """
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """
  avatar_remote_url field predicates
  """
  avatarRemoteURL: String
  avatarRemoteURLNEQ: String
  avatarRemoteURLIn: [String!]
  avatarRemoteURLNotIn: [String!]
  avatarRemoteURLGT: String
  avatarRemoteURLGTE: String
  avatarRemoteURLLT: String
  avatarRemoteURLLTE: String
  avatarRemoteURLContains: String
  avatarRemoteURLHasPrefix: String
  avatarRemoteURLHasSuffix: String
  avatarRemoteURLIsNil: Boolean
  avatarRemoteURLNotNil: Boolean
  avatarRemoteURLEqualFold: String
  avatarRemoteURLContainsFold: String
  """
  avatar_local_file field predicates
  """
  avatarLocalFile: String
  avatarLocalFileNEQ: String
  avatarLocalFileIn: [String!]
  avatarLocalFileNotIn: [String!]
  avatarLocalFileGT: String
  avatarLocalFileGTE: String
  avatarLocalFileLT: String
  avatarLocalFileLTE: String
  avatarLocalFileContains: String
  avatarLocalFileHasPrefix: String
  avatarLocalFileHasSuffix: String
  avatarLocalFileIsNil: Boolean
  avatarLocalFileNotNil: Boolean
  avatarLocalFileEqualFold: String
  avatarLocalFileContainsFold: String
  """
  avatar_local_file_id field predicates
  """
  avatarLocalFileID: ID
  avatarLocalFileIDNEQ: ID
  avatarLocalFileIDIn: [ID!]
  avatarLocalFileIDNotIn: [ID!]
  avatarLocalFileIDGT: ID
  avatarLocalFileIDGTE: ID
  avatarLocalFileIDLT: ID
  avatarLocalFileIDLTE: ID
  avatarLocalFileIDContains: ID
  avatarLocalFileIDHasPrefix: ID
  avatarLocalFileIDHasSuffix: ID
  avatarLocalFileIDIsNil: Boolean
  avatarLocalFileIDNotNil: Boolean
  avatarLocalFileIDEqualFold: ID
  avatarLocalFileIDContainsFold: ID
  """
  avatar_updated_at field predicates
  """
  avatarUpdatedAt: Time
  avatarUpdatedAtNEQ: Time
  avatarUpdatedAtIn: [Time!]
  avatarUpdatedAtNotIn: [Time!]
  avatarUpdatedAtGT: Time
  avatarUpdatedAtGTE: Time
  avatarUpdatedAtLT: Time
  avatarUpdatedAtLTE: Time
  avatarUpdatedAtIsNil: Boolean
  avatarUpdatedAtNotNil: Boolean
  """
  last_seen field predicates
  """
  lastSeen: Time
  lastSeenNEQ: Time
  lastSeenIn: [Time!]
  lastSeenNotIn: [Time!]
  lastSeenGT: Time
  lastSeenGTE: Time
  lastSeenLT: Time
  lastSeenLTE: Time
  lastSeenIsNil: Boolean
  lastSeenNotNil: Boolean
  """
  sub field predicates
  """
  sub: String
  subNEQ: String
  subIn: [String!]
  subNotIn: [String!]
  subGT: String
  subGTE: String
  subLT: String
  subLTE: String
  subContains: String
  subHasPrefix: String
  subHasSuffix: String
  subIsNil: Boolean
  subNotNil: Boolean
  subEqualFold: String
  subContainsFold: String
  """
  auth_provider field predicates
  """
  authProvider: UserAuthProvider
  authProviderNEQ: UserAuthProvider
  authProviderIn: [UserAuthProvider!]
  authProviderNotIn: [UserAuthProvider!]
  """
  role field predicates
  """
  role: UserRole
  roleNEQ: UserRole
  roleIn: [UserRole!]
  roleNotIn: [UserRole!]
  roleIsNil: Boolean
  roleNotNil: Boolean
  """
  personal_access_tokens edge predicates
  """
  hasPersonalAccessTokens: Boolean
  hasPersonalAccessTokensWith: [PersonalAccessTokenWhereInput!]
  """
  tfa_settings edge predicates
  """
  hasTfaSettings: Boolean
  hasTfaSettingsWith: [TFASettingWhereInput!]
  """
  setting edge predicates
  """
  hasSetting: Boolean
  hasSettingWith: [UserSettingWhereInput!]
  """
  groups edge predicates
  """
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  """
  organizations edge predicates
  """
  hasOrganizations: Boolean
  hasOrganizationsWith: [OrganizationWhereInput!]
  """
  files edge predicates
  """
  hasFiles: Boolean
  hasFilesWith: [FileWhereInput!]
  """
  file edge predicates
  """
  hasFile: Boolean
  hasFileWith: [FileWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  actionplans edge predicates
  """
  hasActionplans: Boolean
  hasActionplansWith: [ActionPlanWhereInput!]
  """
  subcontrols edge predicates
  """
  hasSubcontrols: Boolean
  hasSubcontrolsWith: [SubcontrolWhereInput!]
  """
  assigner_tasks edge predicates
  """
  hasAssignerTasks: Boolean
  hasAssignerTasksWith: [TaskWhereInput!]
  """
  assignee_tasks edge predicates
  """
  hasAssigneeTasks: Boolean
  hasAssigneeTasksWith: [TaskWhereInput!]
  """
  programs edge predicates
  """
  hasPrograms: Boolean
  hasProgramsWith: [ProgramWhereInput!]
  """
  group_memberships edge predicates
  """
  hasGroupMemberships: Boolean
  hasGroupMembershipsWith: [GroupMembershipWhereInput!]
  """
  org_memberships edge predicates
  """
  hasOrgMemberships: Boolean
  hasOrgMembershipsWith: [OrgMembershipWhereInput!]
  """
  program_memberships edge predicates
  """
  hasProgramMemberships: Boolean
  hasProgramMembershipsWith: [ProgramMembershipWhereInput!]
}
type Webhook implements Node {
  id: ID!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: ID
  """
  the name of the webhook
  """
  name: String!
  """
  a description of the webhook
  """
  description: String
  """
  the url to send the webhook to
  """
  destinationURL: String!
  """
  indicates if the webhook is active and enabled
  """
  enabled: Boolean!
  """
  the number of failures
  """
  failures: Int
  """
  the last error message
  """
  lastError: String
  """
  the last response
  """
  lastResponse: String
  owner: Organization
  events: [Event!]
  integrations: [Integration!]
}
"""
A connection to a list of items.
"""
type WebhookConnection {
  """
  A list of edges.
  """
  edges: [WebhookEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WebhookEdge {
  """
  The item at the end of the edge.
  """
  node: Webhook
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type WebhookHistory implements Node {
  id: ID!
  historyTime: Time!
  ref: String
  operation: WebhookHistoryOpType!
  createdAt: Time
  updatedAt: Time
  createdBy: String
  updatedBy: String
  """
  tags associated with the object
  """
  tags: [String!]
  deletedAt: Time
  deletedBy: String
  """
  the organization id that owns the object
  """
  ownerID: String
  """
  the name of the webhook
  """
  name: String!
  """
  a description of the webhook
  """
  description: String
  """
  the url to send the webhook to
  """
  destinationURL: String!
  """
  indicates if the webhook is active and enabled
  """
  enabled: Boolean!
  """
  the number of failures
  """
  failures: Int
  """
  the last error message
  """
  lastError: String
  """
  the last response
  """
  lastResponse: String
}
"""
A connection to a list of items.
"""
type WebhookHistoryConnection {
  """
  A list of edges.
  """
  edges: [WebhookHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type WebhookHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: WebhookHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
WebhookHistoryOpType is enum for the field operation
"""
enum WebhookHistoryOpType @goModel(model: "github.com/theopenlane/entx/history.OpType") {
  INSERT
  UPDATE
  DELETE
}
"""
Ordering options for WebhookHistory connections
"""
input WebhookHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order WebhookHistories.
  """
  field: WebhookHistoryOrderField!
}
"""
Properties by which WebhookHistory connections can be ordered.
"""
enum WebhookHistoryOrderField {
  name
  url
}
"""
WebhookHistoryWhereInput is used for filtering WebhookHistory objects.
Input was generated by ent.
"""
input WebhookHistoryWhereInput {
  not: WebhookHistoryWhereInput
  and: [WebhookHistoryWhereInput!]
  or: [WebhookHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  history_time field predicates
  """
  historyTime: Time
  historyTimeNEQ: Time
  historyTimeIn: [Time!]
  historyTimeNotIn: [Time!]
  historyTimeGT: Time
  historyTimeGTE: Time
  historyTimeLT: Time
  historyTimeLTE: Time
  """
  ref field predicates
  """
  ref: String
  refNEQ: String
  refIn: [String!]
  refNotIn: [String!]
  refGT: String
  refGTE: String
  refLT: String
  refLTE: String
  refContains: String
  refHasPrefix: String
  refHasSuffix: String
  refIsNil: Boolean
  refNotNil: Boolean
  refEqualFold: String
  refContainsFold: String
  """
  operation field predicates
  """
  operation: WebhookHistoryOpType
  operationNEQ: WebhookHistoryOpType
  operationIn: [WebhookHistoryOpType!]
  operationNotIn: [WebhookHistoryOpType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: String
  ownerIDNEQ: String
  ownerIDIn: [String!]
  ownerIDNotIn: [String!]
  ownerIDGT: String
  ownerIDGTE: String
  ownerIDLT: String
  ownerIDLTE: String
  ownerIDContains: String
  ownerIDHasPrefix: String
  ownerIDHasSuffix: String
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: String
  ownerIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  destination_url field predicates
  """
  destinationURL: String
  destinationURLNEQ: String
  destinationURLIn: [String!]
  destinationURLNotIn: [String!]
  destinationURLGT: String
  destinationURLGTE: String
  destinationURLLT: String
  destinationURLLTE: String
  destinationURLContains: String
  destinationURLHasPrefix: String
  destinationURLHasSuffix: String
  destinationURLEqualFold: String
  destinationURLContainsFold: String
  """
  enabled field predicates
  """
  enabled: Boolean
  enabledNEQ: Boolean
  """
  failures field predicates
  """
  failures: Int
  failuresNEQ: Int
  failuresIn: [Int!]
  failuresNotIn: [Int!]
  failuresGT: Int
  failuresGTE: Int
  failuresLT: Int
  failuresLTE: Int
  failuresIsNil: Boolean
  failuresNotNil: Boolean
  """
  last_error field predicates
  """
  lastError: String
  lastErrorNEQ: String
  lastErrorIn: [String!]
  lastErrorNotIn: [String!]
  lastErrorGT: String
  lastErrorGTE: String
  lastErrorLT: String
  lastErrorLTE: String
  lastErrorContains: String
  lastErrorHasPrefix: String
  lastErrorHasSuffix: String
  lastErrorIsNil: Boolean
  lastErrorNotNil: Boolean
  lastErrorEqualFold: String
  lastErrorContainsFold: String
  """
  last_response field predicates
  """
  lastResponse: String
  lastResponseNEQ: String
  lastResponseIn: [String!]
  lastResponseNotIn: [String!]
  lastResponseGT: String
  lastResponseGTE: String
  lastResponseLT: String
  lastResponseLTE: String
  lastResponseContains: String
  lastResponseHasPrefix: String
  lastResponseHasSuffix: String
  lastResponseIsNil: Boolean
  lastResponseNotNil: Boolean
  lastResponseEqualFold: String
  lastResponseContainsFold: String
}
"""
Ordering options for Webhook connections
"""
input WebhookOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Webhooks.
  """
  field: WebhookOrderField!
}
"""
Properties by which Webhook connections can be ordered.
"""
enum WebhookOrderField {
  name
  url
}
"""
WebhookWhereInput is used for filtering Webhook objects.
Input was generated by ent.
"""
input WebhookWhereInput {
  not: WebhookWhereInput
  and: [WebhookWhereInput!]
  or: [WebhookWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  idEqualFold: ID
  idContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """
  created_by field predicates
  """
  createdBy: String
  createdByNEQ: String
  createdByIn: [String!]
  createdByNotIn: [String!]
  createdByGT: String
  createdByGTE: String
  createdByLT: String
  createdByLTE: String
  createdByContains: String
  createdByHasPrefix: String
  createdByHasSuffix: String
  createdByIsNil: Boolean
  createdByNotNil: Boolean
  createdByEqualFold: String
  createdByContainsFold: String
  """
  updated_by field predicates
  """
  updatedBy: String
  updatedByNEQ: String
  updatedByIn: [String!]
  updatedByNotIn: [String!]
  updatedByGT: String
  updatedByGTE: String
  updatedByLT: String
  updatedByLTE: String
  updatedByContains: String
  updatedByHasPrefix: String
  updatedByHasSuffix: String
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  updatedByEqualFold: String
  updatedByContainsFold: String
  """
  deleted_at field predicates
  """
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """
  deleted_by field predicates
  """
  deletedBy: String
  deletedByNEQ: String
  deletedByIn: [String!]
  deletedByNotIn: [String!]
  deletedByGT: String
  deletedByGTE: String
  deletedByLT: String
  deletedByLTE: String
  deletedByContains: String
  deletedByHasPrefix: String
  deletedByHasSuffix: String
  deletedByIsNil: Boolean
  deletedByNotNil: Boolean
  deletedByEqualFold: String
  deletedByContainsFold: String
  """
  owner_id field predicates
  """
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDGT: ID
  ownerIDGTE: ID
  ownerIDLT: ID
  ownerIDLTE: ID
  ownerIDContains: ID
  ownerIDHasPrefix: ID
  ownerIDHasSuffix: ID
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  ownerIDEqualFold: ID
  ownerIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  destination_url field predicates
  """
  destinationURL: String
  destinationURLNEQ: String
  destinationURLIn: [String!]
  destinationURLNotIn: [String!]
  destinationURLGT: String
  destinationURLGTE: String
  destinationURLLT: String
  destinationURLLTE: String
  destinationURLContains: String
  destinationURLHasPrefix: String
  destinationURLHasSuffix: String
  destinationURLEqualFold: String
  destinationURLContainsFold: String
  """
  enabled field predicates
  """
  enabled: Boolean
  enabledNEQ: Boolean
  """
  failures field predicates
  """
  failures: Int
  failuresNEQ: Int
  failuresIn: [Int!]
  failuresNotIn: [Int!]
  failuresGT: Int
  failuresGTE: Int
  failuresLT: Int
  failuresLTE: Int
  failuresIsNil: Boolean
  failuresNotNil: Boolean
  """
  last_error field predicates
  """
  lastError: String
  lastErrorNEQ: String
  lastErrorIn: [String!]
  lastErrorNotIn: [String!]
  lastErrorGT: String
  lastErrorGTE: String
  lastErrorLT: String
  lastErrorLTE: String
  lastErrorContains: String
  lastErrorHasPrefix: String
  lastErrorHasSuffix: String
  lastErrorIsNil: Boolean
  lastErrorNotNil: Boolean
  lastErrorEqualFold: String
  lastErrorContainsFold: String
  """
  last_response field predicates
  """
  lastResponse: String
  lastResponseNEQ: String
  lastResponseIn: [String!]
  lastResponseNotIn: [String!]
  lastResponseGT: String
  lastResponseGTE: String
  lastResponseLT: String
  lastResponseLTE: String
  lastResponseContains: String
  lastResponseHasPrefix: String
  lastResponseHasSuffix: String
  lastResponseIsNil: Boolean
  lastResponseNotNil: Boolean
  lastResponseEqualFold: String
  lastResponseContainsFold: String
  """
  owner edge predicates
  """
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  """
  events edge predicates
  """
  hasEvents: Boolean
  hasEventsWith: [EventWhereInput!]
  """
  integrations edge predicates
  """
  hasIntegrations: Boolean
  hasIntegrationsWith: [IntegrationWhereInput!]
}
