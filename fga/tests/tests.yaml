name: Openlane
model_file: ../model/model.fga
tuple_file: tuples/_tuples.yaml
tests:
  - name: organization
    description: test organization relationships
    tuple_file: tuples/organizations.yaml
    check:
      - user: user:ulid-of-owner
        object: organization:openlane
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: false
          owner: true
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-member
        object: organization:openlane
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: service:ulid-of-service-editor
        object: organization:openlane # parent org
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
      - user: service:ulid-of-service-viewer
        object: organization:openlane # parent org
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: user:ulid-of-admin
        object: organization:openlane # parent org
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: true
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-audit-log-viewer
        object: organization:openlane # parent org
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: false
      - user: user:ulid-of-owner
        object: organization:foo #child org
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: false
          owner: true
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-member
        object: organization:foo # child org
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: user:ulid-of-admin
        object: organization:foo # child org
        context:
          email_domain: "example.com"
        assertions:
          member: true
          admin: true
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
      - user: user:support-user
        object: organization:openlane
        context:
          current_time: "2025-02-14T00:24:00Z" # valid grant
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: user:support-user
        object: organization:openlane
        context:
          current_time: "2025-02-14T02:24:02Z" # expired grant
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: false
          audit_log_viewer: false
          can_invite_members: false
          can_invite_admins: false
      - user: user:ulid-of-member
        object: organization:restricted
        context:
          email_domain: "example.com"
        assertions:
          member: true # they are a member of the org, but have no other permissions
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: false
          audit_log_viewer: false
          can_invite_members: false
          can_invite_admins: false
    list_objects:
      - user: user:ulid-of-owner
        type: organization
        assertions:
          owner:
            - organization:foo
            - organization:openlane
          admin:
          member:
            - organization:foo
            - organization:openlane
      - user: user:ulid-of-member
        type: organization
        assertions:
          owner:
          admin:
          member:
            - organization:foo
            - organization:openlane
            - organization:restricted
      - user: service:ulid-of-service-editor
        type: organization
        assertions:
          can_edit:
            - organization:foo
            - organization:openlane
          can_view:
            - organization:foo
            - organization:openlane
      - user: service:ulid-of-service-viewer
        type: organization
        assertions:
          can_edit:
          can_view:
            - organization:foo
            - organization:openlane
      - user: user:ulid-of-admin
        type: organization
        assertions:
          owner:
          admin:
            - organization:foo
            - organization:openlane
          member:
            - organization:foo
            - organization:openlane
  - name: groups
    description: test group relationships to their parent (organization)
    tuple_file: tuples/groups.yaml
    check:
      - user: organization:openlane
        object: group:cat-lovers
        context:
          relation: can_view
        assertions:
          parent: true
      - user: user:ulid-of-owner
        object: group:cat-lovers
        assertions:
          admin: true
          member: false
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
      - user: user:ulid-of-member
        object: group:cat-lovers
        assertions:
          admin: false
          member: true
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
      - user: service:ulid-of-service-editor
        object: group:cat-lovers
        assertions:
          admin: false
          member: false
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: false
      # private group check
      - user: user:ulid-of-member-2
        object: group:cat-haters
        assertions:
          admin: false
          member: false
          can_delete: false
          can_edit: false
          can_view: false
          audit_log_viewer: false
      - user: user:ulid-of-owner
        object: group:cat-haters
        assertions:
          admin: true
          member: false
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: false
    list_objects:
      - user: user:ulid-of-owner
        type: group
        assertions:
          admin:
            - group:cat-lovers
            - group:cat-haters
      - user: user:ulid-of-member
        type: group
        assertions:
          admin:
          member:
            - group:cat-lovers
      - user: user:ulid-of-admin # user wasn't added to group
        type: group
        assertions:
          admin:
          member:
  - name: files
    description: files can be associated to many objects and users can access files based on their permissions
    tuple_file: tuples/files.yaml
    check:
      - user: user:ulid-of-admin # admin of the file should have all permissions
        object: file:file-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # user with indirect view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-no-access # user with no access to file
        object: file:file-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-other-3 # admin of program that has access to file
        object: file:file-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-contact-1 # owner of contact org that is the parent of the file
        object: file:file-3
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
  - name: tasks
    description: tasks can be associated to many objects and users can access tasks based on their permissions
    tuple_file: tuples/tasks.yaml
    check:
      - user: user:ulid-of-admin # parent user of the task should have all permissions
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-owner
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # assignee of the task should have all permissions except delete
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-of-member-2 # assigner of the task should have all permissions
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to task
        object: task:task-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # user assignee of the task
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-no-access # user with no access to task
        object: task:task-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-other-3 # admin of program that has access to task
        object: task:task-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-program-member # member access has view permissions to the notes
        object: task:task-1
        assertions:
          can_view: true #
          can_edit: false
          can_delete: false
      - user: user:ulid-program-admin # program admin has edit access to the task
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-program-member # member access has view permissions to the notes
        object: note:note-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # program member access has view permissions to the notes attached to the task
        object: note:note-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-program-admin # program admin has access to view notes
        object: note:note-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-control-viewer # control viewer has access task 2
        object: task:task-2
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-control-viewer # control viewer has no access to task 1
        object: task:task-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-control-viewer # control viewer has no access to note 1, associated with task 1
        object: note:note-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
  - name: procedures
    description: procedures are associated with an organization and by default all user in the organization can view them. edit access is provided by groups.
    tuple_file: tuples/procedures.yaml
    check:
      - user: user:ulid-admin # admin of the procedure should have all permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the procedure should have edit permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-2 # blocked user of the procedure should have no permissions
        object: procedure:procedure-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-auditor # auditor of the program should have view permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
  - name: internal policies
    description: policies are associated with an organization and by default all user in the organization can view them. edit access is provided by groups.
    tuple_file: tuples/policies.yaml
    check:
      - user: user:ulid-admin # admin of the internal_policy should have all permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the internal_policy should have edit permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-2 # blocked user of the internal_policy should have no permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-auditor # auditor of the program should have view permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
  - name: programs
    description: programs are associated with an organization
    tuple_file: tuples/programs.yaml
    check:
      - user: user:ulid-admin # admin of the program should have all permissions
        object: program:program-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the program should have edit permissions
        object: program:program-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-group-2 # blocked user of the program should have no permissions
        object: program:program-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
  - name: evidence
    description: evidence are always with an organization, and can be linked to many objects within the system
    tuple_file: tuples/evidence.yaml
    check:
      - user: user:ulid-admin # has can_delete permission on the evidence
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-task-assignee # assignee of the task that has access to the evidence via the task
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-member # member of the program that has access to the evidence via the program
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:group-editor # editor of the group that has access to the evidence
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
  - name: notes
    description: notes can be associated to many objects and users can access notes based on their permissions
    tuple_file: tuples/notes.yaml
    check:
      - user: user:ulid-admin
        object: note:note-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to note
        object: note:note-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner
        object: note:note-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-owner-foobar # user of another org should have no access
        object: note:note-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
  - name: controls and subcontrols
    description: control access is granted via groups and the parent program, subcontrols inherit permissions from their parent control
    tuple_file: tuples/controls.yaml
    check:
      - user: user:ulid-of-member # member of the program that has access to the control
        object: control:control-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-another-member # no access to the control
        object: control:control-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-editor
        object: control:control-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-control-1-viewer
        object: control:control-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-blocked
        object: control:control-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner # owner can view, edit, and delete the control
        object: control:control-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # member of the program that has access to the control
        object: subcontrol:subcontrol-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-another-member # no access to the control
        object: subcontrol:subcontrol-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-editor
        object: subcontrol:subcontrol-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-control-1-viewer
        object: subcontrol:subcontrol-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-blocked
        object: subcontrol:subcontrol-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner # owner can view, edit, and delete the control
        object: subcontrol:subcontrol-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # member of the program that has access to the control objective via the control
        object: control_objective:control_objective-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-another-member # no access to the control objective
        object: control_objective:control_objective-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-editor
        object: control_objective:control_objective-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-control-1-viewer
        object: control_objective:control_objective-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-blocked
        object: control_objective:control_objective-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner # owner can view, edit, and delete the control objective
        object: control_objective:control_objective-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # member of the program that has access to the control objective via the subcontrol
        object: control_objective:control_objective-2
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-another-member # no access to the control objective
        object: control_objective:control_objective-2
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-editor
        object: control_objective:control_objective-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-control-1-viewer
        object: control_objective:control_objective-2
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-blocked
        object: control_objective:control_objective-2
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner # owner can view, edit, and delete the control objective
        object: control_objective:control_objective-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # member of the program that has access to the control objective via the subcontrol
        object: control_objective:control_objective-3
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-another-member # no access to the control objective
        object: control_objective:control_objective-3
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-editor
        object: control_objective:control_objective-3 # no access to the control objective, it was granted via a program
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-viewer
        object: control_objective:control_objective-3 # no access to the control objective, it was granted via a program
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-group-control-1-blocked
        object: control_objective:control_objective-3
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-of-owner # owner can view, edit, and delete the control objective
        object: control_objective:control_objective-3
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member # editor of the standard that has access to the control
        object: control:control-standard-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member-2 # no access to the standard or control
        object: control:control-standard-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
  - name: standard
    description: standards can be made public with system-owned standards, or organizations can create their own custom standards
    tuple_file: tuples/standards.yaml
    check:
      - user: user:ulid-of-member
        object: standard:standard-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-member-2
        object: standard:standard-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-member
        object: standard:standard-system-owned-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-member-2
        object: standard:standard-system-owned-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-member
        object: standard:standard-org-custom
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-of-admin
        object: standard:standard-org-custom
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-owner
        object: standard:standard-org-custom
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-of-owner-foobar
        object: standard:standard-org-custom
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
