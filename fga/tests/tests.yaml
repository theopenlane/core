name: Openlane
model_file: ../model/model.fga
tuples:
  # setup parent child org relationship
  - user: organization:openlane
    relation: parent
    object: organization:foo
  # setup org primary owner
  - user: user:ulid-of-owner
    relation: owner
    object: organization:openlane
  # setup org admin
  - user: user:ulid-of-admin
    relation: admin
    object: organization:openlane
  # setup org member
  - user: user:ulid-of-member
    relation: member
    object: organization:openlane
  # setup audit log viewer
  - user: user:ulid-of-audit-log-viewer
    relation: member
    object: organization:openlane
  - user: user:ulid-of-audit-log-viewer
    relation: audit_log_viewer
    object: organization:openlane
  # setup service user
  - user: service:ulid-of-service-editor
    relation: can_edit
    object: organization:openlane
  # setup service user
  - user: service:ulid-of-service-viewer
    relation: can_view
    object: organization:openlane
  # setup programs under org
  - user: organization:openlane
    relation: parent
    object: program:program-1
  - user: user:ulid-other-2
    relation: member
    object: organization:openlane
  # setup another program under org
  - user: organization:openlane
    relation: parent
    object: program:program-2
  - user: user:ulid-other-3
    relation: member
    object: organization:openlane
  # setup an auditor for the first program
  - user: user:ulid-auditor
    relation: auditor
    object: program:program-1
tests:
  - name: organization
    description: test organization relationships
    tuples:
    # add test local tuples here
    check:
      - user: user:ulid-of-owner
        object: organization:openlane # parent org
        assertions:
          member: true
          admin: false
          owner: true
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-member
        object: organization:openlane # parent org
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: service:ulid-of-service-editor
        object: organization:openlane # parent org
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
      - user: service:ulid-of-service-viewer
        object: organization:openlane # parent org
        assertions:
          member: false
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: false
          can_invite_admins: false
      - user: user:ulid-of-admin
        object: organization:openlane # parent org
        assertions:
          member: true
          admin: true
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-audit-log-viewer
        object: organization:openlane # parent org
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: false
      - user: user:ulid-of-owner
        object: organization:foo #child org
        assertions:
          member: true
          admin: false
          owner: true
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
          can_invite_members: true
          can_invite_admins: true
      - user: user:ulid-of-member
        object: organization:foo # child org
        assertions:
          member: true
          admin: false
          owner: false
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: false
      - user: user:ulid-of-admin
        object: organization:foo # child org
        assertions:
          member: true
          admin: true
          owner: false
          can_delete: false
          can_edit: true
          can_view: true
          audit_log_viewer: false
          can_invite_members: true
          can_invite_admins: true
    list_objects:
      - user: user:ulid-of-owner
        type: organization
        assertions:
          owner:
            - organization:foo
            - organization:openlane
          admin:
          member:
            - organization:foo
            - organization:openlane
      - user: user:ulid-of-member
        type: organization
        assertions:
          owner:
          admin:
          member:
            - organization:foo
            - organization:openlane
      - user: service:ulid-of-service-editor
        type: organization
        assertions:
          can_edit:
            - organization:foo
            - organization:openlane
          can_view:
            - organization:foo
            - organization:openlane
      - user: service:ulid-of-service-viewer
        type: organization
        assertions:
          can_edit:
          can_view:
            - organization:foo
            - organization:openlane
      - user: user:ulid-of-admin
        type: organization
        assertions:
          owner:
          admin:
            - organization:foo
            - organization:openlane
          member:
            - organization:foo
            - organization:openlane
  - name: groups
    description: test group relationships to their parent (organization)
    tuples:
      # setup group with owner
      - user: organization:openlane
        relation: parent
        object: group:cat-lovers
      # add group admin
      - user: user:ulid-of-owner
        relation: admin
        object: group:cat-lovers
      # add group member but not a member of the org
      - user: user:ulid-of-cat-lover-member
        relation: member
        object: group:cat-lovers
      # add audit log viewer
      - user: user:ulid-of-audit-log-viewer
        relation: member
        object: group:cat-lovers
      - user: user:ulid-of-audit-log-viewer
        relation: audit_log_viewer
        object: group:cat-lovers
      # add group admin
      - user: user:ulid-of-member
        relation: member
        object: group:cat-lovers
    check:
      - user: organization:openlane
        object: group:cat-lovers
        assertions:
          parent: true
      - user: user:ulid-of-owner
        object: group:cat-lovers
        assertions:
          admin: true
          member: true
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: true
      - user: user:ulid-of-cat-lover-member
        object: group:cat-lovers
        assertions:
          admin: false
          member: false # not an org member so should be false
          can_delete: false
          can_edit: false
          can_view: false
          audit_log_viewer: false
      - user: user:ulid-of-member
        object: group:cat-lovers
        assertions:
          admin: false
          member: true
          can_delete: false
          can_edit: false
          can_view: true
          audit_log_viewer: false
      - user: service:ulid-of-service-editor
        object: group:cat-lovers
        assertions:
          admin: false
          member: false
          can_delete: true
          can_edit: true
          can_view: true
          audit_log_viewer: false
    list_objects:
      - user: user:ulid-of-owner
        type: group
        assertions:
          admin:
            - group:cat-lovers
          member:
            - group:cat-lovers
      - user: user:ulid-of-member
        type: group
        assertions:
          admin:
          member:
            - group:cat-lovers
      - user: user:ulid-of-admin # user wasn't added to group
        type: group
        assertions:
          admin:
          member:
  - name: files
    description: files can be associated to many objects and users can access files based on their permissions
    tuples:
      - user: user:ulid-admin
        relation: can_delete
        object: file:file-1
      - user: user:ulid-other-1
        relation: can_view
        object: file:file-1 # direct access
      - user: user:ulid-other-2
        relation: member
        object: program:program-1 # indirect access
      - user: program:program-1
        relation: parent
        object: file:file-1 # program has access to file
      - user: control:control-1
        relation: parent
        object: file:file-2 # control has access to file
      - user: program:program-2
        relation: parent
        object: control:control-1 # program has access to control
      - user: user:ulid-other-3
        relation: admin
        object: program:program-2
      - user: contact:contact-1
        relation: parent
        object: file:file-3 # contact has access to file
      - user: user:ulid-contact-1
        relation: owner
        object: organization:contact-org
      - user: organization:contact-org
        relation: parent
        object: contact:contact-1
    check:
      - user: user:ulid-admin # admin of the file should have all permissions
        object: file:file-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # user with indirect view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-no-access # user with no access to file
        object: file:file-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-other-3 # admin of program that has access to file
        object: file:file-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-contact-1 # owner of contact org that is the parent of the file
        object: file:file-3
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
  - name: files
    description: files can be associated to many objects and users can access files based on their permissions
    tuples:
      - user: user:ulid-admin
        relation: can_delete
        object: file:file-1
      - user: user:ulid-other-1
        relation: can_view
        object: file:file-1 # direct access
      - user: user:ulid-other-2
        relation: member
        object: program:program-1 # indirect access
      - user: program:program-1
        relation: parent
        object: file:file-1 # program has access to file
      - user: control:control-1
        relation: parent
        object: file:file-2 # control has access to file
      - user: program:program-2
        relation: parent
        object: control:control-1 # program has access to control
      - user: user:ulid-other-3
        relation: admin
        object: program:program-2
      - user: contact:contact-1
        relation: parent
        object: file:file-3 # contact has access to file
      - user: user:ulid-contact-1
        relation: owner
        object: organization:contact-org
      - user: organization:contact-org
        relation: parent
        object: contact:contact-1
    check:
      - user: user:ulid-admin # admin of the file should have all permissions
        object: file:file-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # user with indirect view access to file
        object: file:file-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-no-access # user with no access to file
        object: file:file-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-other-3 # admin of program that has access to file
        object: file:file-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-contact-1 # owner of contact org that is the parent of the file
        object: file:file-3
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
  - name: tasks
    description: tasks can be associated to many objects and users can access tasks based on their permissions
    tuples:
      - user: user:ulid-admin
        relation: can_delete
        object: task:task-1
      - user: user:ulid-other-1
        relation: can_view
        object: task:task-1 # direct access
      - user: user:ulid-other-2
        relation: member
        object: program:program-1 # indirect access
      - user: program:program-1
        relation: parent
        object: task:task-1 # program has access to task
      - user: control:control-1
        relation: parent
        object: task:task-2 # control has access to task
      - user: program:program-2
        relation: parent
        object: control:control-1 # program has access to control
      - user: user:ulid-other-3
        relation: admin
        object: program:program-2
      - user: group:group-1
        relation: parent
        object: task:task-3 # group has access to task
      - user: user:ulid-group-1
        relation: owner
        object: organization:group-org
      - user: organization:group-org
        relation: parent
        object: group:group-1
    check:
      - user: user:ulid-admin # admin of the task should have all permissions
        object: task:task-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-other-1 # user with direct view access to task
        object: task:task-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-other-2 # user with indirect view access to task
        object: task:task-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:ulid-no-access # user with no access to task
        object: task:task-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-other-3 # admin of program that has access to task
        object: task:task-2
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-1 # owner of group org that is the parent of the task
        object: task:task-3
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
  - name: procedures
    description: procedures are associated with an organization and by default all user in the organization can view them. edit access is provided by groups.
    tuples:
      # setup users and groups
      - user: user:ulid-group-editor
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-editor
      - user: user:ulid-group-editor
        relation: member
        object: group:group-editor

      - user: user:ulid-group-blocked
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-blocked
      - user: user:ulid-group-blocked
        relation: member
        object: group:group-blocked

      # setup procedure
      - user: user:ulid-admin
        relation: admin
        object: procedure:procedure-1
      - user: organization:openlane
        relation: parent
        object: procedure:procedure-1

      # setup group permissions for procedure
      - user: group:group-editor#member
        relation: editor
        object: procedure:procedure-1
      - user: group:group-blocked#member
        relation: blocked
        object: procedure:procedure-1

      # setup view permissions for auditors
      - user: program:program-1#auditor
        relation: viewer
        object: procedure:procedure-1
    check:
      - user: user:ulid-admin # admin of the procedure should have all permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the procedure should have edit permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-2 # blocked user of the procedure should have no permissions
        object: procedure:procedure-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-auditor # auditor of the program should have view permissions
        object: procedure:procedure-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
  - name: internal policies
    description: policies are associated with an organization and by default all user in the organization can view them. edit access is provided by groups.
    tuples:
      # setup users and groups
      - user: user:ulid-group-editor
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-editor
      - user: user:ulid-group-editor
        relation: member
        object: group:group-editor

      - user: user:ulid-group-blocked
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-blocked
      - user: user:ulid-group-blocked
        relation: member
        object: group:group-blocked

      # setup internal_policy
      - user: user:ulid-admin
        relation: admin
        object: internal_policy:internal_policy-1
      - user: organization:openlane
        relation: parent
        object: internal_policy:internal_policy-1

      # setup group permissions for internal_policy
      - user: group:group-editor#member
        relation: editor
        object: internal_policy:internal_policy-1
      - user: group:group-blocked#member
        relation: blocked
        object: internal_policy:internal_policy-1

      # setup view permissions for auditors
      - user: program:program-1#auditor
        relation: viewer
        object: internal_policy:internal_policy-1
    check:
      - user: user:ulid-admin # admin of the internal_policy should have all permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the internal_policy should have edit permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-2 # blocked user of the internal_policy should have no permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
      - user: user:ulid-auditor # auditor of the program should have view permissions
        object: internal_policy:internal_policy-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
  - name: programs
    description: programs are associated with an organization
    tuples:
      # setup users and groups
      - user: user:ulid-group-editor
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-editor
      - user: user:ulid-group-editor
        relation: member
        object: group:group-editor

      - user: user:ulid-group-blocked
        relation: member
        object: organization:openlane
      - user: organization:openlane
        relation: parent
        object: group:group-blocked
      - user: user:ulid-group-blocked
        relation: member
        object: group:group-blocked

      - user: user:ulid-admin
        relation: admin
        object: organization:openlane

      # setup programs
      - user: user:ulid-admin
        relation: admin
        object: program:program-1

      # setup group permissions for program
      - user: group:group-editor#member
        relation: editor
        object: program:program-1
      - user: group:group-blocked#member
        relation: blocked
        object: program:program-1
    check:
      - user: user:ulid-admin # admin of the program should have all permissions
        object: program:program-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-group-editor # editor of the program should have edit permissions
        object: program:program-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-group-2 # blocked user of the program should have no permissions
        object: program:program-1
        assertions:
          can_view: false
          can_edit: false
          can_delete: false
  - name: evidence
    description: evidence are always with an organization, and can be linked to many objects within the system
    tuples:
      # Setup evidence object and relationships
      - user: program:program-1
        relation: parent
        object: evidence:evidence-1
      - user: user:ulid-admin
        relation: can_delete
        object: evidence:evidence-1
      - user: task:task-1
        relation: parent
        object: evidence:evidence-1
      - user: user:ulid-task-assignee
        relation: assignee
        object: task:task-1
      - user: user:ulid-member
        relation: member
        object: program:program-1
      - user: user:ulid-member
        relation: member
        object: organization:openlane
      - user: user:group-editor
        relation: member
        object: group:editor-1
      - user: group:editor-1#member
        relation: editor
        object: evidence:evidence-1
      - user: organization:openlane
        relation: parent
        object: group:editor-1
      - user: user:group-editor
        relation: member
        object: organization:openlane
    check:
      - user: user:ulid-admin # has can_delete permission on the evidence
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
      - user: user:ulid-task-assignee # assignee of the task that has access to the evidence via the task
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: false
      - user: user:ulid-member # member of the program that has access to the evidence via the program
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: false
          can_delete: false
      - user: user:group-editor # editor of the group that has access to the evidence
        object: evidence:evidence-1
        assertions:
          can_view: true
          can_edit: true
          can_delete: true
