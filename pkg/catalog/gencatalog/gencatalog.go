// Code generated by gencatalog.go; DO NOT EDIT.

package gencatalog

import (
	catalog "github.com/theopenlane/core/pkg/catalog"
	models "github.com/theopenlane/core/pkg/models"
)

var DefaultCatalog = catalog.Catalog{
	Addons: map[string]catalog.Feature{
		string(models.ModuleDomainScanning): catalog.Feature{
			Audience: "private",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "domain_scan_monthly",
				Nickname:   "domain_scan_monthly",
				UnitAmount: int64(10000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "domain_scan_annually",
				Nickname:   "domain_scan_annually",
				UnitAmount: int64(100000),
			}}},
			Description: "Domain and Vulnerability Scanning",
			DisplayName: "Scanning",
			LookupKey:   "domain_scanning_module",
		},
		string(models.ModuleExtraEvidenceStorage): catalog.Feature{
			Audience: "public",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "extra_evidence_storage_100gb",
				Metadata:   map[string]string{"increment_gb": "100"},
				Nickname:   "extra_evidence_storage_100gb",
				UnitAmount: int64(1000),
			}}},
			Description: "Additional evidence storage for compliance",
			DisplayName: "Additional Evidence Storage (100GB)",
			LookupKey:   "extra_evidence_storage_module",
		},
		string(models.ModulePolicyManagement): catalog.Feature{
			Audience: "beta",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_policy_mgmt_monthly",
				Nickname:   "price_policy_mgmt_monthly",
				UnitAmount: int64(1000),
			}, catalog.Price{
				Interval:   "month",
				LookupKey:  "price_policy_mgmt_annually",
				Nickname:   "price_policy_mgmt_annually",
				UnitAmount: int64(10000),
			}}},
			Description: "Policy and Procedure Management",
			DisplayName: "Policy & Procedure Management",
			LookupKey:   "policy_management_module",
		},
		string(models.ModuleRiskManagement): catalog.Feature{
			Audience: "beta",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_risk_mgmt_monthly",
				Nickname:   "price_risk_mgmt_monthly",
				UnitAmount: int64(1000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "price_risk_mgmt_annually",
				Nickname:   "price_risk_mgmt_annually",
				UnitAmount: int64(10000),
			}}},
			Description: "Risk Management",
			DisplayName: "Risk Management",
			LookupKey:   "risk_management_module",
		},
	},
	Modules: map[string]catalog.Feature{
		string(models.ModuleBase): catalog.Feature{
			Audience: "public",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "year",
				LookupKey:  "base_module_free",
				Nickname:   "base_module_free",
				UnitAmount: int64(0),
			}}},
			Description:      "Core system access",
			DisplayName:      "Base Module",
			IncludeWithTrial: true,
			LookupKey:        "base_module",
			PersonalOrg:      true,
		},
		string(models.ModuleCompliance): catalog.Feature{
			Audience: "public",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_compliance_monthly",
				Nickname:   "price_compliance_monthly",
				UnitAmount: int64(45000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "price_compliance_annually",
				Nickname:   "price_compliance_annually",
				UnitAmount: int64(500000),
			}}},
			Description:      "Core compliance automation",
			DisplayName:      "Compliance Module",
			IncludeWithTrial: true,
			LookupKey:        "compliance_module",
			Usage:            &catalog.Usage{EvidenceStorageGB: int64(25000)},
		},
		string(models.ModuleEntityManagement): catalog.Feature{
			Audience: "private",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_entity_monthly",
				Nickname:   "price_entity_monthly",
				UnitAmount: int64(20000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "price_vendor_annually",
				Nickname:   "price_vendor_annually",
				UnitAmount: int64(200000),
			}}},
			Description: "Vendor Risk Management",
			DisplayName: "Vendor Management",
			LookupKey:   "entity_management_module",
		},
		string(models.ModuleTrustCenter): catalog.Feature{
			Audience: "beta",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_trust_center_monthly_v2",
				Nickname:   "price_trust_center_monthly_v2",
				UnitAmount: int64(30000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "price_trust_center_annually",
				Nickname:   "price_trust_center_annually",
				UnitAmount: int64(300000),
			}}},
			Description: "Public security portal",
			DisplayName: "Trust Center",
			LookupKey:   "trust_center_module",
		},
		string(models.ModuleVulnerabilityManagement): catalog.Feature{
			Audience: "private",
			Billing: catalog.Billing{Prices: []catalog.Price{catalog.Price{
				Interval:   "month",
				LookupKey:  "price_vulnerability_mgmt_monthly",
				Nickname:   "price_vulnerability_mgmt_monthly",
				UnitAmount: int64(10000),
			}, catalog.Price{
				Interval:   "year",
				LookupKey:  "price_vulnerability_mgmt_annually",
				Nickname:   "price_vulnerabilit_mgmt_annually",
				UnitAmount: int64(100000),
			}}},
			Description: "vulnerability scanning and management",
			DisplayName: "Vulnerability Scanning and Management",
			LookupKey:   "vulnerability_management_module",
		},
	},
	SHA:     "d21b9ae3ff2758902ec42e6cc09da842318cc6d71d4d84ba58338a3333eb6685",
	Version: "v0.0.3",
}
