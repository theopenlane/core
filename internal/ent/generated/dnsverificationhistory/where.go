// Code generated by ent, DO NOT EDIT.

package dnsverificationhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldOwnerID, v))
}

// CloudflareHostnameID applies equality check predicate on the "cloudflare_hostname_id" field. It's identical to CloudflareHostnameIDEQ.
func CloudflareHostnameID(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCloudflareHostnameID, v))
}

// DNSTxtRecord applies equality check predicate on the "dns_txt_record" field. It's identical to DNSTxtRecordEQ.
func DNSTxtRecord(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSTxtRecord, v))
}

// DNSTxtValue applies equality check predicate on the "dns_txt_value" field. It's identical to DNSTxtValueEQ.
func DNSTxtValue(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSTxtValue, v))
}

// DNSVerificationStatusReason applies equality check predicate on the "dns_verification_status_reason" field. It's identical to DNSVerificationStatusReasonEQ.
func DNSVerificationStatusReason(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSVerificationStatusReason, v))
}

// SslTxtRecord applies equality check predicate on the "ssl_txt_record" field. It's identical to SslTxtRecordEQ.
func SslTxtRecord(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslTxtRecord, v))
}

// SslTxtValue applies equality check predicate on the "ssl_txt_value" field. It's identical to SslTxtValueEQ.
func SslTxtValue(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslTxtValue, v))
}

// SslCertStatusReason applies equality check predicate on the "ssl_cert_status_reason" field. It's identical to SslCertStatusReasonEQ.
func SslCertStatusReason(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslCertStatusReason, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldTags))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDIsNil applies the IsNil predicate on the "owner_id" field.
func OwnerIDIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldOwnerID))
}

// OwnerIDNotNil applies the NotNil predicate on the "owner_id" field.
func OwnerIDNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldOwnerID))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldOwnerID, v))
}

// CloudflareHostnameIDEQ applies the EQ predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDNEQ applies the NEQ predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDIn applies the In predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldCloudflareHostnameID, vs...))
}

// CloudflareHostnameIDNotIn applies the NotIn predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldCloudflareHostnameID, vs...))
}

// CloudflareHostnameIDGT applies the GT predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDGTE applies the GTE predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDLT applies the LT predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDLTE applies the LTE predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDContains applies the Contains predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDHasPrefix applies the HasPrefix predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDHasSuffix applies the HasSuffix predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDEqualFold applies the EqualFold predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldCloudflareHostnameID, v))
}

// CloudflareHostnameIDContainsFold applies the ContainsFold predicate on the "cloudflare_hostname_id" field.
func CloudflareHostnameIDContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldCloudflareHostnameID, v))
}

// DNSTxtRecordEQ applies the EQ predicate on the "dns_txt_record" field.
func DNSTxtRecordEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSTxtRecord, v))
}

// DNSTxtRecordNEQ applies the NEQ predicate on the "dns_txt_record" field.
func DNSTxtRecordNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDNSTxtRecord, v))
}

// DNSTxtRecordIn applies the In predicate on the "dns_txt_record" field.
func DNSTxtRecordIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDNSTxtRecord, vs...))
}

// DNSTxtRecordNotIn applies the NotIn predicate on the "dns_txt_record" field.
func DNSTxtRecordNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDNSTxtRecord, vs...))
}

// DNSTxtRecordGT applies the GT predicate on the "dns_txt_record" field.
func DNSTxtRecordGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldDNSTxtRecord, v))
}

// DNSTxtRecordGTE applies the GTE predicate on the "dns_txt_record" field.
func DNSTxtRecordGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldDNSTxtRecord, v))
}

// DNSTxtRecordLT applies the LT predicate on the "dns_txt_record" field.
func DNSTxtRecordLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldDNSTxtRecord, v))
}

// DNSTxtRecordLTE applies the LTE predicate on the "dns_txt_record" field.
func DNSTxtRecordLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldDNSTxtRecord, v))
}

// DNSTxtRecordContains applies the Contains predicate on the "dns_txt_record" field.
func DNSTxtRecordContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldDNSTxtRecord, v))
}

// DNSTxtRecordHasPrefix applies the HasPrefix predicate on the "dns_txt_record" field.
func DNSTxtRecordHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldDNSTxtRecord, v))
}

// DNSTxtRecordHasSuffix applies the HasSuffix predicate on the "dns_txt_record" field.
func DNSTxtRecordHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldDNSTxtRecord, v))
}

// DNSTxtRecordEqualFold applies the EqualFold predicate on the "dns_txt_record" field.
func DNSTxtRecordEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldDNSTxtRecord, v))
}

// DNSTxtRecordContainsFold applies the ContainsFold predicate on the "dns_txt_record" field.
func DNSTxtRecordContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldDNSTxtRecord, v))
}

// DNSTxtValueEQ applies the EQ predicate on the "dns_txt_value" field.
func DNSTxtValueEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSTxtValue, v))
}

// DNSTxtValueNEQ applies the NEQ predicate on the "dns_txt_value" field.
func DNSTxtValueNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDNSTxtValue, v))
}

// DNSTxtValueIn applies the In predicate on the "dns_txt_value" field.
func DNSTxtValueIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDNSTxtValue, vs...))
}

// DNSTxtValueNotIn applies the NotIn predicate on the "dns_txt_value" field.
func DNSTxtValueNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDNSTxtValue, vs...))
}

// DNSTxtValueGT applies the GT predicate on the "dns_txt_value" field.
func DNSTxtValueGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldDNSTxtValue, v))
}

// DNSTxtValueGTE applies the GTE predicate on the "dns_txt_value" field.
func DNSTxtValueGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldDNSTxtValue, v))
}

// DNSTxtValueLT applies the LT predicate on the "dns_txt_value" field.
func DNSTxtValueLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldDNSTxtValue, v))
}

// DNSTxtValueLTE applies the LTE predicate on the "dns_txt_value" field.
func DNSTxtValueLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldDNSTxtValue, v))
}

// DNSTxtValueContains applies the Contains predicate on the "dns_txt_value" field.
func DNSTxtValueContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldDNSTxtValue, v))
}

// DNSTxtValueHasPrefix applies the HasPrefix predicate on the "dns_txt_value" field.
func DNSTxtValueHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldDNSTxtValue, v))
}

// DNSTxtValueHasSuffix applies the HasSuffix predicate on the "dns_txt_value" field.
func DNSTxtValueHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldDNSTxtValue, v))
}

// DNSTxtValueEqualFold applies the EqualFold predicate on the "dns_txt_value" field.
func DNSTxtValueEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldDNSTxtValue, v))
}

// DNSTxtValueContainsFold applies the ContainsFold predicate on the "dns_txt_value" field.
func DNSTxtValueContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldDNSTxtValue, v))
}

// DNSVerificationStatusEQ applies the EQ predicate on the "dns_verification_status" field.
func DNSVerificationStatusEQ(v enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	vc := v
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSVerificationStatus, vc))
}

// DNSVerificationStatusNEQ applies the NEQ predicate on the "dns_verification_status" field.
func DNSVerificationStatusNEQ(v enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	vc := v
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDNSVerificationStatus, vc))
}

// DNSVerificationStatusIn applies the In predicate on the "dns_verification_status" field.
func DNSVerificationStatusIn(vs ...enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDNSVerificationStatus, v...))
}

// DNSVerificationStatusNotIn applies the NotIn predicate on the "dns_verification_status" field.
func DNSVerificationStatusNotIn(vs ...enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDNSVerificationStatus, v...))
}

// DNSVerificationStatusReasonEQ applies the EQ predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonNEQ applies the NEQ predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonIn applies the In predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldDNSVerificationStatusReason, vs...))
}

// DNSVerificationStatusReasonNotIn applies the NotIn predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldDNSVerificationStatusReason, vs...))
}

// DNSVerificationStatusReasonGT applies the GT predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonGTE applies the GTE predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonLT applies the LT predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonLTE applies the LTE predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonContains applies the Contains predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonHasPrefix applies the HasPrefix predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonHasSuffix applies the HasSuffix predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonIsNil applies the IsNil predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldDNSVerificationStatusReason))
}

// DNSVerificationStatusReasonNotNil applies the NotNil predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldDNSVerificationStatusReason))
}

// DNSVerificationStatusReasonEqualFold applies the EqualFold predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldDNSVerificationStatusReason, v))
}

// DNSVerificationStatusReasonContainsFold applies the ContainsFold predicate on the "dns_verification_status_reason" field.
func DNSVerificationStatusReasonContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldDNSVerificationStatusReason, v))
}

// SslTxtRecordEQ applies the EQ predicate on the "ssl_txt_record" field.
func SslTxtRecordEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslTxtRecord, v))
}

// SslTxtRecordNEQ applies the NEQ predicate on the "ssl_txt_record" field.
func SslTxtRecordNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldSslTxtRecord, v))
}

// SslTxtRecordIn applies the In predicate on the "ssl_txt_record" field.
func SslTxtRecordIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldSslTxtRecord, vs...))
}

// SslTxtRecordNotIn applies the NotIn predicate on the "ssl_txt_record" field.
func SslTxtRecordNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldSslTxtRecord, vs...))
}

// SslTxtRecordGT applies the GT predicate on the "ssl_txt_record" field.
func SslTxtRecordGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldSslTxtRecord, v))
}

// SslTxtRecordGTE applies the GTE predicate on the "ssl_txt_record" field.
func SslTxtRecordGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldSslTxtRecord, v))
}

// SslTxtRecordLT applies the LT predicate on the "ssl_txt_record" field.
func SslTxtRecordLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldSslTxtRecord, v))
}

// SslTxtRecordLTE applies the LTE predicate on the "ssl_txt_record" field.
func SslTxtRecordLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldSslTxtRecord, v))
}

// SslTxtRecordContains applies the Contains predicate on the "ssl_txt_record" field.
func SslTxtRecordContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldSslTxtRecord, v))
}

// SslTxtRecordHasPrefix applies the HasPrefix predicate on the "ssl_txt_record" field.
func SslTxtRecordHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldSslTxtRecord, v))
}

// SslTxtRecordHasSuffix applies the HasSuffix predicate on the "ssl_txt_record" field.
func SslTxtRecordHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldSslTxtRecord, v))
}

// SslTxtRecordEqualFold applies the EqualFold predicate on the "ssl_txt_record" field.
func SslTxtRecordEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldSslTxtRecord, v))
}

// SslTxtRecordContainsFold applies the ContainsFold predicate on the "ssl_txt_record" field.
func SslTxtRecordContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldSslTxtRecord, v))
}

// SslTxtValueEQ applies the EQ predicate on the "ssl_txt_value" field.
func SslTxtValueEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslTxtValue, v))
}

// SslTxtValueNEQ applies the NEQ predicate on the "ssl_txt_value" field.
func SslTxtValueNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldSslTxtValue, v))
}

// SslTxtValueIn applies the In predicate on the "ssl_txt_value" field.
func SslTxtValueIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldSslTxtValue, vs...))
}

// SslTxtValueNotIn applies the NotIn predicate on the "ssl_txt_value" field.
func SslTxtValueNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldSslTxtValue, vs...))
}

// SslTxtValueGT applies the GT predicate on the "ssl_txt_value" field.
func SslTxtValueGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldSslTxtValue, v))
}

// SslTxtValueGTE applies the GTE predicate on the "ssl_txt_value" field.
func SslTxtValueGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldSslTxtValue, v))
}

// SslTxtValueLT applies the LT predicate on the "ssl_txt_value" field.
func SslTxtValueLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldSslTxtValue, v))
}

// SslTxtValueLTE applies the LTE predicate on the "ssl_txt_value" field.
func SslTxtValueLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldSslTxtValue, v))
}

// SslTxtValueContains applies the Contains predicate on the "ssl_txt_value" field.
func SslTxtValueContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldSslTxtValue, v))
}

// SslTxtValueHasPrefix applies the HasPrefix predicate on the "ssl_txt_value" field.
func SslTxtValueHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldSslTxtValue, v))
}

// SslTxtValueHasSuffix applies the HasSuffix predicate on the "ssl_txt_value" field.
func SslTxtValueHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldSslTxtValue, v))
}

// SslTxtValueEqualFold applies the EqualFold predicate on the "ssl_txt_value" field.
func SslTxtValueEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldSslTxtValue, v))
}

// SslTxtValueContainsFold applies the ContainsFold predicate on the "ssl_txt_value" field.
func SslTxtValueContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldSslTxtValue, v))
}

// SslCertStatusEQ applies the EQ predicate on the "ssl_cert_status" field.
func SslCertStatusEQ(v enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	vc := v
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslCertStatus, vc))
}

// SslCertStatusNEQ applies the NEQ predicate on the "ssl_cert_status" field.
func SslCertStatusNEQ(v enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	vc := v
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldSslCertStatus, vc))
}

// SslCertStatusIn applies the In predicate on the "ssl_cert_status" field.
func SslCertStatusIn(vs ...enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldSslCertStatus, v...))
}

// SslCertStatusNotIn applies the NotIn predicate on the "ssl_cert_status" field.
func SslCertStatusNotIn(vs ...enums.CustomDomainStatus) predicate.DNSVerificationHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldSslCertStatus, v...))
}

// SslCertStatusReasonEQ applies the EQ predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEQ(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonNEQ applies the NEQ predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonNEQ(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNEQ(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonIn applies the In predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIn(FieldSslCertStatusReason, vs...))
}

// SslCertStatusReasonNotIn applies the NotIn predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonNotIn(vs ...string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotIn(FieldSslCertStatusReason, vs...))
}

// SslCertStatusReasonGT applies the GT predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonGT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGT(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonGTE applies the GTE predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonGTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldGTE(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonLT applies the LT predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonLT(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLT(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonLTE applies the LTE predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonLTE(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldLTE(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonContains applies the Contains predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonContains(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContains(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonHasPrefix applies the HasPrefix predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonHasPrefix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasPrefix(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonHasSuffix applies the HasSuffix predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonHasSuffix(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldHasSuffix(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonIsNil applies the IsNil predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonIsNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldIsNull(FieldSslCertStatusReason))
}

// SslCertStatusReasonNotNil applies the NotNil predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonNotNil() predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldNotNull(FieldSslCertStatusReason))
}

// SslCertStatusReasonEqualFold applies the EqualFold predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonEqualFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldEqualFold(FieldSslCertStatusReason, v))
}

// SslCertStatusReasonContainsFold applies the ContainsFold predicate on the "ssl_cert_status_reason" field.
func SslCertStatusReasonContainsFold(v string) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.FieldContainsFold(FieldSslCertStatusReason, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DNSVerificationHistory) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DNSVerificationHistory) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DNSVerificationHistory) predicate.DNSVerificationHistory {
	return predicate.DNSVerificationHistory(sql.NotPredicates(p))
}
