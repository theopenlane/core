// Code generated by ent, DO NOT EDIT.

package hushhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldRef, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedByID applies equality check predicate on the "created_by_id" field. It's identical to CreatedByIDEQ.
func CreatedByID(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldCreatedByID, v))
}

// UpdatedByID applies equality check predicate on the "updated_by_id" field. It's identical to UpdatedByIDEQ.
func UpdatedByID(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedByID, v))
}

// MappingID applies equality check predicate on the "mapping_id" field. It's identical to MappingIDEQ.
func MappingID(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldMappingID, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedByID applies equality check predicate on the "deleted_by_id" field. It's identical to DeletedByIDEQ.
func DeletedByID(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDeletedByID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDescription, v))
}

// Kind applies equality check predicate on the "kind" field. It's identical to KindEQ.
func Kind(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldKind, v))
}

// SecretName applies equality check predicate on the "secret_name" field. It's identical to SecretNameEQ.
func SecretName(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldSecretName, v))
}

// SecretValue applies equality check predicate on the "secret_value" field. It's identical to SecretValueEQ.
func SecretValue(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldSecretValue, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByIDEQ applies the EQ predicate on the "created_by_id" field.
func CreatedByIDEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldCreatedByID, v))
}

// CreatedByIDNEQ applies the NEQ predicate on the "created_by_id" field.
func CreatedByIDNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldCreatedByID, v))
}

// CreatedByIDIn applies the In predicate on the "created_by_id" field.
func CreatedByIDIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldCreatedByID, vs...))
}

// CreatedByIDNotIn applies the NotIn predicate on the "created_by_id" field.
func CreatedByIDNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldCreatedByID, vs...))
}

// CreatedByIDGT applies the GT predicate on the "created_by_id" field.
func CreatedByIDGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldCreatedByID, v))
}

// CreatedByIDGTE applies the GTE predicate on the "created_by_id" field.
func CreatedByIDGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldCreatedByID, v))
}

// CreatedByIDLT applies the LT predicate on the "created_by_id" field.
func CreatedByIDLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldCreatedByID, v))
}

// CreatedByIDLTE applies the LTE predicate on the "created_by_id" field.
func CreatedByIDLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldCreatedByID, v))
}

// CreatedByIDContains applies the Contains predicate on the "created_by_id" field.
func CreatedByIDContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldCreatedByID, v))
}

// CreatedByIDHasPrefix applies the HasPrefix predicate on the "created_by_id" field.
func CreatedByIDHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldCreatedByID, v))
}

// CreatedByIDHasSuffix applies the HasSuffix predicate on the "created_by_id" field.
func CreatedByIDHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldCreatedByID, v))
}

// CreatedByIDIsNil applies the IsNil predicate on the "created_by_id" field.
func CreatedByIDIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldCreatedByID))
}

// CreatedByIDNotNil applies the NotNil predicate on the "created_by_id" field.
func CreatedByIDNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldCreatedByID))
}

// CreatedByIDEqualFold applies the EqualFold predicate on the "created_by_id" field.
func CreatedByIDEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldCreatedByID, v))
}

// CreatedByIDContainsFold applies the ContainsFold predicate on the "created_by_id" field.
func CreatedByIDContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldCreatedByID, v))
}

// UpdatedByIDEQ applies the EQ predicate on the "updated_by_id" field.
func UpdatedByIDEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldUpdatedByID, v))
}

// UpdatedByIDNEQ applies the NEQ predicate on the "updated_by_id" field.
func UpdatedByIDNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldUpdatedByID, v))
}

// UpdatedByIDIn applies the In predicate on the "updated_by_id" field.
func UpdatedByIDIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDNotIn applies the NotIn predicate on the "updated_by_id" field.
func UpdatedByIDNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDGT applies the GT predicate on the "updated_by_id" field.
func UpdatedByIDGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldUpdatedByID, v))
}

// UpdatedByIDGTE applies the GTE predicate on the "updated_by_id" field.
func UpdatedByIDGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldUpdatedByID, v))
}

// UpdatedByIDLT applies the LT predicate on the "updated_by_id" field.
func UpdatedByIDLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldUpdatedByID, v))
}

// UpdatedByIDLTE applies the LTE predicate on the "updated_by_id" field.
func UpdatedByIDLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldUpdatedByID, v))
}

// UpdatedByIDContains applies the Contains predicate on the "updated_by_id" field.
func UpdatedByIDContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldUpdatedByID, v))
}

// UpdatedByIDHasPrefix applies the HasPrefix predicate on the "updated_by_id" field.
func UpdatedByIDHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldUpdatedByID, v))
}

// UpdatedByIDHasSuffix applies the HasSuffix predicate on the "updated_by_id" field.
func UpdatedByIDHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldUpdatedByID, v))
}

// UpdatedByIDIsNil applies the IsNil predicate on the "updated_by_id" field.
func UpdatedByIDIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldUpdatedByID))
}

// UpdatedByIDNotNil applies the NotNil predicate on the "updated_by_id" field.
func UpdatedByIDNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldUpdatedByID))
}

// UpdatedByIDEqualFold applies the EqualFold predicate on the "updated_by_id" field.
func UpdatedByIDEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldUpdatedByID, v))
}

// UpdatedByIDContainsFold applies the ContainsFold predicate on the "updated_by_id" field.
func UpdatedByIDContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldUpdatedByID, v))
}

// MappingIDEQ applies the EQ predicate on the "mapping_id" field.
func MappingIDEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldMappingID, v))
}

// MappingIDNEQ applies the NEQ predicate on the "mapping_id" field.
func MappingIDNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldMappingID, v))
}

// MappingIDIn applies the In predicate on the "mapping_id" field.
func MappingIDIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldMappingID, vs...))
}

// MappingIDNotIn applies the NotIn predicate on the "mapping_id" field.
func MappingIDNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldMappingID, vs...))
}

// MappingIDGT applies the GT predicate on the "mapping_id" field.
func MappingIDGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldMappingID, v))
}

// MappingIDGTE applies the GTE predicate on the "mapping_id" field.
func MappingIDGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldMappingID, v))
}

// MappingIDLT applies the LT predicate on the "mapping_id" field.
func MappingIDLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldMappingID, v))
}

// MappingIDLTE applies the LTE predicate on the "mapping_id" field.
func MappingIDLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldMappingID, v))
}

// MappingIDContains applies the Contains predicate on the "mapping_id" field.
func MappingIDContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldMappingID, v))
}

// MappingIDHasPrefix applies the HasPrefix predicate on the "mapping_id" field.
func MappingIDHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldMappingID, v))
}

// MappingIDHasSuffix applies the HasSuffix predicate on the "mapping_id" field.
func MappingIDHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldMappingID, v))
}

// MappingIDEqualFold applies the EqualFold predicate on the "mapping_id" field.
func MappingIDEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldMappingID, v))
}

// MappingIDContainsFold applies the ContainsFold predicate on the "mapping_id" field.
func MappingIDContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldMappingID, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByIDEQ applies the EQ predicate on the "deleted_by_id" field.
func DeletedByIDEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDeletedByID, v))
}

// DeletedByIDNEQ applies the NEQ predicate on the "deleted_by_id" field.
func DeletedByIDNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldDeletedByID, v))
}

// DeletedByIDIn applies the In predicate on the "deleted_by_id" field.
func DeletedByIDIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldDeletedByID, vs...))
}

// DeletedByIDNotIn applies the NotIn predicate on the "deleted_by_id" field.
func DeletedByIDNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldDeletedByID, vs...))
}

// DeletedByIDGT applies the GT predicate on the "deleted_by_id" field.
func DeletedByIDGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldDeletedByID, v))
}

// DeletedByIDGTE applies the GTE predicate on the "deleted_by_id" field.
func DeletedByIDGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldDeletedByID, v))
}

// DeletedByIDLT applies the LT predicate on the "deleted_by_id" field.
func DeletedByIDLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldDeletedByID, v))
}

// DeletedByIDLTE applies the LTE predicate on the "deleted_by_id" field.
func DeletedByIDLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldDeletedByID, v))
}

// DeletedByIDContains applies the Contains predicate on the "deleted_by_id" field.
func DeletedByIDContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldDeletedByID, v))
}

// DeletedByIDHasPrefix applies the HasPrefix predicate on the "deleted_by_id" field.
func DeletedByIDHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldDeletedByID, v))
}

// DeletedByIDHasSuffix applies the HasSuffix predicate on the "deleted_by_id" field.
func DeletedByIDHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldDeletedByID, v))
}

// DeletedByIDIsNil applies the IsNil predicate on the "deleted_by_id" field.
func DeletedByIDIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldDeletedByID))
}

// DeletedByIDNotNil applies the NotNil predicate on the "deleted_by_id" field.
func DeletedByIDNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldDeletedByID))
}

// DeletedByIDEqualFold applies the EqualFold predicate on the "deleted_by_id" field.
func DeletedByIDEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldDeletedByID, v))
}

// DeletedByIDContainsFold applies the ContainsFold predicate on the "deleted_by_id" field.
func DeletedByIDContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldDeletedByID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldDescription, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldKind, vs...))
}

// KindGT applies the GT predicate on the "kind" field.
func KindGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldKind, v))
}

// KindGTE applies the GTE predicate on the "kind" field.
func KindGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldKind, v))
}

// KindLT applies the LT predicate on the "kind" field.
func KindLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldKind, v))
}

// KindLTE applies the LTE predicate on the "kind" field.
func KindLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldKind, v))
}

// KindContains applies the Contains predicate on the "kind" field.
func KindContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldKind, v))
}

// KindHasPrefix applies the HasPrefix predicate on the "kind" field.
func KindHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldKind, v))
}

// KindHasSuffix applies the HasSuffix predicate on the "kind" field.
func KindHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldKind, v))
}

// KindIsNil applies the IsNil predicate on the "kind" field.
func KindIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldKind))
}

// KindNotNil applies the NotNil predicate on the "kind" field.
func KindNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldKind))
}

// KindEqualFold applies the EqualFold predicate on the "kind" field.
func KindEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldKind, v))
}

// KindContainsFold applies the ContainsFold predicate on the "kind" field.
func KindContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldKind, v))
}

// SecretNameEQ applies the EQ predicate on the "secret_name" field.
func SecretNameEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldSecretName, v))
}

// SecretNameNEQ applies the NEQ predicate on the "secret_name" field.
func SecretNameNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldSecretName, v))
}

// SecretNameIn applies the In predicate on the "secret_name" field.
func SecretNameIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldSecretName, vs...))
}

// SecretNameNotIn applies the NotIn predicate on the "secret_name" field.
func SecretNameNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldSecretName, vs...))
}

// SecretNameGT applies the GT predicate on the "secret_name" field.
func SecretNameGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldSecretName, v))
}

// SecretNameGTE applies the GTE predicate on the "secret_name" field.
func SecretNameGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldSecretName, v))
}

// SecretNameLT applies the LT predicate on the "secret_name" field.
func SecretNameLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldSecretName, v))
}

// SecretNameLTE applies the LTE predicate on the "secret_name" field.
func SecretNameLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldSecretName, v))
}

// SecretNameContains applies the Contains predicate on the "secret_name" field.
func SecretNameContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldSecretName, v))
}

// SecretNameHasPrefix applies the HasPrefix predicate on the "secret_name" field.
func SecretNameHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldSecretName, v))
}

// SecretNameHasSuffix applies the HasSuffix predicate on the "secret_name" field.
func SecretNameHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldSecretName, v))
}

// SecretNameIsNil applies the IsNil predicate on the "secret_name" field.
func SecretNameIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldSecretName))
}

// SecretNameNotNil applies the NotNil predicate on the "secret_name" field.
func SecretNameNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldSecretName))
}

// SecretNameEqualFold applies the EqualFold predicate on the "secret_name" field.
func SecretNameEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldSecretName, v))
}

// SecretNameContainsFold applies the ContainsFold predicate on the "secret_name" field.
func SecretNameContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldSecretName, v))
}

// SecretValueEQ applies the EQ predicate on the "secret_value" field.
func SecretValueEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEQ(FieldSecretValue, v))
}

// SecretValueNEQ applies the NEQ predicate on the "secret_value" field.
func SecretValueNEQ(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNEQ(FieldSecretValue, v))
}

// SecretValueIn applies the In predicate on the "secret_value" field.
func SecretValueIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIn(FieldSecretValue, vs...))
}

// SecretValueNotIn applies the NotIn predicate on the "secret_value" field.
func SecretValueNotIn(vs ...string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotIn(FieldSecretValue, vs...))
}

// SecretValueGT applies the GT predicate on the "secret_value" field.
func SecretValueGT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGT(FieldSecretValue, v))
}

// SecretValueGTE applies the GTE predicate on the "secret_value" field.
func SecretValueGTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldGTE(FieldSecretValue, v))
}

// SecretValueLT applies the LT predicate on the "secret_value" field.
func SecretValueLT(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLT(FieldSecretValue, v))
}

// SecretValueLTE applies the LTE predicate on the "secret_value" field.
func SecretValueLTE(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldLTE(FieldSecretValue, v))
}

// SecretValueContains applies the Contains predicate on the "secret_value" field.
func SecretValueContains(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContains(FieldSecretValue, v))
}

// SecretValueHasPrefix applies the HasPrefix predicate on the "secret_value" field.
func SecretValueHasPrefix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasPrefix(FieldSecretValue, v))
}

// SecretValueHasSuffix applies the HasSuffix predicate on the "secret_value" field.
func SecretValueHasSuffix(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldHasSuffix(FieldSecretValue, v))
}

// SecretValueIsNil applies the IsNil predicate on the "secret_value" field.
func SecretValueIsNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldIsNull(FieldSecretValue))
}

// SecretValueNotNil applies the NotNil predicate on the "secret_value" field.
func SecretValueNotNil() predicate.HushHistory {
	return predicate.HushHistory(sql.FieldNotNull(FieldSecretValue))
}

// SecretValueEqualFold applies the EqualFold predicate on the "secret_value" field.
func SecretValueEqualFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldEqualFold(FieldSecretValue, v))
}

// SecretValueContainsFold applies the ContainsFold predicate on the "secret_value" field.
func SecretValueContainsFold(v string) predicate.HushHistory {
	return predicate.HushHistory(sql.FieldContainsFold(FieldSecretValue, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HushHistory) predicate.HushHistory {
	return predicate.HushHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HushHistory) predicate.HushHistory {
	return predicate.HushHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HushHistory) predicate.HushHistory {
	return predicate.HushHistory(sql.NotPredicates(p))
}
