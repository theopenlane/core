// Code generated by ent, DO NOT EDIT.

package documentrevisionhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// Revision applies equality check predicate on the "revision" field. It's identical to RevisionEQ.
func Revision(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldRevision, v))
}

// Details applies equality check predicate on the "details" field. It's identical to DetailsEQ.
func Details(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDetails, v))
}

// ApprovalDate applies equality check predicate on the "approval_date" field. It's identical to ApprovalDateEQ.
func ApprovalDate(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldApprovalDate, v))
}

// SubmittedByID applies equality check predicate on the "submitted_by_id" field. It's identical to SubmittedByIDEQ.
func SubmittedByID(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldSubmittedByID, v))
}

// ApprovedByID applies equality check predicate on the "approved_by_id" field. It's identical to ApprovedByIDEQ.
func ApprovedByID(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldApprovedByID, v))
}

// InternalPolicyID applies equality check predicate on the "internal_policy_id" field. It's identical to InternalPolicyIDEQ.
func InternalPolicyID(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldInternalPolicyID, v))
}

// ProcedureID applies equality check predicate on the "procedure_id" field. It's identical to ProcedureIDEQ.
func ProcedureID(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldProcedureID, v))
}

// ActionPlanID applies equality check predicate on the "action_plan_id" field. It's identical to ActionPlanIDEQ.
func ActionPlanID(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldActionPlanID, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldTags))
}

// RevisionEQ applies the EQ predicate on the "revision" field.
func RevisionEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldRevision, v))
}

// RevisionNEQ applies the NEQ predicate on the "revision" field.
func RevisionNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldRevision, v))
}

// RevisionIn applies the In predicate on the "revision" field.
func RevisionIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldRevision, vs...))
}

// RevisionNotIn applies the NotIn predicate on the "revision" field.
func RevisionNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldRevision, vs...))
}

// RevisionGT applies the GT predicate on the "revision" field.
func RevisionGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldRevision, v))
}

// RevisionGTE applies the GTE predicate on the "revision" field.
func RevisionGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldRevision, v))
}

// RevisionLT applies the LT predicate on the "revision" field.
func RevisionLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldRevision, v))
}

// RevisionLTE applies the LTE predicate on the "revision" field.
func RevisionLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldRevision, v))
}

// RevisionContains applies the Contains predicate on the "revision" field.
func RevisionContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldRevision, v))
}

// RevisionHasPrefix applies the HasPrefix predicate on the "revision" field.
func RevisionHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldRevision, v))
}

// RevisionHasSuffix applies the HasSuffix predicate on the "revision" field.
func RevisionHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldRevision, v))
}

// RevisionIsNil applies the IsNil predicate on the "revision" field.
func RevisionIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldRevision))
}

// RevisionNotNil applies the NotNil predicate on the "revision" field.
func RevisionNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldRevision))
}

// RevisionEqualFold applies the EqualFold predicate on the "revision" field.
func RevisionEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldRevision, v))
}

// RevisionContainsFold applies the ContainsFold predicate on the "revision" field.
func RevisionContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldRevision, v))
}

// DetailsEQ applies the EQ predicate on the "details" field.
func DetailsEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldDetails, v))
}

// DetailsNEQ applies the NEQ predicate on the "details" field.
func DetailsNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldDetails, v))
}

// DetailsIn applies the In predicate on the "details" field.
func DetailsIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldDetails, vs...))
}

// DetailsNotIn applies the NotIn predicate on the "details" field.
func DetailsNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldDetails, vs...))
}

// DetailsGT applies the GT predicate on the "details" field.
func DetailsGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldDetails, v))
}

// DetailsGTE applies the GTE predicate on the "details" field.
func DetailsGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldDetails, v))
}

// DetailsLT applies the LT predicate on the "details" field.
func DetailsLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldDetails, v))
}

// DetailsLTE applies the LTE predicate on the "details" field.
func DetailsLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldDetails, v))
}

// DetailsContains applies the Contains predicate on the "details" field.
func DetailsContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldDetails, v))
}

// DetailsHasPrefix applies the HasPrefix predicate on the "details" field.
func DetailsHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldDetails, v))
}

// DetailsHasSuffix applies the HasSuffix predicate on the "details" field.
func DetailsHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldDetails, v))
}

// DetailsIsNil applies the IsNil predicate on the "details" field.
func DetailsIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldDetails))
}

// DetailsNotNil applies the NotNil predicate on the "details" field.
func DetailsNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldDetails))
}

// DetailsEqualFold applies the EqualFold predicate on the "details" field.
func DetailsEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldDetails, v))
}

// DetailsContainsFold applies the ContainsFold predicate on the "details" field.
func DetailsContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldDetails, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v enums.ApprovalStatus) predicate.DocumentRevisionHistory {
	vc := v
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v enums.ApprovalStatus) predicate.DocumentRevisionHistory {
	vc := v
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...enums.ApprovalStatus) predicate.DocumentRevisionHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...enums.ApprovalStatus) predicate.DocumentRevisionHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldStatus, v...))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldStatus))
}

// ApprovalDateEQ applies the EQ predicate on the "approval_date" field.
func ApprovalDateEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldApprovalDate, v))
}

// ApprovalDateNEQ applies the NEQ predicate on the "approval_date" field.
func ApprovalDateNEQ(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldApprovalDate, v))
}

// ApprovalDateIn applies the In predicate on the "approval_date" field.
func ApprovalDateIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldApprovalDate, vs...))
}

// ApprovalDateNotIn applies the NotIn predicate on the "approval_date" field.
func ApprovalDateNotIn(vs ...time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldApprovalDate, vs...))
}

// ApprovalDateGT applies the GT predicate on the "approval_date" field.
func ApprovalDateGT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldApprovalDate, v))
}

// ApprovalDateGTE applies the GTE predicate on the "approval_date" field.
func ApprovalDateGTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldApprovalDate, v))
}

// ApprovalDateLT applies the LT predicate on the "approval_date" field.
func ApprovalDateLT(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldApprovalDate, v))
}

// ApprovalDateLTE applies the LTE predicate on the "approval_date" field.
func ApprovalDateLTE(v time.Time) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldApprovalDate, v))
}

// ApprovalDateIsNil applies the IsNil predicate on the "approval_date" field.
func ApprovalDateIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldApprovalDate))
}

// ApprovalDateNotNil applies the NotNil predicate on the "approval_date" field.
func ApprovalDateNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldApprovalDate))
}

// SubmittedByIDEQ applies the EQ predicate on the "submitted_by_id" field.
func SubmittedByIDEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldSubmittedByID, v))
}

// SubmittedByIDNEQ applies the NEQ predicate on the "submitted_by_id" field.
func SubmittedByIDNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldSubmittedByID, v))
}

// SubmittedByIDIn applies the In predicate on the "submitted_by_id" field.
func SubmittedByIDIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldSubmittedByID, vs...))
}

// SubmittedByIDNotIn applies the NotIn predicate on the "submitted_by_id" field.
func SubmittedByIDNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldSubmittedByID, vs...))
}

// SubmittedByIDGT applies the GT predicate on the "submitted_by_id" field.
func SubmittedByIDGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldSubmittedByID, v))
}

// SubmittedByIDGTE applies the GTE predicate on the "submitted_by_id" field.
func SubmittedByIDGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldSubmittedByID, v))
}

// SubmittedByIDLT applies the LT predicate on the "submitted_by_id" field.
func SubmittedByIDLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldSubmittedByID, v))
}

// SubmittedByIDLTE applies the LTE predicate on the "submitted_by_id" field.
func SubmittedByIDLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldSubmittedByID, v))
}

// SubmittedByIDContains applies the Contains predicate on the "submitted_by_id" field.
func SubmittedByIDContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldSubmittedByID, v))
}

// SubmittedByIDHasPrefix applies the HasPrefix predicate on the "submitted_by_id" field.
func SubmittedByIDHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldSubmittedByID, v))
}

// SubmittedByIDHasSuffix applies the HasSuffix predicate on the "submitted_by_id" field.
func SubmittedByIDHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldSubmittedByID, v))
}

// SubmittedByIDIsNil applies the IsNil predicate on the "submitted_by_id" field.
func SubmittedByIDIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldSubmittedByID))
}

// SubmittedByIDNotNil applies the NotNil predicate on the "submitted_by_id" field.
func SubmittedByIDNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldSubmittedByID))
}

// SubmittedByIDEqualFold applies the EqualFold predicate on the "submitted_by_id" field.
func SubmittedByIDEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldSubmittedByID, v))
}

// SubmittedByIDContainsFold applies the ContainsFold predicate on the "submitted_by_id" field.
func SubmittedByIDContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldSubmittedByID, v))
}

// ApprovedByIDEQ applies the EQ predicate on the "approved_by_id" field.
func ApprovedByIDEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldApprovedByID, v))
}

// ApprovedByIDNEQ applies the NEQ predicate on the "approved_by_id" field.
func ApprovedByIDNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldApprovedByID, v))
}

// ApprovedByIDIn applies the In predicate on the "approved_by_id" field.
func ApprovedByIDIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldApprovedByID, vs...))
}

// ApprovedByIDNotIn applies the NotIn predicate on the "approved_by_id" field.
func ApprovedByIDNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldApprovedByID, vs...))
}

// ApprovedByIDGT applies the GT predicate on the "approved_by_id" field.
func ApprovedByIDGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldApprovedByID, v))
}

// ApprovedByIDGTE applies the GTE predicate on the "approved_by_id" field.
func ApprovedByIDGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldApprovedByID, v))
}

// ApprovedByIDLT applies the LT predicate on the "approved_by_id" field.
func ApprovedByIDLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldApprovedByID, v))
}

// ApprovedByIDLTE applies the LTE predicate on the "approved_by_id" field.
func ApprovedByIDLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldApprovedByID, v))
}

// ApprovedByIDContains applies the Contains predicate on the "approved_by_id" field.
func ApprovedByIDContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldApprovedByID, v))
}

// ApprovedByIDHasPrefix applies the HasPrefix predicate on the "approved_by_id" field.
func ApprovedByIDHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldApprovedByID, v))
}

// ApprovedByIDHasSuffix applies the HasSuffix predicate on the "approved_by_id" field.
func ApprovedByIDHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldApprovedByID, v))
}

// ApprovedByIDIsNil applies the IsNil predicate on the "approved_by_id" field.
func ApprovedByIDIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldApprovedByID))
}

// ApprovedByIDNotNil applies the NotNil predicate on the "approved_by_id" field.
func ApprovedByIDNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldApprovedByID))
}

// ApprovedByIDEqualFold applies the EqualFold predicate on the "approved_by_id" field.
func ApprovedByIDEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldApprovedByID, v))
}

// ApprovedByIDContainsFold applies the ContainsFold predicate on the "approved_by_id" field.
func ApprovedByIDContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldApprovedByID, v))
}

// InternalPolicyIDEQ applies the EQ predicate on the "internal_policy_id" field.
func InternalPolicyIDEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldInternalPolicyID, v))
}

// InternalPolicyIDNEQ applies the NEQ predicate on the "internal_policy_id" field.
func InternalPolicyIDNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldInternalPolicyID, v))
}

// InternalPolicyIDIn applies the In predicate on the "internal_policy_id" field.
func InternalPolicyIDIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldInternalPolicyID, vs...))
}

// InternalPolicyIDNotIn applies the NotIn predicate on the "internal_policy_id" field.
func InternalPolicyIDNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldInternalPolicyID, vs...))
}

// InternalPolicyIDGT applies the GT predicate on the "internal_policy_id" field.
func InternalPolicyIDGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldInternalPolicyID, v))
}

// InternalPolicyIDGTE applies the GTE predicate on the "internal_policy_id" field.
func InternalPolicyIDGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldInternalPolicyID, v))
}

// InternalPolicyIDLT applies the LT predicate on the "internal_policy_id" field.
func InternalPolicyIDLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldInternalPolicyID, v))
}

// InternalPolicyIDLTE applies the LTE predicate on the "internal_policy_id" field.
func InternalPolicyIDLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldInternalPolicyID, v))
}

// InternalPolicyIDContains applies the Contains predicate on the "internal_policy_id" field.
func InternalPolicyIDContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldInternalPolicyID, v))
}

// InternalPolicyIDHasPrefix applies the HasPrefix predicate on the "internal_policy_id" field.
func InternalPolicyIDHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldInternalPolicyID, v))
}

// InternalPolicyIDHasSuffix applies the HasSuffix predicate on the "internal_policy_id" field.
func InternalPolicyIDHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldInternalPolicyID, v))
}

// InternalPolicyIDIsNil applies the IsNil predicate on the "internal_policy_id" field.
func InternalPolicyIDIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldInternalPolicyID))
}

// InternalPolicyIDNotNil applies the NotNil predicate on the "internal_policy_id" field.
func InternalPolicyIDNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldInternalPolicyID))
}

// InternalPolicyIDEqualFold applies the EqualFold predicate on the "internal_policy_id" field.
func InternalPolicyIDEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldInternalPolicyID, v))
}

// InternalPolicyIDContainsFold applies the ContainsFold predicate on the "internal_policy_id" field.
func InternalPolicyIDContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldInternalPolicyID, v))
}

// ProcedureIDEQ applies the EQ predicate on the "procedure_id" field.
func ProcedureIDEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldProcedureID, v))
}

// ProcedureIDNEQ applies the NEQ predicate on the "procedure_id" field.
func ProcedureIDNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldProcedureID, v))
}

// ProcedureIDIn applies the In predicate on the "procedure_id" field.
func ProcedureIDIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldProcedureID, vs...))
}

// ProcedureIDNotIn applies the NotIn predicate on the "procedure_id" field.
func ProcedureIDNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldProcedureID, vs...))
}

// ProcedureIDGT applies the GT predicate on the "procedure_id" field.
func ProcedureIDGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldProcedureID, v))
}

// ProcedureIDGTE applies the GTE predicate on the "procedure_id" field.
func ProcedureIDGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldProcedureID, v))
}

// ProcedureIDLT applies the LT predicate on the "procedure_id" field.
func ProcedureIDLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldProcedureID, v))
}

// ProcedureIDLTE applies the LTE predicate on the "procedure_id" field.
func ProcedureIDLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldProcedureID, v))
}

// ProcedureIDContains applies the Contains predicate on the "procedure_id" field.
func ProcedureIDContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldProcedureID, v))
}

// ProcedureIDHasPrefix applies the HasPrefix predicate on the "procedure_id" field.
func ProcedureIDHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldProcedureID, v))
}

// ProcedureIDHasSuffix applies the HasSuffix predicate on the "procedure_id" field.
func ProcedureIDHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldProcedureID, v))
}

// ProcedureIDIsNil applies the IsNil predicate on the "procedure_id" field.
func ProcedureIDIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldProcedureID))
}

// ProcedureIDNotNil applies the NotNil predicate on the "procedure_id" field.
func ProcedureIDNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldProcedureID))
}

// ProcedureIDEqualFold applies the EqualFold predicate on the "procedure_id" field.
func ProcedureIDEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldProcedureID, v))
}

// ProcedureIDContainsFold applies the ContainsFold predicate on the "procedure_id" field.
func ProcedureIDContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldProcedureID, v))
}

// ActionPlanIDEQ applies the EQ predicate on the "action_plan_id" field.
func ActionPlanIDEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEQ(FieldActionPlanID, v))
}

// ActionPlanIDNEQ applies the NEQ predicate on the "action_plan_id" field.
func ActionPlanIDNEQ(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNEQ(FieldActionPlanID, v))
}

// ActionPlanIDIn applies the In predicate on the "action_plan_id" field.
func ActionPlanIDIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIn(FieldActionPlanID, vs...))
}

// ActionPlanIDNotIn applies the NotIn predicate on the "action_plan_id" field.
func ActionPlanIDNotIn(vs ...string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotIn(FieldActionPlanID, vs...))
}

// ActionPlanIDGT applies the GT predicate on the "action_plan_id" field.
func ActionPlanIDGT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGT(FieldActionPlanID, v))
}

// ActionPlanIDGTE applies the GTE predicate on the "action_plan_id" field.
func ActionPlanIDGTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldGTE(FieldActionPlanID, v))
}

// ActionPlanIDLT applies the LT predicate on the "action_plan_id" field.
func ActionPlanIDLT(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLT(FieldActionPlanID, v))
}

// ActionPlanIDLTE applies the LTE predicate on the "action_plan_id" field.
func ActionPlanIDLTE(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldLTE(FieldActionPlanID, v))
}

// ActionPlanIDContains applies the Contains predicate on the "action_plan_id" field.
func ActionPlanIDContains(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContains(FieldActionPlanID, v))
}

// ActionPlanIDHasPrefix applies the HasPrefix predicate on the "action_plan_id" field.
func ActionPlanIDHasPrefix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasPrefix(FieldActionPlanID, v))
}

// ActionPlanIDHasSuffix applies the HasSuffix predicate on the "action_plan_id" field.
func ActionPlanIDHasSuffix(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldHasSuffix(FieldActionPlanID, v))
}

// ActionPlanIDIsNil applies the IsNil predicate on the "action_plan_id" field.
func ActionPlanIDIsNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldIsNull(FieldActionPlanID))
}

// ActionPlanIDNotNil applies the NotNil predicate on the "action_plan_id" field.
func ActionPlanIDNotNil() predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldNotNull(FieldActionPlanID))
}

// ActionPlanIDEqualFold applies the EqualFold predicate on the "action_plan_id" field.
func ActionPlanIDEqualFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldEqualFold(FieldActionPlanID, v))
}

// ActionPlanIDContainsFold applies the ContainsFold predicate on the "action_plan_id" field.
func ActionPlanIDContainsFold(v string) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.FieldContainsFold(FieldActionPlanID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DocumentRevisionHistory) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DocumentRevisionHistory) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DocumentRevisionHistory) predicate.DocumentRevisionHistory {
	return predicate.DocumentRevisionHistory(sql.NotPredicates(p))
}
