// Code generated by ent, DO NOT EDIT.

package actionplanhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// Revision applies equality check predicate on the "revision" field. It's identical to RevisionEQ.
func Revision(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldRevision, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldName, v))
}

// ActionPlanType applies equality check predicate on the "action_plan_type" field. It's identical to ActionPlanTypeEQ.
func ActionPlanType(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldActionPlanType, v))
}

// Details applies equality check predicate on the "details" field. It's identical to DetailsEQ.
func Details(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDetails, v))
}

// ApprovalRequired applies equality check predicate on the "approval_required" field. It's identical to ApprovalRequiredEQ.
func ApprovalRequired(v bool) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldApprovalRequired, v))
}

// ReviewDue applies equality check predicate on the "review_due" field. It's identical to ReviewDueEQ.
func ReviewDue(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldReviewDue, v))
}

// ApproverID applies equality check predicate on the "approver_id" field. It's identical to ApproverIDEQ.
func ApproverID(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldApproverID, v))
}

// DelegateID applies equality check predicate on the "delegate_id" field. It's identical to DelegateIDEQ.
func DelegateID(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDelegateID, v))
}

// Summary applies equality check predicate on the "summary" field. It's identical to SummaryEQ.
func Summary(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldSummary, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldOwnerID, v))
}

// DueDate applies equality check predicate on the "due_date" field. It's identical to DueDateEQ.
func DueDate(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDueDate, v))
}

// Source applies equality check predicate on the "source" field. It's identical to SourceEQ.
func Source(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldSource, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldTags))
}

// RevisionEQ applies the EQ predicate on the "revision" field.
func RevisionEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldRevision, v))
}

// RevisionNEQ applies the NEQ predicate on the "revision" field.
func RevisionNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldRevision, v))
}

// RevisionIn applies the In predicate on the "revision" field.
func RevisionIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldRevision, vs...))
}

// RevisionNotIn applies the NotIn predicate on the "revision" field.
func RevisionNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldRevision, vs...))
}

// RevisionGT applies the GT predicate on the "revision" field.
func RevisionGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldRevision, v))
}

// RevisionGTE applies the GTE predicate on the "revision" field.
func RevisionGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldRevision, v))
}

// RevisionLT applies the LT predicate on the "revision" field.
func RevisionLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldRevision, v))
}

// RevisionLTE applies the LTE predicate on the "revision" field.
func RevisionLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldRevision, v))
}

// RevisionContains applies the Contains predicate on the "revision" field.
func RevisionContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldRevision, v))
}

// RevisionHasPrefix applies the HasPrefix predicate on the "revision" field.
func RevisionHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldRevision, v))
}

// RevisionHasSuffix applies the HasSuffix predicate on the "revision" field.
func RevisionHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldRevision, v))
}

// RevisionIsNil applies the IsNil predicate on the "revision" field.
func RevisionIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldRevision))
}

// RevisionNotNil applies the NotNil predicate on the "revision" field.
func RevisionNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldRevision))
}

// RevisionEqualFold applies the EqualFold predicate on the "revision" field.
func RevisionEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldRevision, v))
}

// RevisionContainsFold applies the ContainsFold predicate on the "revision" field.
func RevisionContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldRevision, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldName, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v enums.DocumentStatus) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v enums.DocumentStatus) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...enums.DocumentStatus) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...enums.DocumentStatus) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldStatus, v...))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldStatus))
}

// ActionPlanTypeEQ applies the EQ predicate on the "action_plan_type" field.
func ActionPlanTypeEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldActionPlanType, v))
}

// ActionPlanTypeNEQ applies the NEQ predicate on the "action_plan_type" field.
func ActionPlanTypeNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldActionPlanType, v))
}

// ActionPlanTypeIn applies the In predicate on the "action_plan_type" field.
func ActionPlanTypeIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldActionPlanType, vs...))
}

// ActionPlanTypeNotIn applies the NotIn predicate on the "action_plan_type" field.
func ActionPlanTypeNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldActionPlanType, vs...))
}

// ActionPlanTypeGT applies the GT predicate on the "action_plan_type" field.
func ActionPlanTypeGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldActionPlanType, v))
}

// ActionPlanTypeGTE applies the GTE predicate on the "action_plan_type" field.
func ActionPlanTypeGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldActionPlanType, v))
}

// ActionPlanTypeLT applies the LT predicate on the "action_plan_type" field.
func ActionPlanTypeLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldActionPlanType, v))
}

// ActionPlanTypeLTE applies the LTE predicate on the "action_plan_type" field.
func ActionPlanTypeLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldActionPlanType, v))
}

// ActionPlanTypeContains applies the Contains predicate on the "action_plan_type" field.
func ActionPlanTypeContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldActionPlanType, v))
}

// ActionPlanTypeHasPrefix applies the HasPrefix predicate on the "action_plan_type" field.
func ActionPlanTypeHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldActionPlanType, v))
}

// ActionPlanTypeHasSuffix applies the HasSuffix predicate on the "action_plan_type" field.
func ActionPlanTypeHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldActionPlanType, v))
}

// ActionPlanTypeIsNil applies the IsNil predicate on the "action_plan_type" field.
func ActionPlanTypeIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldActionPlanType))
}

// ActionPlanTypeNotNil applies the NotNil predicate on the "action_plan_type" field.
func ActionPlanTypeNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldActionPlanType))
}

// ActionPlanTypeEqualFold applies the EqualFold predicate on the "action_plan_type" field.
func ActionPlanTypeEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldActionPlanType, v))
}

// ActionPlanTypeContainsFold applies the ContainsFold predicate on the "action_plan_type" field.
func ActionPlanTypeContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldActionPlanType, v))
}

// DetailsEQ applies the EQ predicate on the "details" field.
func DetailsEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDetails, v))
}

// DetailsNEQ applies the NEQ predicate on the "details" field.
func DetailsNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldDetails, v))
}

// DetailsIn applies the In predicate on the "details" field.
func DetailsIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldDetails, vs...))
}

// DetailsNotIn applies the NotIn predicate on the "details" field.
func DetailsNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldDetails, vs...))
}

// DetailsGT applies the GT predicate on the "details" field.
func DetailsGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldDetails, v))
}

// DetailsGTE applies the GTE predicate on the "details" field.
func DetailsGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldDetails, v))
}

// DetailsLT applies the LT predicate on the "details" field.
func DetailsLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldDetails, v))
}

// DetailsLTE applies the LTE predicate on the "details" field.
func DetailsLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldDetails, v))
}

// DetailsContains applies the Contains predicate on the "details" field.
func DetailsContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldDetails, v))
}

// DetailsHasPrefix applies the HasPrefix predicate on the "details" field.
func DetailsHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldDetails, v))
}

// DetailsHasSuffix applies the HasSuffix predicate on the "details" field.
func DetailsHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldDetails, v))
}

// DetailsIsNil applies the IsNil predicate on the "details" field.
func DetailsIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldDetails))
}

// DetailsNotNil applies the NotNil predicate on the "details" field.
func DetailsNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldDetails))
}

// DetailsEqualFold applies the EqualFold predicate on the "details" field.
func DetailsEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldDetails, v))
}

// DetailsContainsFold applies the ContainsFold predicate on the "details" field.
func DetailsContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldDetails, v))
}

// ApprovalRequiredEQ applies the EQ predicate on the "approval_required" field.
func ApprovalRequiredEQ(v bool) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldApprovalRequired, v))
}

// ApprovalRequiredNEQ applies the NEQ predicate on the "approval_required" field.
func ApprovalRequiredNEQ(v bool) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldApprovalRequired, v))
}

// ApprovalRequiredIsNil applies the IsNil predicate on the "approval_required" field.
func ApprovalRequiredIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldApprovalRequired))
}

// ApprovalRequiredNotNil applies the NotNil predicate on the "approval_required" field.
func ApprovalRequiredNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldApprovalRequired))
}

// ReviewDueEQ applies the EQ predicate on the "review_due" field.
func ReviewDueEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldReviewDue, v))
}

// ReviewDueNEQ applies the NEQ predicate on the "review_due" field.
func ReviewDueNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldReviewDue, v))
}

// ReviewDueIn applies the In predicate on the "review_due" field.
func ReviewDueIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldReviewDue, vs...))
}

// ReviewDueNotIn applies the NotIn predicate on the "review_due" field.
func ReviewDueNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldReviewDue, vs...))
}

// ReviewDueGT applies the GT predicate on the "review_due" field.
func ReviewDueGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldReviewDue, v))
}

// ReviewDueGTE applies the GTE predicate on the "review_due" field.
func ReviewDueGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldReviewDue, v))
}

// ReviewDueLT applies the LT predicate on the "review_due" field.
func ReviewDueLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldReviewDue, v))
}

// ReviewDueLTE applies the LTE predicate on the "review_due" field.
func ReviewDueLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldReviewDue, v))
}

// ReviewDueIsNil applies the IsNil predicate on the "review_due" field.
func ReviewDueIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldReviewDue))
}

// ReviewDueNotNil applies the NotNil predicate on the "review_due" field.
func ReviewDueNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldReviewDue))
}

// ReviewFrequencyEQ applies the EQ predicate on the "review_frequency" field.
func ReviewFrequencyEQ(v enums.Frequency) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldReviewFrequency, vc))
}

// ReviewFrequencyNEQ applies the NEQ predicate on the "review_frequency" field.
func ReviewFrequencyNEQ(v enums.Frequency) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldReviewFrequency, vc))
}

// ReviewFrequencyIn applies the In predicate on the "review_frequency" field.
func ReviewFrequencyIn(vs ...enums.Frequency) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldIn(FieldReviewFrequency, v...))
}

// ReviewFrequencyNotIn applies the NotIn predicate on the "review_frequency" field.
func ReviewFrequencyNotIn(vs ...enums.Frequency) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldReviewFrequency, v...))
}

// ReviewFrequencyIsNil applies the IsNil predicate on the "review_frequency" field.
func ReviewFrequencyIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldReviewFrequency))
}

// ReviewFrequencyNotNil applies the NotNil predicate on the "review_frequency" field.
func ReviewFrequencyNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldReviewFrequency))
}

// ApproverIDEQ applies the EQ predicate on the "approver_id" field.
func ApproverIDEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldApproverID, v))
}

// ApproverIDNEQ applies the NEQ predicate on the "approver_id" field.
func ApproverIDNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldApproverID, v))
}

// ApproverIDIn applies the In predicate on the "approver_id" field.
func ApproverIDIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldApproverID, vs...))
}

// ApproverIDNotIn applies the NotIn predicate on the "approver_id" field.
func ApproverIDNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldApproverID, vs...))
}

// ApproverIDGT applies the GT predicate on the "approver_id" field.
func ApproverIDGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldApproverID, v))
}

// ApproverIDGTE applies the GTE predicate on the "approver_id" field.
func ApproverIDGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldApproverID, v))
}

// ApproverIDLT applies the LT predicate on the "approver_id" field.
func ApproverIDLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldApproverID, v))
}

// ApproverIDLTE applies the LTE predicate on the "approver_id" field.
func ApproverIDLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldApproverID, v))
}

// ApproverIDContains applies the Contains predicate on the "approver_id" field.
func ApproverIDContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldApproverID, v))
}

// ApproverIDHasPrefix applies the HasPrefix predicate on the "approver_id" field.
func ApproverIDHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldApproverID, v))
}

// ApproverIDHasSuffix applies the HasSuffix predicate on the "approver_id" field.
func ApproverIDHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldApproverID, v))
}

// ApproverIDIsNil applies the IsNil predicate on the "approver_id" field.
func ApproverIDIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldApproverID))
}

// ApproverIDNotNil applies the NotNil predicate on the "approver_id" field.
func ApproverIDNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldApproverID))
}

// ApproverIDEqualFold applies the EqualFold predicate on the "approver_id" field.
func ApproverIDEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldApproverID, v))
}

// ApproverIDContainsFold applies the ContainsFold predicate on the "approver_id" field.
func ApproverIDContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldApproverID, v))
}

// DelegateIDEQ applies the EQ predicate on the "delegate_id" field.
func DelegateIDEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDelegateID, v))
}

// DelegateIDNEQ applies the NEQ predicate on the "delegate_id" field.
func DelegateIDNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldDelegateID, v))
}

// DelegateIDIn applies the In predicate on the "delegate_id" field.
func DelegateIDIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldDelegateID, vs...))
}

// DelegateIDNotIn applies the NotIn predicate on the "delegate_id" field.
func DelegateIDNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldDelegateID, vs...))
}

// DelegateIDGT applies the GT predicate on the "delegate_id" field.
func DelegateIDGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldDelegateID, v))
}

// DelegateIDGTE applies the GTE predicate on the "delegate_id" field.
func DelegateIDGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldDelegateID, v))
}

// DelegateIDLT applies the LT predicate on the "delegate_id" field.
func DelegateIDLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldDelegateID, v))
}

// DelegateIDLTE applies the LTE predicate on the "delegate_id" field.
func DelegateIDLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldDelegateID, v))
}

// DelegateIDContains applies the Contains predicate on the "delegate_id" field.
func DelegateIDContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldDelegateID, v))
}

// DelegateIDHasPrefix applies the HasPrefix predicate on the "delegate_id" field.
func DelegateIDHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldDelegateID, v))
}

// DelegateIDHasSuffix applies the HasSuffix predicate on the "delegate_id" field.
func DelegateIDHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldDelegateID, v))
}

// DelegateIDIsNil applies the IsNil predicate on the "delegate_id" field.
func DelegateIDIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldDelegateID))
}

// DelegateIDNotNil applies the NotNil predicate on the "delegate_id" field.
func DelegateIDNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldDelegateID))
}

// DelegateIDEqualFold applies the EqualFold predicate on the "delegate_id" field.
func DelegateIDEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldDelegateID, v))
}

// DelegateIDContainsFold applies the ContainsFold predicate on the "delegate_id" field.
func DelegateIDContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldDelegateID, v))
}

// SummaryEQ applies the EQ predicate on the "summary" field.
func SummaryEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldSummary, v))
}

// SummaryNEQ applies the NEQ predicate on the "summary" field.
func SummaryNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldSummary, v))
}

// SummaryIn applies the In predicate on the "summary" field.
func SummaryIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldSummary, vs...))
}

// SummaryNotIn applies the NotIn predicate on the "summary" field.
func SummaryNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldSummary, vs...))
}

// SummaryGT applies the GT predicate on the "summary" field.
func SummaryGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldSummary, v))
}

// SummaryGTE applies the GTE predicate on the "summary" field.
func SummaryGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldSummary, v))
}

// SummaryLT applies the LT predicate on the "summary" field.
func SummaryLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldSummary, v))
}

// SummaryLTE applies the LTE predicate on the "summary" field.
func SummaryLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldSummary, v))
}

// SummaryContains applies the Contains predicate on the "summary" field.
func SummaryContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldSummary, v))
}

// SummaryHasPrefix applies the HasPrefix predicate on the "summary" field.
func SummaryHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldSummary, v))
}

// SummaryHasSuffix applies the HasSuffix predicate on the "summary" field.
func SummaryHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldSummary, v))
}

// SummaryIsNil applies the IsNil predicate on the "summary" field.
func SummaryIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldSummary))
}

// SummaryNotNil applies the NotNil predicate on the "summary" field.
func SummaryNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldSummary))
}

// SummaryEqualFold applies the EqualFold predicate on the "summary" field.
func SummaryEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldSummary, v))
}

// SummaryContainsFold applies the ContainsFold predicate on the "summary" field.
func SummaryContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldSummary, v))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDIsNil applies the IsNil predicate on the "owner_id" field.
func OwnerIDIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldOwnerID))
}

// OwnerIDNotNil applies the NotNil predicate on the "owner_id" field.
func OwnerIDNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldOwnerID))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldOwnerID, v))
}

// DueDateEQ applies the EQ predicate on the "due_date" field.
func DueDateEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldDueDate, v))
}

// DueDateNEQ applies the NEQ predicate on the "due_date" field.
func DueDateNEQ(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldDueDate, v))
}

// DueDateIn applies the In predicate on the "due_date" field.
func DueDateIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldDueDate, vs...))
}

// DueDateNotIn applies the NotIn predicate on the "due_date" field.
func DueDateNotIn(vs ...time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldDueDate, vs...))
}

// DueDateGT applies the GT predicate on the "due_date" field.
func DueDateGT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldDueDate, v))
}

// DueDateGTE applies the GTE predicate on the "due_date" field.
func DueDateGTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldDueDate, v))
}

// DueDateLT applies the LT predicate on the "due_date" field.
func DueDateLT(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldDueDate, v))
}

// DueDateLTE applies the LTE predicate on the "due_date" field.
func DueDateLTE(v time.Time) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldDueDate, v))
}

// DueDateIsNil applies the IsNil predicate on the "due_date" field.
func DueDateIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldDueDate))
}

// DueDateNotNil applies the NotNil predicate on the "due_date" field.
func DueDateNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldDueDate))
}

// PriorityEQ applies the EQ predicate on the "priority" field.
func PriorityEQ(v enums.Priority) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldPriority, vc))
}

// PriorityNEQ applies the NEQ predicate on the "priority" field.
func PriorityNEQ(v enums.Priority) predicate.ActionPlanHistory {
	vc := v
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldPriority, vc))
}

// PriorityIn applies the In predicate on the "priority" field.
func PriorityIn(vs ...enums.Priority) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldIn(FieldPriority, v...))
}

// PriorityNotIn applies the NotIn predicate on the "priority" field.
func PriorityNotIn(vs ...enums.Priority) predicate.ActionPlanHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldPriority, v...))
}

// PriorityIsNil applies the IsNil predicate on the "priority" field.
func PriorityIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldPriority))
}

// PriorityNotNil applies the NotNil predicate on the "priority" field.
func PriorityNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldPriority))
}

// SourceEQ applies the EQ predicate on the "source" field.
func SourceEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEQ(FieldSource, v))
}

// SourceNEQ applies the NEQ predicate on the "source" field.
func SourceNEQ(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNEQ(FieldSource, v))
}

// SourceIn applies the In predicate on the "source" field.
func SourceIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIn(FieldSource, vs...))
}

// SourceNotIn applies the NotIn predicate on the "source" field.
func SourceNotIn(vs ...string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotIn(FieldSource, vs...))
}

// SourceGT applies the GT predicate on the "source" field.
func SourceGT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGT(FieldSource, v))
}

// SourceGTE applies the GTE predicate on the "source" field.
func SourceGTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldGTE(FieldSource, v))
}

// SourceLT applies the LT predicate on the "source" field.
func SourceLT(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLT(FieldSource, v))
}

// SourceLTE applies the LTE predicate on the "source" field.
func SourceLTE(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldLTE(FieldSource, v))
}

// SourceContains applies the Contains predicate on the "source" field.
func SourceContains(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContains(FieldSource, v))
}

// SourceHasPrefix applies the HasPrefix predicate on the "source" field.
func SourceHasPrefix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasPrefix(FieldSource, v))
}

// SourceHasSuffix applies the HasSuffix predicate on the "source" field.
func SourceHasSuffix(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldHasSuffix(FieldSource, v))
}

// SourceIsNil applies the IsNil predicate on the "source" field.
func SourceIsNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldIsNull(FieldSource))
}

// SourceNotNil applies the NotNil predicate on the "source" field.
func SourceNotNil() predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldNotNull(FieldSource))
}

// SourceEqualFold applies the EqualFold predicate on the "source" field.
func SourceEqualFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldEqualFold(FieldSource, v))
}

// SourceContainsFold applies the ContainsFold predicate on the "source" field.
func SourceContainsFold(v string) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.FieldContainsFold(FieldSource, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ActionPlanHistory) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ActionPlanHistory) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ActionPlanHistory) predicate.ActionPlanHistory {
	return predicate.ActionPlanHistory(sql.NotPredicates(p))
}
