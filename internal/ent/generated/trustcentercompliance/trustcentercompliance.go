// Code generated by ent, DO NOT EDIT.

package trustcentercompliance

import (
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the trustcentercompliance type in the database.
	Label = "trust_center_compliance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDeletedBy holds the string denoting the deleted_by field in the database.
	FieldDeletedBy = "deleted_by"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldStandardID holds the string denoting the standard_id field in the database.
	FieldStandardID = "standard_id"
	// FieldTrustCenterID holds the string denoting the trust_center_id field in the database.
	FieldTrustCenterID = "trust_center_id"
	// EdgeTrustCenter holds the string denoting the trust_center edge name in mutations.
	EdgeTrustCenter = "trust_center"
	// EdgeStandard holds the string denoting the standard edge name in mutations.
	EdgeStandard = "standard"
	// Table holds the table name of the trustcentercompliance in the database.
	Table = "trust_center_compliances"
	// TrustCenterTable is the table that holds the trust_center relation/edge.
	TrustCenterTable = "trust_center_compliances"
	// TrustCenterInverseTable is the table name for the TrustCenter entity.
	// It exists in this package in order to avoid circular dependency with the "trustcenter" package.
	TrustCenterInverseTable = "trust_centers"
	// TrustCenterColumn is the table column denoting the trust_center relation/edge.
	TrustCenterColumn = "trust_center_id"
	// StandardTable is the table that holds the standard relation/edge.
	StandardTable = "trust_center_compliances"
	// StandardInverseTable is the table name for the Standard entity.
	// It exists in this package in order to avoid circular dependency with the "standard" package.
	StandardInverseTable = "standards"
	// StandardColumn is the table column denoting the standard relation/edge.
	StandardColumn = "standard_id"
)

// Columns holds all SQL columns for trustcentercompliance fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldDeletedAt,
	FieldDeletedBy,
	FieldTags,
	FieldStandardID,
	FieldTrustCenterID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/theopenlane/core/internal/ent/generated/runtime"
var (
	Hooks        [5]ent.Hook
	Interceptors [3]ent.Interceptor
	Policy       ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultTags holds the default value on creation for the "tags" field.
	DefaultTags []string
	// StandardIDValidator is a validator for the "standard_id" field. It is called by the builders before save.
	StandardIDValidator func(string) error
	// TrustCenterIDValidator is a validator for the "trust_center_id" field. It is called by the builders before save.
	TrustCenterIDValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// OrderOption defines the ordering options for the TrustCenterCompliance queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByCreatedBy orders the results by the created_by field.
func ByCreatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedBy, opts...).ToFunc()
}

// ByUpdatedBy orders the results by the updated_by field.
func ByUpdatedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedBy, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByDeletedBy orders the results by the deleted_by field.
func ByDeletedBy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedBy, opts...).ToFunc()
}

// ByStandardID orders the results by the standard_id field.
func ByStandardID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStandardID, opts...).ToFunc()
}

// ByTrustCenterID orders the results by the trust_center_id field.
func ByTrustCenterID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTrustCenterID, opts...).ToFunc()
}

// ByTrustCenterField orders the results by trust_center field.
func ByTrustCenterField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newTrustCenterStep(), sql.OrderByField(field, opts...))
	}
}

// ByStandardField orders the results by standard field.
func ByStandardField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newStandardStep(), sql.OrderByField(field, opts...))
	}
}
func newTrustCenterStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(TrustCenterInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, TrustCenterTable, TrustCenterColumn),
	)
}
func newStandardStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(StandardInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, StandardTable, StandardColumn),
	)
}
