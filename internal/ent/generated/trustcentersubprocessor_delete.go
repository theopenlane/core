// Code generated by ent, DO NOT EDIT.

package generated

import (
	"context"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/theopenlane/core/internal/ent/generated/predicate"

	"github.com/theopenlane/core/internal/ent/generated/internal"
	"github.com/theopenlane/core/internal/ent/generated/trustcentersubprocessor"
)

// TrustCenterSubprocessorDelete is the builder for deleting a TrustCenterSubprocessor entity.
type TrustCenterSubprocessorDelete struct {
	config
	hooks    []Hook
	mutation *TrustCenterSubprocessorMutation
}

// Where appends a list predicates to the TrustCenterSubprocessorDelete builder.
func (tcsd *TrustCenterSubprocessorDelete) Where(ps ...predicate.TrustCenterSubprocessor) *TrustCenterSubprocessorDelete {
	tcsd.mutation.Where(ps...)
	return tcsd
}

// Exec executes the deletion query and returns how many vertices were deleted.
func (tcsd *TrustCenterSubprocessorDelete) Exec(ctx context.Context) (int, error) {
	return withHooks(ctx, tcsd.sqlExec, tcsd.mutation, tcsd.hooks)
}

// ExecX is like Exec, but panics if an error occurs.
func (tcsd *TrustCenterSubprocessorDelete) ExecX(ctx context.Context) int {
	n, err := tcsd.Exec(ctx)
	if err != nil {
		panic(err)
	}
	return n
}

func (tcsd *TrustCenterSubprocessorDelete) sqlExec(ctx context.Context) (int, error) {
	_spec := sqlgraph.NewDeleteSpec(trustcentersubprocessor.Table, sqlgraph.NewFieldSpec(trustcentersubprocessor.FieldID, field.TypeString))
	_spec.Node.Schema = tcsd.schemaConfig.TrustCenterSubprocessor
	ctx = internal.NewSchemaConfigContext(ctx, tcsd.schemaConfig)
	if ps := tcsd.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	affected, err := sqlgraph.DeleteNodes(ctx, tcsd.driver, _spec)
	if err != nil && sqlgraph.IsConstraintError(err) {
		err = &ConstraintError{msg: err.Error(), wrap: err}
	}
	tcsd.mutation.done = true
	return affected, err
}

// TrustCenterSubprocessorDeleteOne is the builder for deleting a single TrustCenterSubprocessor entity.
type TrustCenterSubprocessorDeleteOne struct {
	tcsd *TrustCenterSubprocessorDelete
}

// Where appends a list predicates to the TrustCenterSubprocessorDelete builder.
func (tcsdo *TrustCenterSubprocessorDeleteOne) Where(ps ...predicate.TrustCenterSubprocessor) *TrustCenterSubprocessorDeleteOne {
	tcsdo.tcsd.mutation.Where(ps...)
	return tcsdo
}

// Exec executes the deletion query.
func (tcsdo *TrustCenterSubprocessorDeleteOne) Exec(ctx context.Context) error {
	n, err := tcsdo.tcsd.Exec(ctx)
	switch {
	case err != nil:
		return err
	case n == 0:
		return &NotFoundError{trustcentersubprocessor.Label}
	default:
		return nil
	}
}

// ExecX is like Exec, but panics if an error occurs.
func (tcsdo *TrustCenterSubprocessorDeleteOne) ExecX(ctx context.Context) {
	if err := tcsdo.Exec(ctx); err != nil {
		panic(err)
	}
}
