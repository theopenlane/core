// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/theopenlane/core/internal/ent/generated/actionplan"
	"github.com/theopenlane/core/internal/ent/generated/actionplanhistory"
	"github.com/theopenlane/core/internal/ent/generated/apitoken"
	"github.com/theopenlane/core/internal/ent/generated/contact"
	"github.com/theopenlane/core/internal/ent/generated/contacthistory"
	"github.com/theopenlane/core/internal/ent/generated/control"
	"github.com/theopenlane/core/internal/ent/generated/controlhistory"
	"github.com/theopenlane/core/internal/ent/generated/controlobjective"
	"github.com/theopenlane/core/internal/ent/generated/controlobjectivehistory"
	"github.com/theopenlane/core/internal/ent/generated/documentdata"
	"github.com/theopenlane/core/internal/ent/generated/documentdatahistory"
	"github.com/theopenlane/core/internal/ent/generated/emailverificationtoken"
	"github.com/theopenlane/core/internal/ent/generated/entity"
	"github.com/theopenlane/core/internal/ent/generated/entityhistory"
	"github.com/theopenlane/core/internal/ent/generated/entitytype"
	"github.com/theopenlane/core/internal/ent/generated/entitytypehistory"
	"github.com/theopenlane/core/internal/ent/generated/event"
	"github.com/theopenlane/core/internal/ent/generated/eventhistory"
	"github.com/theopenlane/core/internal/ent/generated/evidence"
	"github.com/theopenlane/core/internal/ent/generated/evidencehistory"
	"github.com/theopenlane/core/internal/ent/generated/file"
	"github.com/theopenlane/core/internal/ent/generated/filehistory"
	"github.com/theopenlane/core/internal/ent/generated/group"
	"github.com/theopenlane/core/internal/ent/generated/grouphistory"
	"github.com/theopenlane/core/internal/ent/generated/groupmembership"
	"github.com/theopenlane/core/internal/ent/generated/groupmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/groupsetting"
	"github.com/theopenlane/core/internal/ent/generated/groupsettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/hush"
	"github.com/theopenlane/core/internal/ent/generated/hushhistory"
	"github.com/theopenlane/core/internal/ent/generated/integration"
	"github.com/theopenlane/core/internal/ent/generated/integrationhistory"
	"github.com/theopenlane/core/internal/ent/generated/internalpolicy"
	"github.com/theopenlane/core/internal/ent/generated/internalpolicyhistory"
	"github.com/theopenlane/core/internal/ent/generated/invite"
	"github.com/theopenlane/core/internal/ent/generated/narrative"
	"github.com/theopenlane/core/internal/ent/generated/narrativehistory"
	"github.com/theopenlane/core/internal/ent/generated/note"
	"github.com/theopenlane/core/internal/ent/generated/notehistory"
	"github.com/theopenlane/core/internal/ent/generated/organization"
	"github.com/theopenlane/core/internal/ent/generated/organizationhistory"
	"github.com/theopenlane/core/internal/ent/generated/organizationsetting"
	"github.com/theopenlane/core/internal/ent/generated/organizationsettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/orgmembership"
	"github.com/theopenlane/core/internal/ent/generated/orgmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/orgsubscription"
	"github.com/theopenlane/core/internal/ent/generated/orgsubscriptionhistory"
	"github.com/theopenlane/core/internal/ent/generated/passwordresettoken"
	"github.com/theopenlane/core/internal/ent/generated/personalaccesstoken"
	"github.com/theopenlane/core/internal/ent/generated/procedure"
	"github.com/theopenlane/core/internal/ent/generated/procedurehistory"
	"github.com/theopenlane/core/internal/ent/generated/program"
	"github.com/theopenlane/core/internal/ent/generated/programhistory"
	"github.com/theopenlane/core/internal/ent/generated/programmembership"
	"github.com/theopenlane/core/internal/ent/generated/programmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/risk"
	"github.com/theopenlane/core/internal/ent/generated/riskhistory"
	"github.com/theopenlane/core/internal/ent/generated/standard"
	"github.com/theopenlane/core/internal/ent/generated/standardhistory"
	"github.com/theopenlane/core/internal/ent/generated/subcontrol"
	"github.com/theopenlane/core/internal/ent/generated/subcontrolhistory"
	"github.com/theopenlane/core/internal/ent/generated/subscriber"
	"github.com/theopenlane/core/internal/ent/generated/task"
	"github.com/theopenlane/core/internal/ent/generated/taskhistory"
	"github.com/theopenlane/core/internal/ent/generated/template"
	"github.com/theopenlane/core/internal/ent/generated/templatehistory"
	"github.com/theopenlane/core/internal/ent/generated/tfasetting"
	"github.com/theopenlane/core/internal/ent/generated/user"
	"github.com/theopenlane/core/internal/ent/generated/userhistory"
	"github.com/theopenlane/core/internal/ent/generated/usersetting"
	"github.com/theopenlane/core/internal/ent/generated/usersettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/webauthn"
	"github.com/theopenlane/core/internal/ent/schema"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apitokenMixin := schema.APIToken{}.Mixin()
	apitoken.Policy = privacy.NewPolicies(schema.APIToken{})
	apitoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := apitoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	apitokenMixinHooks0 := apitokenMixin[0].Hooks()
	apitokenMixinHooks1 := apitokenMixin[1].Hooks()
	apitokenMixinHooks4 := apitokenMixin[4].Hooks()
	apitokenHooks := schema.APIToken{}.Hooks()

	apitoken.Hooks[1] = apitokenMixinHooks0[0]

	apitoken.Hooks[2] = apitokenMixinHooks1[0]

	apitoken.Hooks[3] = apitokenMixinHooks4[0]

	apitoken.Hooks[4] = apitokenHooks[0]

	apitoken.Hooks[5] = apitokenHooks[1]
	apitokenMixinInters1 := apitokenMixin[1].Interceptors()
	apitokenMixinInters4 := apitokenMixin[4].Interceptors()
	apitokenInters := schema.APIToken{}.Interceptors()
	apitoken.Interceptors[0] = apitokenMixinInters1[0]
	apitoken.Interceptors[1] = apitokenMixinInters4[0]
	apitoken.Interceptors[2] = apitokenInters[0]
	apitokenMixinFields0 := apitokenMixin[0].Fields()
	_ = apitokenMixinFields0
	apitokenMixinFields2 := apitokenMixin[2].Fields()
	_ = apitokenMixinFields2
	apitokenMixinFields3 := apitokenMixin[3].Fields()
	_ = apitokenMixinFields3
	apitokenMixinFields4 := apitokenMixin[4].Fields()
	_ = apitokenMixinFields4
	apitokenFields := schema.APIToken{}.Fields()
	_ = apitokenFields
	// apitokenDescCreatedAt is the schema descriptor for created_at field.
	apitokenDescCreatedAt := apitokenMixinFields0[0].Descriptor()
	// apitoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	apitoken.DefaultCreatedAt = apitokenDescCreatedAt.Default.(func() time.Time)
	// apitokenDescUpdatedAt is the schema descriptor for updated_at field.
	apitokenDescUpdatedAt := apitokenMixinFields0[1].Descriptor()
	// apitoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apitoken.DefaultUpdatedAt = apitokenDescUpdatedAt.Default.(func() time.Time)
	// apitoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apitoken.UpdateDefaultUpdatedAt = apitokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apitokenDescTags is the schema descriptor for tags field.
	apitokenDescTags := apitokenMixinFields3[0].Descriptor()
	// apitoken.DefaultTags holds the default value on creation for the tags field.
	apitoken.DefaultTags = apitokenDescTags.Default.([]string)
	// apitokenDescOwnerID is the schema descriptor for owner_id field.
	apitokenDescOwnerID := apitokenMixinFields4[0].Descriptor()
	// apitoken.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	apitoken.OwnerIDValidator = apitokenDescOwnerID.Validators[0].(func(string) error)
	// apitokenDescName is the schema descriptor for name field.
	apitokenDescName := apitokenFields[0].Descriptor()
	// apitoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apitoken.NameValidator = apitokenDescName.Validators[0].(func(string) error)
	// apitokenDescToken is the schema descriptor for token field.
	apitokenDescToken := apitokenFields[1].Descriptor()
	// apitoken.DefaultToken holds the default value on creation for the token field.
	apitoken.DefaultToken = apitokenDescToken.Default.(func() string)
	// apitokenDescID is the schema descriptor for id field.
	apitokenDescID := apitokenMixinFields2[0].Descriptor()
	// apitoken.DefaultID holds the default value on creation for the id field.
	apitoken.DefaultID = apitokenDescID.Default.(func() string)
	actionplanMixin := schema.ActionPlan{}.Mixin()
	actionplanMixinHooks0 := actionplanMixin[0].Hooks()
	actionplanMixinHooks1 := actionplanMixin[1].Hooks()
	actionplan.Hooks[0] = actionplanMixinHooks0[0]
	actionplan.Hooks[1] = actionplanMixinHooks1[0]
	actionplanMixinInters1 := actionplanMixin[1].Interceptors()
	actionplan.Interceptors[0] = actionplanMixinInters1[0]
	actionplanMixinFields0 := actionplanMixin[0].Fields()
	_ = actionplanMixinFields0
	actionplanMixinFields2 := actionplanMixin[2].Fields()
	_ = actionplanMixinFields2
	actionplanMixinFields3 := actionplanMixin[3].Fields()
	_ = actionplanMixinFields3
	actionplanFields := schema.ActionPlan{}.Fields()
	_ = actionplanFields
	// actionplanDescCreatedAt is the schema descriptor for created_at field.
	actionplanDescCreatedAt := actionplanMixinFields0[0].Descriptor()
	// actionplan.DefaultCreatedAt holds the default value on creation for the created_at field.
	actionplan.DefaultCreatedAt = actionplanDescCreatedAt.Default.(func() time.Time)
	// actionplanDescUpdatedAt is the schema descriptor for updated_at field.
	actionplanDescUpdatedAt := actionplanMixinFields0[1].Descriptor()
	// actionplan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	actionplan.DefaultUpdatedAt = actionplanDescUpdatedAt.Default.(func() time.Time)
	// actionplan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	actionplan.UpdateDefaultUpdatedAt = actionplanDescUpdatedAt.UpdateDefault.(func() time.Time)
	// actionplanDescTags is the schema descriptor for tags field.
	actionplanDescTags := actionplanMixinFields3[0].Descriptor()
	// actionplan.DefaultTags holds the default value on creation for the tags field.
	actionplan.DefaultTags = actionplanDescTags.Default.([]string)
	// actionplanDescID is the schema descriptor for id field.
	actionplanDescID := actionplanMixinFields2[0].Descriptor()
	// actionplan.DefaultID holds the default value on creation for the id field.
	actionplan.DefaultID = actionplanDescID.Default.(func() string)
	actionplanhistoryFields := schema.ActionPlanHistory{}.Fields()
	_ = actionplanhistoryFields
	// actionplanhistoryDescHistoryTime is the schema descriptor for history_time field.
	actionplanhistoryDescHistoryTime := actionplanhistoryFields[0].Descriptor()
	// actionplanhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	actionplanhistory.DefaultHistoryTime = actionplanhistoryDescHistoryTime.Default.(func() time.Time)
	// actionplanhistoryDescCreatedAt is the schema descriptor for created_at field.
	actionplanhistoryDescCreatedAt := actionplanhistoryFields[3].Descriptor()
	// actionplanhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	actionplanhistory.DefaultCreatedAt = actionplanhistoryDescCreatedAt.Default.(func() time.Time)
	// actionplanhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	actionplanhistoryDescUpdatedAt := actionplanhistoryFields[4].Descriptor()
	// actionplanhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	actionplanhistory.DefaultUpdatedAt = actionplanhistoryDescUpdatedAt.Default.(func() time.Time)
	// actionplanhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	actionplanhistory.UpdateDefaultUpdatedAt = actionplanhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// actionplanhistoryDescTags is the schema descriptor for tags field.
	actionplanhistoryDescTags := actionplanhistoryFields[10].Descriptor()
	// actionplanhistory.DefaultTags holds the default value on creation for the tags field.
	actionplanhistory.DefaultTags = actionplanhistoryDescTags.Default.([]string)
	// actionplanhistoryDescID is the schema descriptor for id field.
	actionplanhistoryDescID := actionplanhistoryFields[9].Descriptor()
	// actionplanhistory.DefaultID holds the default value on creation for the id field.
	actionplanhistory.DefaultID = actionplanhistoryDescID.Default.(func() string)
	contactMixin := schema.Contact{}.Mixin()
	contact.Policy = privacy.NewPolicies(schema.Contact{})
	contact.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := contact.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	contactMixinHooks0 := contactMixin[0].Hooks()
	contactMixinHooks2 := contactMixin[2].Hooks()
	contactMixinHooks4 := contactMixin[4].Hooks()

	contact.Hooks[1] = contactMixinHooks0[0]

	contact.Hooks[2] = contactMixinHooks2[0]

	contact.Hooks[3] = contactMixinHooks4[0]
	contactMixinInters2 := contactMixin[2].Interceptors()
	contactMixinInters4 := contactMixin[4].Interceptors()
	contact.Interceptors[0] = contactMixinInters2[0]
	contact.Interceptors[1] = contactMixinInters4[0]
	contactMixinFields0 := contactMixin[0].Fields()
	_ = contactMixinFields0
	contactMixinFields1 := contactMixin[1].Fields()
	_ = contactMixinFields1
	contactMixinFields3 := contactMixin[3].Fields()
	_ = contactMixinFields3
	contactMixinFields4 := contactMixin[4].Fields()
	_ = contactMixinFields4
	contactFields := schema.Contact{}.Fields()
	_ = contactFields
	// contactDescCreatedAt is the schema descriptor for created_at field.
	contactDescCreatedAt := contactMixinFields0[0].Descriptor()
	// contact.DefaultCreatedAt holds the default value on creation for the created_at field.
	contact.DefaultCreatedAt = contactDescCreatedAt.Default.(func() time.Time)
	// contactDescUpdatedAt is the schema descriptor for updated_at field.
	contactDescUpdatedAt := contactMixinFields0[1].Descriptor()
	// contact.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contact.DefaultUpdatedAt = contactDescUpdatedAt.Default.(func() time.Time)
	// contact.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	contact.UpdateDefaultUpdatedAt = contactDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contactDescTags is the schema descriptor for tags field.
	contactDescTags := contactMixinFields3[0].Descriptor()
	// contact.DefaultTags holds the default value on creation for the tags field.
	contact.DefaultTags = contactDescTags.Default.([]string)
	// contactDescOwnerID is the schema descriptor for owner_id field.
	contactDescOwnerID := contactMixinFields4[0].Descriptor()
	// contact.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	contact.OwnerIDValidator = contactDescOwnerID.Validators[0].(func(string) error)
	// contactDescFullName is the schema descriptor for full_name field.
	contactDescFullName := contactFields[0].Descriptor()
	// contact.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	contact.FullNameValidator = func() func(string) error {
		validators := contactDescFullName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(full_name string) error {
			for _, fn := range fns {
				if err := fn(full_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// contactDescEmail is the schema descriptor for email field.
	contactDescEmail := contactFields[3].Descriptor()
	// contact.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	contact.EmailValidator = contactDescEmail.Validators[0].(func(string) error)
	// contactDescPhoneNumber is the schema descriptor for phone_number field.
	contactDescPhoneNumber := contactFields[4].Descriptor()
	// contact.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	contact.PhoneNumberValidator = contactDescPhoneNumber.Validators[0].(func(string) error)
	// contactDescID is the schema descriptor for id field.
	contactDescID := contactMixinFields1[0].Descriptor()
	// contact.DefaultID holds the default value on creation for the id field.
	contact.DefaultID = contactDescID.Default.(func() string)
	contacthistoryInters := schema.ContactHistory{}.Interceptors()
	contacthistory.Interceptors[0] = contacthistoryInters[0]
	contacthistoryFields := schema.ContactHistory{}.Fields()
	_ = contacthistoryFields
	// contacthistoryDescHistoryTime is the schema descriptor for history_time field.
	contacthistoryDescHistoryTime := contacthistoryFields[0].Descriptor()
	// contacthistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	contacthistory.DefaultHistoryTime = contacthistoryDescHistoryTime.Default.(func() time.Time)
	// contacthistoryDescCreatedAt is the schema descriptor for created_at field.
	contacthistoryDescCreatedAt := contacthistoryFields[3].Descriptor()
	// contacthistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	contacthistory.DefaultCreatedAt = contacthistoryDescCreatedAt.Default.(func() time.Time)
	// contacthistoryDescUpdatedAt is the schema descriptor for updated_at field.
	contacthistoryDescUpdatedAt := contacthistoryFields[4].Descriptor()
	// contacthistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contacthistory.DefaultUpdatedAt = contacthistoryDescUpdatedAt.Default.(func() time.Time)
	// contacthistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	contacthistory.UpdateDefaultUpdatedAt = contacthistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contacthistoryDescTags is the schema descriptor for tags field.
	contacthistoryDescTags := contacthistoryFields[10].Descriptor()
	// contacthistory.DefaultTags holds the default value on creation for the tags field.
	contacthistory.DefaultTags = contacthistoryDescTags.Default.([]string)
	// contacthistoryDescID is the schema descriptor for id field.
	contacthistoryDescID := contacthistoryFields[7].Descriptor()
	// contacthistory.DefaultID holds the default value on creation for the id field.
	contacthistory.DefaultID = contacthistoryDescID.Default.(func() string)
	controlMixin := schema.Control{}.Mixin()
	control.Policy = privacy.NewPolicies(schema.Control{})
	control.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := control.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlMixinHooks0 := controlMixin[0].Hooks()
	controlMixinHooks1 := controlMixin[1].Hooks()
	controlMixinHooks2 := controlMixin[2].Hooks()
	controlMixinHooks4 := controlMixin[4].Hooks()
	controlMixinHooks5 := controlMixin[5].Hooks()

	control.Hooks[1] = controlMixinHooks0[0]

	control.Hooks[2] = controlMixinHooks1[0]

	control.Hooks[3] = controlMixinHooks2[0]

	control.Hooks[4] = controlMixinHooks4[0]

	control.Hooks[5] = controlMixinHooks4[1]

	control.Hooks[6] = controlMixinHooks4[2]

	control.Hooks[7] = controlMixinHooks5[0]

	control.Hooks[8] = controlMixinHooks5[1]

	control.Hooks[9] = controlMixinHooks5[2]
	controlMixinInters1 := controlMixin[1].Interceptors()
	controlMixinInters4 := controlMixin[4].Interceptors()
	control.Interceptors[0] = controlMixinInters1[0]
	control.Interceptors[1] = controlMixinInters4[0]
	controlMixinFields0 := controlMixin[0].Fields()
	_ = controlMixinFields0
	controlMixinFields2 := controlMixin[2].Fields()
	_ = controlMixinFields2
	controlMixinFields3 := controlMixin[3].Fields()
	_ = controlMixinFields3
	controlMixinFields4 := controlMixin[4].Fields()
	_ = controlMixinFields4
	controlFields := schema.Control{}.Fields()
	_ = controlFields
	// controlDescCreatedAt is the schema descriptor for created_at field.
	controlDescCreatedAt := controlMixinFields0[0].Descriptor()
	// control.DefaultCreatedAt holds the default value on creation for the created_at field.
	control.DefaultCreatedAt = controlDescCreatedAt.Default.(func() time.Time)
	// controlDescUpdatedAt is the schema descriptor for updated_at field.
	controlDescUpdatedAt := controlMixinFields0[1].Descriptor()
	// control.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	control.DefaultUpdatedAt = controlDescUpdatedAt.Default.(func() time.Time)
	// control.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	control.UpdateDefaultUpdatedAt = controlDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlDescDisplayID is the schema descriptor for display_id field.
	controlDescDisplayID := controlMixinFields2[1].Descriptor()
	// control.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	control.DisplayIDValidator = controlDescDisplayID.Validators[0].(func(string) error)
	// controlDescTags is the schema descriptor for tags field.
	controlDescTags := controlMixinFields3[0].Descriptor()
	// control.DefaultTags holds the default value on creation for the tags field.
	control.DefaultTags = controlDescTags.Default.([]string)
	// controlDescOwnerID is the schema descriptor for owner_id field.
	controlDescOwnerID := controlMixinFields4[0].Descriptor()
	// control.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	control.OwnerIDValidator = controlDescOwnerID.Validators[0].(func(string) error)
	// controlDescName is the schema descriptor for name field.
	controlDescName := controlFields[0].Descriptor()
	// control.NameValidator is a validator for the "name" field. It is called by the builders before save.
	control.NameValidator = controlDescName.Validators[0].(func(string) error)
	// controlDescID is the schema descriptor for id field.
	controlDescID := controlMixinFields2[0].Descriptor()
	// control.DefaultID holds the default value on creation for the id field.
	control.DefaultID = controlDescID.Default.(func() string)
	controlhistoryInters := schema.ControlHistory{}.Interceptors()
	controlhistory.Interceptors[0] = controlhistoryInters[0]
	controlhistoryFields := schema.ControlHistory{}.Fields()
	_ = controlhistoryFields
	// controlhistoryDescHistoryTime is the schema descriptor for history_time field.
	controlhistoryDescHistoryTime := controlhistoryFields[0].Descriptor()
	// controlhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	controlhistory.DefaultHistoryTime = controlhistoryDescHistoryTime.Default.(func() time.Time)
	// controlhistoryDescCreatedAt is the schema descriptor for created_at field.
	controlhistoryDescCreatedAt := controlhistoryFields[3].Descriptor()
	// controlhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlhistory.DefaultCreatedAt = controlhistoryDescCreatedAt.Default.(func() time.Time)
	// controlhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	controlhistoryDescUpdatedAt := controlhistoryFields[4].Descriptor()
	// controlhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlhistory.DefaultUpdatedAt = controlhistoryDescUpdatedAt.Default.(func() time.Time)
	// controlhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlhistory.UpdateDefaultUpdatedAt = controlhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlhistoryDescTags is the schema descriptor for tags field.
	controlhistoryDescTags := controlhistoryFields[11].Descriptor()
	// controlhistory.DefaultTags holds the default value on creation for the tags field.
	controlhistory.DefaultTags = controlhistoryDescTags.Default.([]string)
	// controlhistoryDescID is the schema descriptor for id field.
	controlhistoryDescID := controlhistoryFields[9].Descriptor()
	// controlhistory.DefaultID holds the default value on creation for the id field.
	controlhistory.DefaultID = controlhistoryDescID.Default.(func() string)
	controlobjectiveMixin := schema.ControlObjective{}.Mixin()
	controlobjective.Policy = privacy.NewPolicies(schema.ControlObjective{})
	controlobjective.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlobjective.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlobjectiveMixinHooks0 := controlobjectiveMixin[0].Hooks()
	controlobjectiveMixinHooks1 := controlobjectiveMixin[1].Hooks()
	controlobjectiveMixinHooks2 := controlobjectiveMixin[2].Hooks()
	controlobjectiveMixinHooks4 := controlobjectiveMixin[4].Hooks()
	controlobjectiveMixinHooks5 := controlobjectiveMixin[5].Hooks()

	controlobjective.Hooks[1] = controlobjectiveMixinHooks0[0]

	controlobjective.Hooks[2] = controlobjectiveMixinHooks1[0]

	controlobjective.Hooks[3] = controlobjectiveMixinHooks2[0]

	controlobjective.Hooks[4] = controlobjectiveMixinHooks4[0]

	controlobjective.Hooks[5] = controlobjectiveMixinHooks4[1]

	controlobjective.Hooks[6] = controlobjectiveMixinHooks4[2]

	controlobjective.Hooks[7] = controlobjectiveMixinHooks5[0]

	controlobjective.Hooks[8] = controlobjectiveMixinHooks5[1]

	controlobjective.Hooks[9] = controlobjectiveMixinHooks5[2]
	controlobjectiveMixinInters1 := controlobjectiveMixin[1].Interceptors()
	controlobjectiveMixinInters4 := controlobjectiveMixin[4].Interceptors()
	controlobjective.Interceptors[0] = controlobjectiveMixinInters1[0]
	controlobjective.Interceptors[1] = controlobjectiveMixinInters4[0]
	controlobjectiveMixinFields0 := controlobjectiveMixin[0].Fields()
	_ = controlobjectiveMixinFields0
	controlobjectiveMixinFields2 := controlobjectiveMixin[2].Fields()
	_ = controlobjectiveMixinFields2
	controlobjectiveMixinFields3 := controlobjectiveMixin[3].Fields()
	_ = controlobjectiveMixinFields3
	controlobjectiveMixinFields4 := controlobjectiveMixin[4].Fields()
	_ = controlobjectiveMixinFields4
	controlobjectiveFields := schema.ControlObjective{}.Fields()
	_ = controlobjectiveFields
	// controlobjectiveDescCreatedAt is the schema descriptor for created_at field.
	controlobjectiveDescCreatedAt := controlobjectiveMixinFields0[0].Descriptor()
	// controlobjective.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlobjective.DefaultCreatedAt = controlobjectiveDescCreatedAt.Default.(func() time.Time)
	// controlobjectiveDescUpdatedAt is the schema descriptor for updated_at field.
	controlobjectiveDescUpdatedAt := controlobjectiveMixinFields0[1].Descriptor()
	// controlobjective.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlobjective.DefaultUpdatedAt = controlobjectiveDescUpdatedAt.Default.(func() time.Time)
	// controlobjective.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlobjective.UpdateDefaultUpdatedAt = controlobjectiveDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlobjectiveDescDisplayID is the schema descriptor for display_id field.
	controlobjectiveDescDisplayID := controlobjectiveMixinFields2[1].Descriptor()
	// controlobjective.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	controlobjective.DisplayIDValidator = controlobjectiveDescDisplayID.Validators[0].(func(string) error)
	// controlobjectiveDescTags is the schema descriptor for tags field.
	controlobjectiveDescTags := controlobjectiveMixinFields3[0].Descriptor()
	// controlobjective.DefaultTags holds the default value on creation for the tags field.
	controlobjective.DefaultTags = controlobjectiveDescTags.Default.([]string)
	// controlobjectiveDescOwnerID is the schema descriptor for owner_id field.
	controlobjectiveDescOwnerID := controlobjectiveMixinFields4[0].Descriptor()
	// controlobjective.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	controlobjective.OwnerIDValidator = controlobjectiveDescOwnerID.Validators[0].(func(string) error)
	// controlobjectiveDescName is the schema descriptor for name field.
	controlobjectiveDescName := controlobjectiveFields[0].Descriptor()
	// controlobjective.NameValidator is a validator for the "name" field. It is called by the builders before save.
	controlobjective.NameValidator = controlobjectiveDescName.Validators[0].(func(string) error)
	// controlobjectiveDescID is the schema descriptor for id field.
	controlobjectiveDescID := controlobjectiveMixinFields2[0].Descriptor()
	// controlobjective.DefaultID holds the default value on creation for the id field.
	controlobjective.DefaultID = controlobjectiveDescID.Default.(func() string)
	controlobjectivehistoryInters := schema.ControlObjectiveHistory{}.Interceptors()
	controlobjectivehistory.Interceptors[0] = controlobjectivehistoryInters[0]
	controlobjectivehistoryFields := schema.ControlObjectiveHistory{}.Fields()
	_ = controlobjectivehistoryFields
	// controlobjectivehistoryDescHistoryTime is the schema descriptor for history_time field.
	controlobjectivehistoryDescHistoryTime := controlobjectivehistoryFields[0].Descriptor()
	// controlobjectivehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	controlobjectivehistory.DefaultHistoryTime = controlobjectivehistoryDescHistoryTime.Default.(func() time.Time)
	// controlobjectivehistoryDescCreatedAt is the schema descriptor for created_at field.
	controlobjectivehistoryDescCreatedAt := controlobjectivehistoryFields[3].Descriptor()
	// controlobjectivehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlobjectivehistory.DefaultCreatedAt = controlobjectivehistoryDescCreatedAt.Default.(func() time.Time)
	// controlobjectivehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	controlobjectivehistoryDescUpdatedAt := controlobjectivehistoryFields[4].Descriptor()
	// controlobjectivehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlobjectivehistory.DefaultUpdatedAt = controlobjectivehistoryDescUpdatedAt.Default.(func() time.Time)
	// controlobjectivehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlobjectivehistory.UpdateDefaultUpdatedAt = controlobjectivehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlobjectivehistoryDescTags is the schema descriptor for tags field.
	controlobjectivehistoryDescTags := controlobjectivehistoryFields[11].Descriptor()
	// controlobjectivehistory.DefaultTags holds the default value on creation for the tags field.
	controlobjectivehistory.DefaultTags = controlobjectivehistoryDescTags.Default.([]string)
	// controlobjectivehistoryDescID is the schema descriptor for id field.
	controlobjectivehistoryDescID := controlobjectivehistoryFields[9].Descriptor()
	// controlobjectivehistory.DefaultID holds the default value on creation for the id field.
	controlobjectivehistory.DefaultID = controlobjectivehistoryDescID.Default.(func() string)
	documentdataMixin := schema.DocumentData{}.Mixin()
	documentdata.Policy = privacy.NewPolicies(schema.DocumentData{})
	documentdata.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := documentdata.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	documentdataMixinHooks0 := documentdataMixin[0].Hooks()
	documentdataMixinHooks3 := documentdataMixin[3].Hooks()
	documentdataMixinHooks4 := documentdataMixin[4].Hooks()

	documentdata.Hooks[1] = documentdataMixinHooks0[0]

	documentdata.Hooks[2] = documentdataMixinHooks3[0]

	documentdata.Hooks[3] = documentdataMixinHooks4[0]
	documentdataMixinInters3 := documentdataMixin[3].Interceptors()
	documentdataMixinInters4 := documentdataMixin[4].Interceptors()
	documentdata.Interceptors[0] = documentdataMixinInters3[0]
	documentdata.Interceptors[1] = documentdataMixinInters4[0]
	documentdataMixinFields0 := documentdataMixin[0].Fields()
	_ = documentdataMixinFields0
	documentdataMixinFields1 := documentdataMixin[1].Fields()
	_ = documentdataMixinFields1
	documentdataMixinFields2 := documentdataMixin[2].Fields()
	_ = documentdataMixinFields2
	documentdataMixinFields4 := documentdataMixin[4].Fields()
	_ = documentdataMixinFields4
	documentdataFields := schema.DocumentData{}.Fields()
	_ = documentdataFields
	// documentdataDescCreatedAt is the schema descriptor for created_at field.
	documentdataDescCreatedAt := documentdataMixinFields0[0].Descriptor()
	// documentdata.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdata.DefaultCreatedAt = documentdataDescCreatedAt.Default.(func() time.Time)
	// documentdataDescUpdatedAt is the schema descriptor for updated_at field.
	documentdataDescUpdatedAt := documentdataMixinFields0[1].Descriptor()
	// documentdata.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdata.DefaultUpdatedAt = documentdataDescUpdatedAt.Default.(func() time.Time)
	// documentdata.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	documentdata.UpdateDefaultUpdatedAt = documentdataDescUpdatedAt.UpdateDefault.(func() time.Time)
	// documentdataDescTags is the schema descriptor for tags field.
	documentdataDescTags := documentdataMixinFields2[0].Descriptor()
	// documentdata.DefaultTags holds the default value on creation for the tags field.
	documentdata.DefaultTags = documentdataDescTags.Default.([]string)
	// documentdataDescOwnerID is the schema descriptor for owner_id field.
	documentdataDescOwnerID := documentdataMixinFields4[0].Descriptor()
	// documentdata.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	documentdata.OwnerIDValidator = documentdataDescOwnerID.Validators[0].(func(string) error)
	// documentdataDescID is the schema descriptor for id field.
	documentdataDescID := documentdataMixinFields1[0].Descriptor()
	// documentdata.DefaultID holds the default value on creation for the id field.
	documentdata.DefaultID = documentdataDescID.Default.(func() string)
	documentdatahistoryInters := schema.DocumentDataHistory{}.Interceptors()
	documentdatahistory.Interceptors[0] = documentdatahistoryInters[0]
	documentdatahistoryFields := schema.DocumentDataHistory{}.Fields()
	_ = documentdatahistoryFields
	// documentdatahistoryDescHistoryTime is the schema descriptor for history_time field.
	documentdatahistoryDescHistoryTime := documentdatahistoryFields[0].Descriptor()
	// documentdatahistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	documentdatahistory.DefaultHistoryTime = documentdatahistoryDescHistoryTime.Default.(func() time.Time)
	// documentdatahistoryDescCreatedAt is the schema descriptor for created_at field.
	documentdatahistoryDescCreatedAt := documentdatahistoryFields[3].Descriptor()
	// documentdatahistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdatahistory.DefaultCreatedAt = documentdatahistoryDescCreatedAt.Default.(func() time.Time)
	// documentdatahistoryDescUpdatedAt is the schema descriptor for updated_at field.
	documentdatahistoryDescUpdatedAt := documentdatahistoryFields[4].Descriptor()
	// documentdatahistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdatahistory.DefaultUpdatedAt = documentdatahistoryDescUpdatedAt.Default.(func() time.Time)
	// documentdatahistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	documentdatahistory.UpdateDefaultUpdatedAt = documentdatahistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// documentdatahistoryDescTags is the schema descriptor for tags field.
	documentdatahistoryDescTags := documentdatahistoryFields[8].Descriptor()
	// documentdatahistory.DefaultTags holds the default value on creation for the tags field.
	documentdatahistory.DefaultTags = documentdatahistoryDescTags.Default.([]string)
	// documentdatahistoryDescID is the schema descriptor for id field.
	documentdatahistoryDescID := documentdatahistoryFields[7].Descriptor()
	// documentdatahistory.DefaultID holds the default value on creation for the id field.
	documentdatahistory.DefaultID = documentdatahistoryDescID.Default.(func() string)
	emailverificationtokenMixin := schema.EmailVerificationToken{}.Mixin()
	emailverificationtoken.Policy = privacy.NewPolicies(schema.EmailVerificationToken{})
	emailverificationtoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := emailverificationtoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	emailverificationtokenMixinHooks0 := emailverificationtokenMixin[0].Hooks()
	emailverificationtokenMixinHooks2 := emailverificationtokenMixin[2].Hooks()
	emailverificationtokenMixinHooks3 := emailverificationtokenMixin[3].Hooks()
	emailverificationtokenHooks := schema.EmailVerificationToken{}.Hooks()

	emailverificationtoken.Hooks[1] = emailverificationtokenMixinHooks0[0]

	emailverificationtoken.Hooks[2] = emailverificationtokenMixinHooks2[0]

	emailverificationtoken.Hooks[3] = emailverificationtokenMixinHooks3[0]

	emailverificationtoken.Hooks[4] = emailverificationtokenHooks[0]
	emailverificationtokenMixinInters2 := emailverificationtokenMixin[2].Interceptors()
	emailverificationtokenMixinInters3 := emailverificationtokenMixin[3].Interceptors()
	emailverificationtoken.Interceptors[0] = emailverificationtokenMixinInters2[0]
	emailverificationtoken.Interceptors[1] = emailverificationtokenMixinInters3[0]
	emailverificationtokenMixinFields0 := emailverificationtokenMixin[0].Fields()
	_ = emailverificationtokenMixinFields0
	emailverificationtokenMixinFields1 := emailverificationtokenMixin[1].Fields()
	_ = emailverificationtokenMixinFields1
	emailverificationtokenFields := schema.EmailVerificationToken{}.Fields()
	_ = emailverificationtokenFields
	// emailverificationtokenDescCreatedAt is the schema descriptor for created_at field.
	emailverificationtokenDescCreatedAt := emailverificationtokenMixinFields0[0].Descriptor()
	// emailverificationtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	emailverificationtoken.DefaultCreatedAt = emailverificationtokenDescCreatedAt.Default.(func() time.Time)
	// emailverificationtokenDescUpdatedAt is the schema descriptor for updated_at field.
	emailverificationtokenDescUpdatedAt := emailverificationtokenMixinFields0[1].Descriptor()
	// emailverificationtoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	emailverificationtoken.DefaultUpdatedAt = emailverificationtokenDescUpdatedAt.Default.(func() time.Time)
	// emailverificationtoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	emailverificationtoken.UpdateDefaultUpdatedAt = emailverificationtokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// emailverificationtokenDescToken is the schema descriptor for token field.
	emailverificationtokenDescToken := emailverificationtokenFields[0].Descriptor()
	// emailverificationtoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	emailverificationtoken.TokenValidator = emailverificationtokenDescToken.Validators[0].(func(string) error)
	// emailverificationtokenDescEmail is the schema descriptor for email field.
	emailverificationtokenDescEmail := emailverificationtokenFields[2].Descriptor()
	// emailverificationtoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	emailverificationtoken.EmailValidator = func() func(string) error {
		validators := emailverificationtokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// emailverificationtokenDescSecret is the schema descriptor for secret field.
	emailverificationtokenDescSecret := emailverificationtokenFields[3].Descriptor()
	// emailverificationtoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	emailverificationtoken.SecretValidator = emailverificationtokenDescSecret.Validators[0].(func([]byte) error)
	// emailverificationtokenDescID is the schema descriptor for id field.
	emailverificationtokenDescID := emailverificationtokenMixinFields1[0].Descriptor()
	// emailverificationtoken.DefaultID holds the default value on creation for the id field.
	emailverificationtoken.DefaultID = emailverificationtokenDescID.Default.(func() string)
	entityMixin := schema.Entity{}.Mixin()
	entity.Policy = privacy.NewPolicies(schema.Entity{})
	entity.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entity.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entityMixinHooks0 := entityMixin[0].Hooks()
	entityMixinHooks2 := entityMixin[2].Hooks()
	entityMixinHooks4 := entityMixin[4].Hooks()
	entityHooks := schema.Entity{}.Hooks()

	entity.Hooks[1] = entityMixinHooks0[0]

	entity.Hooks[2] = entityMixinHooks2[0]

	entity.Hooks[3] = entityMixinHooks4[0]

	entity.Hooks[4] = entityHooks[0]
	entityMixinInters2 := entityMixin[2].Interceptors()
	entityMixinInters4 := entityMixin[4].Interceptors()
	entity.Interceptors[0] = entityMixinInters2[0]
	entity.Interceptors[1] = entityMixinInters4[0]
	entityMixinFields0 := entityMixin[0].Fields()
	_ = entityMixinFields0
	entityMixinFields1 := entityMixin[1].Fields()
	_ = entityMixinFields1
	entityMixinFields3 := entityMixin[3].Fields()
	_ = entityMixinFields3
	entityMixinFields4 := entityMixin[4].Fields()
	_ = entityMixinFields4
	entityFields := schema.Entity{}.Fields()
	_ = entityFields
	// entityDescCreatedAt is the schema descriptor for created_at field.
	entityDescCreatedAt := entityMixinFields0[0].Descriptor()
	// entity.DefaultCreatedAt holds the default value on creation for the created_at field.
	entity.DefaultCreatedAt = entityDescCreatedAt.Default.(func() time.Time)
	// entityDescUpdatedAt is the schema descriptor for updated_at field.
	entityDescUpdatedAt := entityMixinFields0[1].Descriptor()
	// entity.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entity.DefaultUpdatedAt = entityDescUpdatedAt.Default.(func() time.Time)
	// entity.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entity.UpdateDefaultUpdatedAt = entityDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entityDescTags is the schema descriptor for tags field.
	entityDescTags := entityMixinFields3[0].Descriptor()
	// entity.DefaultTags holds the default value on creation for the tags field.
	entity.DefaultTags = entityDescTags.Default.([]string)
	// entityDescOwnerID is the schema descriptor for owner_id field.
	entityDescOwnerID := entityMixinFields4[0].Descriptor()
	// entity.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	entity.OwnerIDValidator = entityDescOwnerID.Validators[0].(func(string) error)
	// entityDescName is the schema descriptor for name field.
	entityDescName := entityFields[0].Descriptor()
	// entity.NameValidator is a validator for the "name" field. It is called by the builders before save.
	entity.NameValidator = func() func(string) error {
		validators := entityDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entityDescDisplayName is the schema descriptor for display_name field.
	entityDescDisplayName := entityFields[1].Descriptor()
	// entity.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	entity.DisplayNameValidator = func() func(string) error {
		validators := entityDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entityDescDomains is the schema descriptor for domains field.
	entityDescDomains := entityFields[3].Descriptor()
	// entity.DomainsValidator is a validator for the "domains" field. It is called by the builders before save.
	entity.DomainsValidator = entityDescDomains.Validators[0].(func([]string) error)
	// entityDescStatus is the schema descriptor for status field.
	entityDescStatus := entityFields[5].Descriptor()
	// entity.DefaultStatus holds the default value on creation for the status field.
	entity.DefaultStatus = entityDescStatus.Default.(string)
	// entityDescID is the schema descriptor for id field.
	entityDescID := entityMixinFields1[0].Descriptor()
	// entity.DefaultID holds the default value on creation for the id field.
	entity.DefaultID = entityDescID.Default.(func() string)
	entityhistoryInters := schema.EntityHistory{}.Interceptors()
	entityhistory.Interceptors[0] = entityhistoryInters[0]
	entityhistoryFields := schema.EntityHistory{}.Fields()
	_ = entityhistoryFields
	// entityhistoryDescHistoryTime is the schema descriptor for history_time field.
	entityhistoryDescHistoryTime := entityhistoryFields[0].Descriptor()
	// entityhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	entityhistory.DefaultHistoryTime = entityhistoryDescHistoryTime.Default.(func() time.Time)
	// entityhistoryDescCreatedAt is the schema descriptor for created_at field.
	entityhistoryDescCreatedAt := entityhistoryFields[3].Descriptor()
	// entityhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	entityhistory.DefaultCreatedAt = entityhistoryDescCreatedAt.Default.(func() time.Time)
	// entityhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	entityhistoryDescUpdatedAt := entityhistoryFields[4].Descriptor()
	// entityhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entityhistory.DefaultUpdatedAt = entityhistoryDescUpdatedAt.Default.(func() time.Time)
	// entityhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entityhistory.UpdateDefaultUpdatedAt = entityhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entityhistoryDescTags is the schema descriptor for tags field.
	entityhistoryDescTags := entityhistoryFields[10].Descriptor()
	// entityhistory.DefaultTags holds the default value on creation for the tags field.
	entityhistory.DefaultTags = entityhistoryDescTags.Default.([]string)
	// entityhistoryDescStatus is the schema descriptor for status field.
	entityhistoryDescStatus := entityhistoryFields[17].Descriptor()
	// entityhistory.DefaultStatus holds the default value on creation for the status field.
	entityhistory.DefaultStatus = entityhistoryDescStatus.Default.(string)
	// entityhistoryDescID is the schema descriptor for id field.
	entityhistoryDescID := entityhistoryFields[7].Descriptor()
	// entityhistory.DefaultID holds the default value on creation for the id field.
	entityhistory.DefaultID = entityhistoryDescID.Default.(func() string)
	entitytypeMixin := schema.EntityType{}.Mixin()
	entitytype.Policy = privacy.NewPolicies(schema.EntityType{})
	entitytype.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entitytype.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entitytypeMixinHooks0 := entitytypeMixin[0].Hooks()
	entitytypeMixinHooks2 := entitytypeMixin[2].Hooks()
	entitytypeMixinHooks4 := entitytypeMixin[4].Hooks()

	entitytype.Hooks[1] = entitytypeMixinHooks0[0]

	entitytype.Hooks[2] = entitytypeMixinHooks2[0]

	entitytype.Hooks[3] = entitytypeMixinHooks4[0]
	entitytypeMixinInters2 := entitytypeMixin[2].Interceptors()
	entitytypeMixinInters4 := entitytypeMixin[4].Interceptors()
	entitytype.Interceptors[0] = entitytypeMixinInters2[0]
	entitytype.Interceptors[1] = entitytypeMixinInters4[0]
	entitytypeMixinFields0 := entitytypeMixin[0].Fields()
	_ = entitytypeMixinFields0
	entitytypeMixinFields1 := entitytypeMixin[1].Fields()
	_ = entitytypeMixinFields1
	entitytypeMixinFields3 := entitytypeMixin[3].Fields()
	_ = entitytypeMixinFields3
	entitytypeMixinFields4 := entitytypeMixin[4].Fields()
	_ = entitytypeMixinFields4
	entitytypeFields := schema.EntityType{}.Fields()
	_ = entitytypeFields
	// entitytypeDescCreatedAt is the schema descriptor for created_at field.
	entitytypeDescCreatedAt := entitytypeMixinFields0[0].Descriptor()
	// entitytype.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitytype.DefaultCreatedAt = entitytypeDescCreatedAt.Default.(func() time.Time)
	// entitytypeDescUpdatedAt is the schema descriptor for updated_at field.
	entitytypeDescUpdatedAt := entitytypeMixinFields0[1].Descriptor()
	// entitytype.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitytype.DefaultUpdatedAt = entitytypeDescUpdatedAt.Default.(func() time.Time)
	// entitytype.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitytype.UpdateDefaultUpdatedAt = entitytypeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitytypeDescTags is the schema descriptor for tags field.
	entitytypeDescTags := entitytypeMixinFields3[0].Descriptor()
	// entitytype.DefaultTags holds the default value on creation for the tags field.
	entitytype.DefaultTags = entitytypeDescTags.Default.([]string)
	// entitytypeDescOwnerID is the schema descriptor for owner_id field.
	entitytypeDescOwnerID := entitytypeMixinFields4[0].Descriptor()
	// entitytype.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	entitytype.OwnerIDValidator = entitytypeDescOwnerID.Validators[0].(func(string) error)
	// entitytypeDescName is the schema descriptor for name field.
	entitytypeDescName := entitytypeFields[0].Descriptor()
	// entitytype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	entitytype.NameValidator = func() func(string) error {
		validators := entitytypeDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entitytypeDescID is the schema descriptor for id field.
	entitytypeDescID := entitytypeMixinFields1[0].Descriptor()
	// entitytype.DefaultID holds the default value on creation for the id field.
	entitytype.DefaultID = entitytypeDescID.Default.(func() string)
	entitytypehistoryInters := schema.EntityTypeHistory{}.Interceptors()
	entitytypehistory.Interceptors[0] = entitytypehistoryInters[0]
	entitytypehistoryFields := schema.EntityTypeHistory{}.Fields()
	_ = entitytypehistoryFields
	// entitytypehistoryDescHistoryTime is the schema descriptor for history_time field.
	entitytypehistoryDescHistoryTime := entitytypehistoryFields[0].Descriptor()
	// entitytypehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	entitytypehistory.DefaultHistoryTime = entitytypehistoryDescHistoryTime.Default.(func() time.Time)
	// entitytypehistoryDescCreatedAt is the schema descriptor for created_at field.
	entitytypehistoryDescCreatedAt := entitytypehistoryFields[3].Descriptor()
	// entitytypehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitytypehistory.DefaultCreatedAt = entitytypehistoryDescCreatedAt.Default.(func() time.Time)
	// entitytypehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	entitytypehistoryDescUpdatedAt := entitytypehistoryFields[4].Descriptor()
	// entitytypehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitytypehistory.DefaultUpdatedAt = entitytypehistoryDescUpdatedAt.Default.(func() time.Time)
	// entitytypehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitytypehistory.UpdateDefaultUpdatedAt = entitytypehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitytypehistoryDescTags is the schema descriptor for tags field.
	entitytypehistoryDescTags := entitytypehistoryFields[10].Descriptor()
	// entitytypehistory.DefaultTags holds the default value on creation for the tags field.
	entitytypehistory.DefaultTags = entitytypehistoryDescTags.Default.([]string)
	// entitytypehistoryDescID is the schema descriptor for id field.
	entitytypehistoryDescID := entitytypehistoryFields[7].Descriptor()
	// entitytypehistory.DefaultID holds the default value on creation for the id field.
	entitytypehistory.DefaultID = entitytypehistoryDescID.Default.(func() string)
	eventMixin := schema.Event{}.Mixin()
	eventMixinHooks0 := eventMixin[0].Hooks()
	event.Hooks[0] = eventMixinHooks0[0]
	eventMixinFields0 := eventMixin[0].Fields()
	_ = eventMixinFields0
	eventMixinFields1 := eventMixin[1].Fields()
	_ = eventMixinFields1
	eventMixinFields2 := eventMixin[2].Fields()
	_ = eventMixinFields2
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescCreatedAt is the schema descriptor for created_at field.
	eventDescCreatedAt := eventMixinFields0[0].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the created_at field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	// eventDescUpdatedAt is the schema descriptor for updated_at field.
	eventDescUpdatedAt := eventMixinFields0[1].Descriptor()
	// event.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	event.DefaultUpdatedAt = eventDescUpdatedAt.Default.(func() time.Time)
	// event.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	event.UpdateDefaultUpdatedAt = eventDescUpdatedAt.UpdateDefault.(func() time.Time)
	// eventDescTags is the schema descriptor for tags field.
	eventDescTags := eventMixinFields2[0].Descriptor()
	// event.DefaultTags holds the default value on creation for the tags field.
	event.DefaultTags = eventDescTags.Default.([]string)
	// eventDescID is the schema descriptor for id field.
	eventDescID := eventMixinFields1[0].Descriptor()
	// event.DefaultID holds the default value on creation for the id field.
	event.DefaultID = eventDescID.Default.(func() string)
	eventhistoryFields := schema.EventHistory{}.Fields()
	_ = eventhistoryFields
	// eventhistoryDescHistoryTime is the schema descriptor for history_time field.
	eventhistoryDescHistoryTime := eventhistoryFields[0].Descriptor()
	// eventhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	eventhistory.DefaultHistoryTime = eventhistoryDescHistoryTime.Default.(func() time.Time)
	// eventhistoryDescCreatedAt is the schema descriptor for created_at field.
	eventhistoryDescCreatedAt := eventhistoryFields[3].Descriptor()
	// eventhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	eventhistory.DefaultCreatedAt = eventhistoryDescCreatedAt.Default.(func() time.Time)
	// eventhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	eventhistoryDescUpdatedAt := eventhistoryFields[4].Descriptor()
	// eventhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	eventhistory.DefaultUpdatedAt = eventhistoryDescUpdatedAt.Default.(func() time.Time)
	// eventhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	eventhistory.UpdateDefaultUpdatedAt = eventhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// eventhistoryDescTags is the schema descriptor for tags field.
	eventhistoryDescTags := eventhistoryFields[8].Descriptor()
	// eventhistory.DefaultTags holds the default value on creation for the tags field.
	eventhistory.DefaultTags = eventhistoryDescTags.Default.([]string)
	// eventhistoryDescID is the schema descriptor for id field.
	eventhistoryDescID := eventhistoryFields[7].Descriptor()
	// eventhistory.DefaultID holds the default value on creation for the id field.
	eventhistory.DefaultID = eventhistoryDescID.Default.(func() string)
	evidenceMixin := schema.Evidence{}.Mixin()
	evidence.Policy = privacy.NewPolicies(schema.Evidence{})
	evidence.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := evidence.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	evidenceMixinHooks0 := evidenceMixin[0].Hooks()
	evidenceMixinHooks1 := evidenceMixin[1].Hooks()
	evidenceMixinHooks2 := evidenceMixin[2].Hooks()
	evidenceMixinHooks4 := evidenceMixin[4].Hooks()
	evidenceHooks := schema.Evidence{}.Hooks()

	evidence.Hooks[1] = evidenceMixinHooks0[0]

	evidence.Hooks[2] = evidenceMixinHooks1[0]

	evidence.Hooks[3] = evidenceMixinHooks2[0]

	evidence.Hooks[4] = evidenceMixinHooks4[0]

	evidence.Hooks[5] = evidenceMixinHooks4[1]

	evidence.Hooks[6] = evidenceMixinHooks4[2]

	evidence.Hooks[7] = evidenceHooks[0]
	evidenceMixinInters2 := evidenceMixin[2].Interceptors()
	evidenceMixinInters4 := evidenceMixin[4].Interceptors()
	evidence.Interceptors[0] = evidenceMixinInters2[0]
	evidence.Interceptors[1] = evidenceMixinInters4[0]
	evidenceMixinFields0 := evidenceMixin[0].Fields()
	_ = evidenceMixinFields0
	evidenceMixinFields1 := evidenceMixin[1].Fields()
	_ = evidenceMixinFields1
	evidenceMixinFields3 := evidenceMixin[3].Fields()
	_ = evidenceMixinFields3
	evidenceMixinFields4 := evidenceMixin[4].Fields()
	_ = evidenceMixinFields4
	evidenceFields := schema.Evidence{}.Fields()
	_ = evidenceFields
	// evidenceDescCreatedAt is the schema descriptor for created_at field.
	evidenceDescCreatedAt := evidenceMixinFields0[0].Descriptor()
	// evidence.DefaultCreatedAt holds the default value on creation for the created_at field.
	evidence.DefaultCreatedAt = evidenceDescCreatedAt.Default.(func() time.Time)
	// evidenceDescUpdatedAt is the schema descriptor for updated_at field.
	evidenceDescUpdatedAt := evidenceMixinFields0[1].Descriptor()
	// evidence.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	evidence.DefaultUpdatedAt = evidenceDescUpdatedAt.Default.(func() time.Time)
	// evidence.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	evidence.UpdateDefaultUpdatedAt = evidenceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// evidenceDescDisplayID is the schema descriptor for display_id field.
	evidenceDescDisplayID := evidenceMixinFields1[1].Descriptor()
	// evidence.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	evidence.DisplayIDValidator = evidenceDescDisplayID.Validators[0].(func(string) error)
	// evidenceDescTags is the schema descriptor for tags field.
	evidenceDescTags := evidenceMixinFields3[0].Descriptor()
	// evidence.DefaultTags holds the default value on creation for the tags field.
	evidence.DefaultTags = evidenceDescTags.Default.([]string)
	// evidenceDescOwnerID is the schema descriptor for owner_id field.
	evidenceDescOwnerID := evidenceMixinFields4[0].Descriptor()
	// evidence.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	evidence.OwnerIDValidator = evidenceDescOwnerID.Validators[0].(func(string) error)
	// evidenceDescName is the schema descriptor for name field.
	evidenceDescName := evidenceFields[0].Descriptor()
	// evidence.NameValidator is a validator for the "name" field. It is called by the builders before save.
	evidence.NameValidator = evidenceDescName.Validators[0].(func(string) error)
	// evidenceDescCreationDate is the schema descriptor for creation_date field.
	evidenceDescCreationDate := evidenceFields[3].Descriptor()
	// evidence.DefaultCreationDate holds the default value on creation for the creation_date field.
	evidence.DefaultCreationDate = evidenceDescCreationDate.Default.(func() time.Time)
	// evidenceDescRenewalDate is the schema descriptor for renewal_date field.
	evidenceDescRenewalDate := evidenceFields[4].Descriptor()
	// evidence.DefaultRenewalDate holds the default value on creation for the renewal_date field.
	evidence.DefaultRenewalDate = evidenceDescRenewalDate.Default.(time.Time)
	// evidenceDescIsAutomated is the schema descriptor for is_automated field.
	evidenceDescIsAutomated := evidenceFields[6].Descriptor()
	// evidence.DefaultIsAutomated holds the default value on creation for the is_automated field.
	evidence.DefaultIsAutomated = evidenceDescIsAutomated.Default.(bool)
	// evidenceDescID is the schema descriptor for id field.
	evidenceDescID := evidenceMixinFields1[0].Descriptor()
	// evidence.DefaultID holds the default value on creation for the id field.
	evidence.DefaultID = evidenceDescID.Default.(func() string)
	evidencehistoryInters := schema.EvidenceHistory{}.Interceptors()
	evidencehistory.Interceptors[0] = evidencehistoryInters[0]
	evidencehistoryFields := schema.EvidenceHistory{}.Fields()
	_ = evidencehistoryFields
	// evidencehistoryDescHistoryTime is the schema descriptor for history_time field.
	evidencehistoryDescHistoryTime := evidencehistoryFields[0].Descriptor()
	// evidencehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	evidencehistory.DefaultHistoryTime = evidencehistoryDescHistoryTime.Default.(func() time.Time)
	// evidencehistoryDescCreatedAt is the schema descriptor for created_at field.
	evidencehistoryDescCreatedAt := evidencehistoryFields[3].Descriptor()
	// evidencehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	evidencehistory.DefaultCreatedAt = evidencehistoryDescCreatedAt.Default.(func() time.Time)
	// evidencehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	evidencehistoryDescUpdatedAt := evidencehistoryFields[4].Descriptor()
	// evidencehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	evidencehistory.DefaultUpdatedAt = evidencehistoryDescUpdatedAt.Default.(func() time.Time)
	// evidencehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	evidencehistory.UpdateDefaultUpdatedAt = evidencehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// evidencehistoryDescTags is the schema descriptor for tags field.
	evidencehistoryDescTags := evidencehistoryFields[11].Descriptor()
	// evidencehistory.DefaultTags holds the default value on creation for the tags field.
	evidencehistory.DefaultTags = evidencehistoryDescTags.Default.([]string)
	// evidencehistoryDescCreationDate is the schema descriptor for creation_date field.
	evidencehistoryDescCreationDate := evidencehistoryFields[16].Descriptor()
	// evidencehistory.DefaultCreationDate holds the default value on creation for the creation_date field.
	evidencehistory.DefaultCreationDate = evidencehistoryDescCreationDate.Default.(func() time.Time)
	// evidencehistoryDescRenewalDate is the schema descriptor for renewal_date field.
	evidencehistoryDescRenewalDate := evidencehistoryFields[17].Descriptor()
	// evidencehistory.DefaultRenewalDate holds the default value on creation for the renewal_date field.
	evidencehistory.DefaultRenewalDate = evidencehistoryDescRenewalDate.Default.(time.Time)
	// evidencehistoryDescIsAutomated is the schema descriptor for is_automated field.
	evidencehistoryDescIsAutomated := evidencehistoryFields[19].Descriptor()
	// evidencehistory.DefaultIsAutomated holds the default value on creation for the is_automated field.
	evidencehistory.DefaultIsAutomated = evidencehistoryDescIsAutomated.Default.(bool)
	// evidencehistoryDescID is the schema descriptor for id field.
	evidencehistoryDescID := evidencehistoryFields[7].Descriptor()
	// evidencehistory.DefaultID holds the default value on creation for the id field.
	evidencehistory.DefaultID = evidencehistoryDescID.Default.(func() string)
	fileMixin := schema.File{}.Mixin()
	file.Policy = privacy.NewPolicies(schema.File{})
	file.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := file.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	fileMixinHooks0 := fileMixin[0].Hooks()
	fileMixinHooks1 := fileMixin[1].Hooks()

	file.Hooks[1] = fileMixinHooks0[0]

	file.Hooks[2] = fileMixinHooks1[0]
	fileMixinInters1 := fileMixin[1].Interceptors()
	fileMixinInters4 := fileMixin[4].Interceptors()
	fileInters := schema.File{}.Interceptors()
	file.Interceptors[0] = fileMixinInters1[0]
	file.Interceptors[1] = fileMixinInters4[0]
	file.Interceptors[2] = fileInters[0]
	fileMixinFields0 := fileMixin[0].Fields()
	_ = fileMixinFields0
	fileMixinFields2 := fileMixin[2].Fields()
	_ = fileMixinFields2
	fileMixinFields3 := fileMixin[3].Fields()
	_ = fileMixinFields3
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescCreatedAt is the schema descriptor for created_at field.
	fileDescCreatedAt := fileMixinFields0[0].Descriptor()
	// file.DefaultCreatedAt holds the default value on creation for the created_at field.
	file.DefaultCreatedAt = fileDescCreatedAt.Default.(func() time.Time)
	// fileDescUpdatedAt is the schema descriptor for updated_at field.
	fileDescUpdatedAt := fileMixinFields0[1].Descriptor()
	// file.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	file.DefaultUpdatedAt = fileDescUpdatedAt.Default.(func() time.Time)
	// file.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	file.UpdateDefaultUpdatedAt = fileDescUpdatedAt.UpdateDefault.(func() time.Time)
	// fileDescTags is the schema descriptor for tags field.
	fileDescTags := fileMixinFields3[0].Descriptor()
	// file.DefaultTags holds the default value on creation for the tags field.
	file.DefaultTags = fileDescTags.Default.([]string)
	// fileDescProvidedFileSize is the schema descriptor for provided_file_size field.
	fileDescProvidedFileSize := fileFields[2].Descriptor()
	// file.ProvidedFileSizeValidator is a validator for the "provided_file_size" field. It is called by the builders before save.
	file.ProvidedFileSizeValidator = fileDescProvidedFileSize.Validators[0].(func(int64) error)
	// fileDescPersistedFileSize is the schema descriptor for persisted_file_size field.
	fileDescPersistedFileSize := fileFields[3].Descriptor()
	// file.PersistedFileSizeValidator is a validator for the "persisted_file_size" field. It is called by the builders before save.
	file.PersistedFileSizeValidator = fileDescPersistedFileSize.Validators[0].(func(int64) error)
	// fileDescID is the schema descriptor for id field.
	fileDescID := fileMixinFields2[0].Descriptor()
	// file.DefaultID holds the default value on creation for the id field.
	file.DefaultID = fileDescID.Default.(func() string)
	filehistoryInters := schema.FileHistory{}.Interceptors()
	filehistory.Interceptors[0] = filehistoryInters[0]
	filehistoryFields := schema.FileHistory{}.Fields()
	_ = filehistoryFields
	// filehistoryDescHistoryTime is the schema descriptor for history_time field.
	filehistoryDescHistoryTime := filehistoryFields[0].Descriptor()
	// filehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	filehistory.DefaultHistoryTime = filehistoryDescHistoryTime.Default.(func() time.Time)
	// filehistoryDescCreatedAt is the schema descriptor for created_at field.
	filehistoryDescCreatedAt := filehistoryFields[3].Descriptor()
	// filehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	filehistory.DefaultCreatedAt = filehistoryDescCreatedAt.Default.(func() time.Time)
	// filehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	filehistoryDescUpdatedAt := filehistoryFields[4].Descriptor()
	// filehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	filehistory.DefaultUpdatedAt = filehistoryDescUpdatedAt.Default.(func() time.Time)
	// filehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	filehistory.UpdateDefaultUpdatedAt = filehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// filehistoryDescTags is the schema descriptor for tags field.
	filehistoryDescTags := filehistoryFields[10].Descriptor()
	// filehistory.DefaultTags holds the default value on creation for the tags field.
	filehistory.DefaultTags = filehistoryDescTags.Default.([]string)
	// filehistoryDescID is the schema descriptor for id field.
	filehistoryDescID := filehistoryFields[9].Descriptor()
	// filehistory.DefaultID holds the default value on creation for the id field.
	filehistory.DefaultID = filehistoryDescID.Default.(func() string)
	groupMixin := schema.Group{}.Mixin()
	group.Policy = privacy.NewPolicies(schema.Group{})
	group.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := group.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupMixinHooks0 := groupMixin[0].Hooks()
	groupMixinHooks1 := groupMixin[1].Hooks()
	groupMixinHooks4 := groupMixin[4].Hooks()
	groupHooks := schema.Group{}.Hooks()

	group.Hooks[1] = groupMixinHooks0[0]

	group.Hooks[2] = groupMixinHooks1[0]

	group.Hooks[3] = groupMixinHooks4[0]

	group.Hooks[4] = groupHooks[0]

	group.Hooks[5] = groupHooks[1]

	group.Hooks[6] = groupHooks[2]
	groupMixinInters1 := groupMixin[1].Interceptors()
	groupMixinInters4 := groupMixin[4].Interceptors()
	groupInters := schema.Group{}.Interceptors()
	group.Interceptors[0] = groupMixinInters1[0]
	group.Interceptors[1] = groupMixinInters4[0]
	group.Interceptors[2] = groupInters[0]
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupMixinFields2 := groupMixin[2].Fields()
	_ = groupMixinFields2
	groupMixinFields3 := groupMixin[3].Fields()
	_ = groupMixinFields3
	groupMixinFields4 := groupMixin[4].Fields()
	_ = groupMixinFields4
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupMixinFields0[0].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupMixinFields0[1].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescTags is the schema descriptor for tags field.
	groupDescTags := groupMixinFields3[0].Descriptor()
	// group.DefaultTags holds the default value on creation for the tags field.
	group.DefaultTags = groupDescTags.Default.([]string)
	// groupDescOwnerID is the schema descriptor for owner_id field.
	groupDescOwnerID := groupMixinFields4[0].Descriptor()
	// group.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	group.OwnerIDValidator = groupDescOwnerID.Validators[0].(func(string) error)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescIsManaged is the schema descriptor for is_managed field.
	groupDescIsManaged := groupFields[2].Descriptor()
	// group.DefaultIsManaged holds the default value on creation for the is_managed field.
	group.DefaultIsManaged = groupDescIsManaged.Default.(bool)
	// groupDescDisplayName is the schema descriptor for display_name field.
	groupDescDisplayName := groupFields[5].Descriptor()
	// group.DefaultDisplayName holds the default value on creation for the display_name field.
	group.DefaultDisplayName = groupDescDisplayName.Default.(string)
	// group.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	group.DisplayNameValidator = groupDescDisplayName.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupMixinFields2[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() string)
	grouphistoryInters := schema.GroupHistory{}.Interceptors()
	grouphistory.Interceptors[0] = grouphistoryInters[0]
	grouphistoryFields := schema.GroupHistory{}.Fields()
	_ = grouphistoryFields
	// grouphistoryDescHistoryTime is the schema descriptor for history_time field.
	grouphistoryDescHistoryTime := grouphistoryFields[0].Descriptor()
	// grouphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	grouphistory.DefaultHistoryTime = grouphistoryDescHistoryTime.Default.(func() time.Time)
	// grouphistoryDescCreatedAt is the schema descriptor for created_at field.
	grouphistoryDescCreatedAt := grouphistoryFields[3].Descriptor()
	// grouphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	grouphistory.DefaultCreatedAt = grouphistoryDescCreatedAt.Default.(func() time.Time)
	// grouphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	grouphistoryDescUpdatedAt := grouphistoryFields[4].Descriptor()
	// grouphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	grouphistory.DefaultUpdatedAt = grouphistoryDescUpdatedAt.Default.(func() time.Time)
	// grouphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	grouphistory.UpdateDefaultUpdatedAt = grouphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// grouphistoryDescTags is the schema descriptor for tags field.
	grouphistoryDescTags := grouphistoryFields[10].Descriptor()
	// grouphistory.DefaultTags holds the default value on creation for the tags field.
	grouphistory.DefaultTags = grouphistoryDescTags.Default.([]string)
	// grouphistoryDescIsManaged is the schema descriptor for is_managed field.
	grouphistoryDescIsManaged := grouphistoryFields[14].Descriptor()
	// grouphistory.DefaultIsManaged holds the default value on creation for the is_managed field.
	grouphistory.DefaultIsManaged = grouphistoryDescIsManaged.Default.(bool)
	// grouphistoryDescDisplayName is the schema descriptor for display_name field.
	grouphistoryDescDisplayName := grouphistoryFields[17].Descriptor()
	// grouphistory.DefaultDisplayName holds the default value on creation for the display_name field.
	grouphistory.DefaultDisplayName = grouphistoryDescDisplayName.Default.(string)
	// grouphistoryDescID is the schema descriptor for id field.
	grouphistoryDescID := grouphistoryFields[9].Descriptor()
	// grouphistory.DefaultID holds the default value on creation for the id field.
	grouphistory.DefaultID = grouphistoryDescID.Default.(func() string)
	groupmembershipMixin := schema.GroupMembership{}.Mixin()
	groupmembership.Policy = privacy.NewPolicies(schema.GroupMembership{})
	groupmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupmembershipMixinHooks0 := groupmembershipMixin[0].Hooks()
	groupmembershipMixinHooks2 := groupmembershipMixin[2].Hooks()
	groupmembershipHooks := schema.GroupMembership{}.Hooks()

	groupmembership.Hooks[1] = groupmembershipMixinHooks0[0]

	groupmembership.Hooks[2] = groupmembershipMixinHooks2[0]

	groupmembership.Hooks[3] = groupmembershipHooks[0]
	groupmembershipMixinInters2 := groupmembershipMixin[2].Interceptors()
	groupmembership.Interceptors[0] = groupmembershipMixinInters2[0]
	groupmembershipMixinFields0 := groupmembershipMixin[0].Fields()
	_ = groupmembershipMixinFields0
	groupmembershipMixinFields1 := groupmembershipMixin[1].Fields()
	_ = groupmembershipMixinFields1
	groupmembershipFields := schema.GroupMembership{}.Fields()
	_ = groupmembershipFields
	// groupmembershipDescCreatedAt is the schema descriptor for created_at field.
	groupmembershipDescCreatedAt := groupmembershipMixinFields0[0].Descriptor()
	// groupmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembership.DefaultCreatedAt = groupmembershipDescCreatedAt.Default.(func() time.Time)
	// groupmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershipDescUpdatedAt := groupmembershipMixinFields0[1].Descriptor()
	// groupmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembership.DefaultUpdatedAt = groupmembershipDescUpdatedAt.Default.(func() time.Time)
	// groupmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupmembership.UpdateDefaultUpdatedAt = groupmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupmembershipDescID is the schema descriptor for id field.
	groupmembershipDescID := groupmembershipMixinFields1[0].Descriptor()
	// groupmembership.DefaultID holds the default value on creation for the id field.
	groupmembership.DefaultID = groupmembershipDescID.Default.(func() string)
	groupmembershiphistoryInters := schema.GroupMembershipHistory{}.Interceptors()
	groupmembershiphistory.Interceptors[0] = groupmembershiphistoryInters[0]
	groupmembershiphistoryFields := schema.GroupMembershipHistory{}.Fields()
	_ = groupmembershiphistoryFields
	// groupmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	groupmembershiphistoryDescHistoryTime := groupmembershiphistoryFields[0].Descriptor()
	// groupmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupmembershiphistory.DefaultHistoryTime = groupmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// groupmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	groupmembershiphistoryDescCreatedAt := groupmembershiphistoryFields[3].Descriptor()
	// groupmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembershiphistory.DefaultCreatedAt = groupmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// groupmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershiphistoryDescUpdatedAt := groupmembershiphistoryFields[4].Descriptor()
	// groupmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembershiphistory.DefaultUpdatedAt = groupmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// groupmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupmembershiphistory.UpdateDefaultUpdatedAt = groupmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupmembershiphistoryDescID is the schema descriptor for id field.
	groupmembershiphistoryDescID := groupmembershiphistoryFields[7].Descriptor()
	// groupmembershiphistory.DefaultID holds the default value on creation for the id field.
	groupmembershiphistory.DefaultID = groupmembershiphistoryDescID.Default.(func() string)
	groupsettingMixin := schema.GroupSetting{}.Mixin()
	groupsetting.Policy = privacy.NewPolicies(schema.GroupSetting{})
	groupsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupsettingMixinHooks0 := groupsettingMixin[0].Hooks()
	groupsettingMixinHooks3 := groupsettingMixin[3].Hooks()

	groupsetting.Hooks[1] = groupsettingMixinHooks0[0]

	groupsetting.Hooks[2] = groupsettingMixinHooks3[0]
	groupsettingMixinInters3 := groupsettingMixin[3].Interceptors()
	groupsetting.Interceptors[0] = groupsettingMixinInters3[0]
	groupsettingMixinFields0 := groupsettingMixin[0].Fields()
	_ = groupsettingMixinFields0
	groupsettingMixinFields1 := groupsettingMixin[1].Fields()
	_ = groupsettingMixinFields1
	groupsettingMixinFields2 := groupsettingMixin[2].Fields()
	_ = groupsettingMixinFields2
	groupsettingFields := schema.GroupSetting{}.Fields()
	_ = groupsettingFields
	// groupsettingDescCreatedAt is the schema descriptor for created_at field.
	groupsettingDescCreatedAt := groupsettingMixinFields0[0].Descriptor()
	// groupsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsetting.DefaultCreatedAt = groupsettingDescCreatedAt.Default.(func() time.Time)
	// groupsettingDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettingDescUpdatedAt := groupsettingMixinFields0[1].Descriptor()
	// groupsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsetting.DefaultUpdatedAt = groupsettingDescUpdatedAt.Default.(func() time.Time)
	// groupsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsetting.UpdateDefaultUpdatedAt = groupsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettingDescTags is the schema descriptor for tags field.
	groupsettingDescTags := groupsettingMixinFields2[0].Descriptor()
	// groupsetting.DefaultTags holds the default value on creation for the tags field.
	groupsetting.DefaultTags = groupsettingDescTags.Default.([]string)
	// groupsettingDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettingDescSyncToSlack := groupsettingFields[2].Descriptor()
	// groupsetting.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsetting.DefaultSyncToSlack = groupsettingDescSyncToSlack.Default.(bool)
	// groupsettingDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettingDescSyncToGithub := groupsettingFields[3].Descriptor()
	// groupsetting.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsetting.DefaultSyncToGithub = groupsettingDescSyncToGithub.Default.(bool)
	// groupsettingDescID is the schema descriptor for id field.
	groupsettingDescID := groupsettingMixinFields1[0].Descriptor()
	// groupsetting.DefaultID holds the default value on creation for the id field.
	groupsetting.DefaultID = groupsettingDescID.Default.(func() string)
	groupsettinghistoryInters := schema.GroupSettingHistory{}.Interceptors()
	groupsettinghistory.Interceptors[0] = groupsettinghistoryInters[0]
	groupsettinghistoryFields := schema.GroupSettingHistory{}.Fields()
	_ = groupsettinghistoryFields
	// groupsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	groupsettinghistoryDescHistoryTime := groupsettinghistoryFields[0].Descriptor()
	// groupsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupsettinghistory.DefaultHistoryTime = groupsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// groupsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	groupsettinghistoryDescCreatedAt := groupsettinghistoryFields[3].Descriptor()
	// groupsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsettinghistory.DefaultCreatedAt = groupsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// groupsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettinghistoryDescUpdatedAt := groupsettinghistoryFields[4].Descriptor()
	// groupsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsettinghistory.DefaultUpdatedAt = groupsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// groupsettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsettinghistory.UpdateDefaultUpdatedAt = groupsettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettinghistoryDescTags is the schema descriptor for tags field.
	groupsettinghistoryDescTags := groupsettinghistoryFields[8].Descriptor()
	// groupsettinghistory.DefaultTags holds the default value on creation for the tags field.
	groupsettinghistory.DefaultTags = groupsettinghistoryDescTags.Default.([]string)
	// groupsettinghistoryDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettinghistoryDescSyncToSlack := groupsettinghistoryFields[13].Descriptor()
	// groupsettinghistory.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsettinghistory.DefaultSyncToSlack = groupsettinghistoryDescSyncToSlack.Default.(bool)
	// groupsettinghistoryDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettinghistoryDescSyncToGithub := groupsettinghistoryFields[14].Descriptor()
	// groupsettinghistory.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsettinghistory.DefaultSyncToGithub = groupsettinghistoryDescSyncToGithub.Default.(bool)
	// groupsettinghistoryDescID is the schema descriptor for id field.
	groupsettinghistoryDescID := groupsettinghistoryFields[7].Descriptor()
	// groupsettinghistory.DefaultID holds the default value on creation for the id field.
	groupsettinghistory.DefaultID = groupsettinghistoryDescID.Default.(func() string)
	hushMixin := schema.Hush{}.Mixin()
	hushMixinHooks0 := hushMixin[0].Hooks()
	hushMixinHooks2 := hushMixin[2].Hooks()
	hushHooks := schema.Hush{}.Hooks()
	hush.Hooks[0] = hushMixinHooks0[0]
	hush.Hooks[1] = hushMixinHooks2[0]
	hush.Hooks[2] = hushHooks[0]
	hushMixinInters2 := hushMixin[2].Interceptors()
	hushInters := schema.Hush{}.Interceptors()
	hush.Interceptors[0] = hushMixinInters2[0]
	hush.Interceptors[1] = hushInters[0]
	hushMixinFields0 := hushMixin[0].Fields()
	_ = hushMixinFields0
	hushMixinFields1 := hushMixin[1].Fields()
	_ = hushMixinFields1
	hushFields := schema.Hush{}.Fields()
	_ = hushFields
	// hushDescCreatedAt is the schema descriptor for created_at field.
	hushDescCreatedAt := hushMixinFields0[0].Descriptor()
	// hush.DefaultCreatedAt holds the default value on creation for the created_at field.
	hush.DefaultCreatedAt = hushDescCreatedAt.Default.(func() time.Time)
	// hushDescUpdatedAt is the schema descriptor for updated_at field.
	hushDescUpdatedAt := hushMixinFields0[1].Descriptor()
	// hush.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hush.DefaultUpdatedAt = hushDescUpdatedAt.Default.(func() time.Time)
	// hush.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	hush.UpdateDefaultUpdatedAt = hushDescUpdatedAt.UpdateDefault.(func() time.Time)
	// hushDescName is the schema descriptor for name field.
	hushDescName := hushFields[0].Descriptor()
	// hush.NameValidator is a validator for the "name" field. It is called by the builders before save.
	hush.NameValidator = hushDescName.Validators[0].(func(string) error)
	// hushDescID is the schema descriptor for id field.
	hushDescID := hushMixinFields1[0].Descriptor()
	// hush.DefaultID holds the default value on creation for the id field.
	hush.DefaultID = hushDescID.Default.(func() string)
	hushhistoryFields := schema.HushHistory{}.Fields()
	_ = hushhistoryFields
	// hushhistoryDescHistoryTime is the schema descriptor for history_time field.
	hushhistoryDescHistoryTime := hushhistoryFields[0].Descriptor()
	// hushhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	hushhistory.DefaultHistoryTime = hushhistoryDescHistoryTime.Default.(func() time.Time)
	// hushhistoryDescCreatedAt is the schema descriptor for created_at field.
	hushhistoryDescCreatedAt := hushhistoryFields[3].Descriptor()
	// hushhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	hushhistory.DefaultCreatedAt = hushhistoryDescCreatedAt.Default.(func() time.Time)
	// hushhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	hushhistoryDescUpdatedAt := hushhistoryFields[4].Descriptor()
	// hushhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hushhistory.DefaultUpdatedAt = hushhistoryDescUpdatedAt.Default.(func() time.Time)
	// hushhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	hushhistory.UpdateDefaultUpdatedAt = hushhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// hushhistoryDescID is the schema descriptor for id field.
	hushhistoryDescID := hushhistoryFields[7].Descriptor()
	// hushhistory.DefaultID holds the default value on creation for the id field.
	hushhistory.DefaultID = hushhistoryDescID.Default.(func() string)
	integrationMixin := schema.Integration{}.Mixin()
	integration.Policy = privacy.NewPolicies(schema.Integration{})
	integration.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := integration.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	integrationMixinHooks0 := integrationMixin[0].Hooks()
	integrationMixinHooks3 := integrationMixin[3].Hooks()
	integrationMixinHooks4 := integrationMixin[4].Hooks()

	integration.Hooks[1] = integrationMixinHooks0[0]

	integration.Hooks[2] = integrationMixinHooks3[0]

	integration.Hooks[3] = integrationMixinHooks4[0]
	integrationMixinInters3 := integrationMixin[3].Interceptors()
	integrationMixinInters4 := integrationMixin[4].Interceptors()
	integration.Interceptors[0] = integrationMixinInters3[0]
	integration.Interceptors[1] = integrationMixinInters4[0]
	integrationMixinFields0 := integrationMixin[0].Fields()
	_ = integrationMixinFields0
	integrationMixinFields1 := integrationMixin[1].Fields()
	_ = integrationMixinFields1
	integrationMixinFields2 := integrationMixin[2].Fields()
	_ = integrationMixinFields2
	integrationMixinFields4 := integrationMixin[4].Fields()
	_ = integrationMixinFields4
	integrationFields := schema.Integration{}.Fields()
	_ = integrationFields
	// integrationDescCreatedAt is the schema descriptor for created_at field.
	integrationDescCreatedAt := integrationMixinFields0[0].Descriptor()
	// integration.DefaultCreatedAt holds the default value on creation for the created_at field.
	integration.DefaultCreatedAt = integrationDescCreatedAt.Default.(func() time.Time)
	// integrationDescUpdatedAt is the schema descriptor for updated_at field.
	integrationDescUpdatedAt := integrationMixinFields0[1].Descriptor()
	// integration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integration.DefaultUpdatedAt = integrationDescUpdatedAt.Default.(func() time.Time)
	// integration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integration.UpdateDefaultUpdatedAt = integrationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationDescTags is the schema descriptor for tags field.
	integrationDescTags := integrationMixinFields2[0].Descriptor()
	// integration.DefaultTags holds the default value on creation for the tags field.
	integration.DefaultTags = integrationDescTags.Default.([]string)
	// integrationDescOwnerID is the schema descriptor for owner_id field.
	integrationDescOwnerID := integrationMixinFields4[0].Descriptor()
	// integration.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	integration.OwnerIDValidator = integrationDescOwnerID.Validators[0].(func(string) error)
	// integrationDescName is the schema descriptor for name field.
	integrationDescName := integrationFields[0].Descriptor()
	// integration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	integration.NameValidator = integrationDescName.Validators[0].(func(string) error)
	// integrationDescID is the schema descriptor for id field.
	integrationDescID := integrationMixinFields1[0].Descriptor()
	// integration.DefaultID holds the default value on creation for the id field.
	integration.DefaultID = integrationDescID.Default.(func() string)
	integrationhistoryInters := schema.IntegrationHistory{}.Interceptors()
	integrationhistory.Interceptors[0] = integrationhistoryInters[0]
	integrationhistoryFields := schema.IntegrationHistory{}.Fields()
	_ = integrationhistoryFields
	// integrationhistoryDescHistoryTime is the schema descriptor for history_time field.
	integrationhistoryDescHistoryTime := integrationhistoryFields[0].Descriptor()
	// integrationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	integrationhistory.DefaultHistoryTime = integrationhistoryDescHistoryTime.Default.(func() time.Time)
	// integrationhistoryDescCreatedAt is the schema descriptor for created_at field.
	integrationhistoryDescCreatedAt := integrationhistoryFields[3].Descriptor()
	// integrationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	integrationhistory.DefaultCreatedAt = integrationhistoryDescCreatedAt.Default.(func() time.Time)
	// integrationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	integrationhistoryDescUpdatedAt := integrationhistoryFields[4].Descriptor()
	// integrationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integrationhistory.DefaultUpdatedAt = integrationhistoryDescUpdatedAt.Default.(func() time.Time)
	// integrationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integrationhistory.UpdateDefaultUpdatedAt = integrationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationhistoryDescTags is the schema descriptor for tags field.
	integrationhistoryDescTags := integrationhistoryFields[8].Descriptor()
	// integrationhistory.DefaultTags holds the default value on creation for the tags field.
	integrationhistory.DefaultTags = integrationhistoryDescTags.Default.([]string)
	// integrationhistoryDescID is the schema descriptor for id field.
	integrationhistoryDescID := integrationhistoryFields[7].Descriptor()
	// integrationhistory.DefaultID holds the default value on creation for the id field.
	integrationhistory.DefaultID = integrationhistoryDescID.Default.(func() string)
	internalpolicyMixin := schema.InternalPolicy{}.Mixin()
	internalpolicy.Policy = privacy.NewPolicies(schema.InternalPolicy{})
	internalpolicy.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := internalpolicy.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	internalpolicyMixinHooks0 := internalpolicyMixin[0].Hooks()
	internalpolicyMixinHooks1 := internalpolicyMixin[1].Hooks()
	internalpolicyMixinHooks2 := internalpolicyMixin[2].Hooks()
	internalpolicyMixinHooks4 := internalpolicyMixin[4].Hooks()
	internalpolicyMixinHooks5 := internalpolicyMixin[5].Hooks()
	internalpolicyHooks := schema.InternalPolicy{}.Hooks()

	internalpolicy.Hooks[1] = internalpolicyMixinHooks0[0]

	internalpolicy.Hooks[2] = internalpolicyMixinHooks1[0]

	internalpolicy.Hooks[3] = internalpolicyMixinHooks2[0]

	internalpolicy.Hooks[4] = internalpolicyMixinHooks4[0]

	internalpolicy.Hooks[5] = internalpolicyMixinHooks5[0]

	internalpolicy.Hooks[6] = internalpolicyMixinHooks5[1]

	internalpolicy.Hooks[7] = internalpolicyHooks[0]
	internalpolicyMixinInters1 := internalpolicyMixin[1].Interceptors()
	internalpolicyMixinInters4 := internalpolicyMixin[4].Interceptors()
	internalpolicy.Interceptors[0] = internalpolicyMixinInters1[0]
	internalpolicy.Interceptors[1] = internalpolicyMixinInters4[0]
	internalpolicyMixinFields0 := internalpolicyMixin[0].Fields()
	_ = internalpolicyMixinFields0
	internalpolicyMixinFields2 := internalpolicyMixin[2].Fields()
	_ = internalpolicyMixinFields2
	internalpolicyMixinFields3 := internalpolicyMixin[3].Fields()
	_ = internalpolicyMixinFields3
	internalpolicyMixinFields4 := internalpolicyMixin[4].Fields()
	_ = internalpolicyMixinFields4
	internalpolicyFields := schema.InternalPolicy{}.Fields()
	_ = internalpolicyFields
	// internalpolicyDescCreatedAt is the schema descriptor for created_at field.
	internalpolicyDescCreatedAt := internalpolicyMixinFields0[0].Descriptor()
	// internalpolicy.DefaultCreatedAt holds the default value on creation for the created_at field.
	internalpolicy.DefaultCreatedAt = internalpolicyDescCreatedAt.Default.(func() time.Time)
	// internalpolicyDescUpdatedAt is the schema descriptor for updated_at field.
	internalpolicyDescUpdatedAt := internalpolicyMixinFields0[1].Descriptor()
	// internalpolicy.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	internalpolicy.DefaultUpdatedAt = internalpolicyDescUpdatedAt.Default.(func() time.Time)
	// internalpolicy.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	internalpolicy.UpdateDefaultUpdatedAt = internalpolicyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// internalpolicyDescDisplayID is the schema descriptor for display_id field.
	internalpolicyDescDisplayID := internalpolicyMixinFields2[1].Descriptor()
	// internalpolicy.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	internalpolicy.DisplayIDValidator = internalpolicyDescDisplayID.Validators[0].(func(string) error)
	// internalpolicyDescTags is the schema descriptor for tags field.
	internalpolicyDescTags := internalpolicyMixinFields3[0].Descriptor()
	// internalpolicy.DefaultTags holds the default value on creation for the tags field.
	internalpolicy.DefaultTags = internalpolicyDescTags.Default.([]string)
	// internalpolicyDescOwnerID is the schema descriptor for owner_id field.
	internalpolicyDescOwnerID := internalpolicyMixinFields4[0].Descriptor()
	// internalpolicy.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	internalpolicy.OwnerIDValidator = internalpolicyDescOwnerID.Validators[0].(func(string) error)
	// internalpolicyDescName is the schema descriptor for name field.
	internalpolicyDescName := internalpolicyFields[0].Descriptor()
	// internalpolicy.NameValidator is a validator for the "name" field. It is called by the builders before save.
	internalpolicy.NameValidator = internalpolicyDescName.Validators[0].(func(string) error)
	// internalpolicyDescReviewDue is the schema descriptor for review_due field.
	internalpolicyDescReviewDue := internalpolicyFields[3].Descriptor()
	// internalpolicy.DefaultReviewDue holds the default value on creation for the review_due field.
	internalpolicy.DefaultReviewDue = internalpolicyDescReviewDue.Default.(time.Time)
	// internalpolicyDescID is the schema descriptor for id field.
	internalpolicyDescID := internalpolicyMixinFields2[0].Descriptor()
	// internalpolicy.DefaultID holds the default value on creation for the id field.
	internalpolicy.DefaultID = internalpolicyDescID.Default.(func() string)
	internalpolicyhistoryInters := schema.InternalPolicyHistory{}.Interceptors()
	internalpolicyhistory.Interceptors[0] = internalpolicyhistoryInters[0]
	internalpolicyhistoryFields := schema.InternalPolicyHistory{}.Fields()
	_ = internalpolicyhistoryFields
	// internalpolicyhistoryDescHistoryTime is the schema descriptor for history_time field.
	internalpolicyhistoryDescHistoryTime := internalpolicyhistoryFields[0].Descriptor()
	// internalpolicyhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	internalpolicyhistory.DefaultHistoryTime = internalpolicyhistoryDescHistoryTime.Default.(func() time.Time)
	// internalpolicyhistoryDescCreatedAt is the schema descriptor for created_at field.
	internalpolicyhistoryDescCreatedAt := internalpolicyhistoryFields[3].Descriptor()
	// internalpolicyhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	internalpolicyhistory.DefaultCreatedAt = internalpolicyhistoryDescCreatedAt.Default.(func() time.Time)
	// internalpolicyhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	internalpolicyhistoryDescUpdatedAt := internalpolicyhistoryFields[4].Descriptor()
	// internalpolicyhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	internalpolicyhistory.DefaultUpdatedAt = internalpolicyhistoryDescUpdatedAt.Default.(func() time.Time)
	// internalpolicyhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	internalpolicyhistory.UpdateDefaultUpdatedAt = internalpolicyhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// internalpolicyhistoryDescTags is the schema descriptor for tags field.
	internalpolicyhistoryDescTags := internalpolicyhistoryFields[11].Descriptor()
	// internalpolicyhistory.DefaultTags holds the default value on creation for the tags field.
	internalpolicyhistory.DefaultTags = internalpolicyhistoryDescTags.Default.([]string)
	// internalpolicyhistoryDescReviewDue is the schema descriptor for review_due field.
	internalpolicyhistoryDescReviewDue := internalpolicyhistoryFields[16].Descriptor()
	// internalpolicyhistory.DefaultReviewDue holds the default value on creation for the review_due field.
	internalpolicyhistory.DefaultReviewDue = internalpolicyhistoryDescReviewDue.Default.(time.Time)
	// internalpolicyhistoryDescID is the schema descriptor for id field.
	internalpolicyhistoryDescID := internalpolicyhistoryFields[9].Descriptor()
	// internalpolicyhistory.DefaultID holds the default value on creation for the id field.
	internalpolicyhistory.DefaultID = internalpolicyhistoryDescID.Default.(func() string)
	inviteMixin := schema.Invite{}.Mixin()
	invite.Policy = privacy.NewPolicies(schema.Invite{})
	invite.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := invite.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	inviteMixinHooks0 := inviteMixin[0].Hooks()
	inviteMixinHooks2 := inviteMixin[2].Hooks()
	inviteMixinHooks3 := inviteMixin[3].Hooks()
	inviteHooks := schema.Invite{}.Hooks()

	invite.Hooks[1] = inviteMixinHooks0[0]

	invite.Hooks[2] = inviteMixinHooks2[0]

	invite.Hooks[3] = inviteMixinHooks3[0]

	invite.Hooks[4] = inviteHooks[0]

	invite.Hooks[5] = inviteHooks[1]
	inviteMixinInters2 := inviteMixin[2].Interceptors()
	inviteMixinInters3 := inviteMixin[3].Interceptors()
	invite.Interceptors[0] = inviteMixinInters2[0]
	invite.Interceptors[1] = inviteMixinInters3[0]
	inviteMixinFields0 := inviteMixin[0].Fields()
	_ = inviteMixinFields0
	inviteMixinFields1 := inviteMixin[1].Fields()
	_ = inviteMixinFields1
	inviteMixinFields3 := inviteMixin[3].Fields()
	_ = inviteMixinFields3
	inviteFields := schema.Invite{}.Fields()
	_ = inviteFields
	// inviteDescCreatedAt is the schema descriptor for created_at field.
	inviteDescCreatedAt := inviteMixinFields0[0].Descriptor()
	// invite.DefaultCreatedAt holds the default value on creation for the created_at field.
	invite.DefaultCreatedAt = inviteDescCreatedAt.Default.(func() time.Time)
	// inviteDescUpdatedAt is the schema descriptor for updated_at field.
	inviteDescUpdatedAt := inviteMixinFields0[1].Descriptor()
	// invite.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invite.DefaultUpdatedAt = inviteDescUpdatedAt.Default.(func() time.Time)
	// invite.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invite.UpdateDefaultUpdatedAt = inviteDescUpdatedAt.UpdateDefault.(func() time.Time)
	// inviteDescOwnerID is the schema descriptor for owner_id field.
	inviteDescOwnerID := inviteMixinFields3[0].Descriptor()
	// invite.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	invite.OwnerIDValidator = inviteDescOwnerID.Validators[0].(func(string) error)
	// inviteDescToken is the schema descriptor for token field.
	inviteDescToken := inviteFields[0].Descriptor()
	// invite.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	invite.TokenValidator = inviteDescToken.Validators[0].(func(string) error)
	// inviteDescExpires is the schema descriptor for expires field.
	inviteDescExpires := inviteFields[1].Descriptor()
	// invite.DefaultExpires holds the default value on creation for the expires field.
	invite.DefaultExpires = inviteDescExpires.Default.(func() time.Time)
	// inviteDescRecipient is the schema descriptor for recipient field.
	inviteDescRecipient := inviteFields[2].Descriptor()
	// invite.RecipientValidator is a validator for the "recipient" field. It is called by the builders before save.
	invite.RecipientValidator = func() func(string) error {
		validators := inviteDescRecipient.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(recipient string) error {
			for _, fn := range fns {
				if err := fn(recipient); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// inviteDescSendAttempts is the schema descriptor for send_attempts field.
	inviteDescSendAttempts := inviteFields[5].Descriptor()
	// invite.DefaultSendAttempts holds the default value on creation for the send_attempts field.
	invite.DefaultSendAttempts = inviteDescSendAttempts.Default.(int)
	// inviteDescRequestorID is the schema descriptor for requestor_id field.
	inviteDescRequestorID := inviteFields[6].Descriptor()
	// invite.RequestorIDValidator is a validator for the "requestor_id" field. It is called by the builders before save.
	invite.RequestorIDValidator = inviteDescRequestorID.Validators[0].(func(string) error)
	// inviteDescSecret is the schema descriptor for secret field.
	inviteDescSecret := inviteFields[7].Descriptor()
	// invite.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	invite.SecretValidator = inviteDescSecret.Validators[0].(func([]byte) error)
	// inviteDescID is the schema descriptor for id field.
	inviteDescID := inviteMixinFields1[0].Descriptor()
	// invite.DefaultID holds the default value on creation for the id field.
	invite.DefaultID = inviteDescID.Default.(func() string)
	narrativeMixin := schema.Narrative{}.Mixin()
	narrative.Policy = privacy.NewPolicies(schema.Narrative{})
	narrative.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := narrative.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	narrativeMixinHooks0 := narrativeMixin[0].Hooks()
	narrativeMixinHooks1 := narrativeMixin[1].Hooks()
	narrativeMixinHooks2 := narrativeMixin[2].Hooks()
	narrativeMixinHooks4 := narrativeMixin[4].Hooks()
	narrativeMixinHooks5 := narrativeMixin[5].Hooks()

	narrative.Hooks[1] = narrativeMixinHooks0[0]

	narrative.Hooks[2] = narrativeMixinHooks1[0]

	narrative.Hooks[3] = narrativeMixinHooks2[0]

	narrative.Hooks[4] = narrativeMixinHooks4[0]

	narrative.Hooks[5] = narrativeMixinHooks4[1]

	narrative.Hooks[6] = narrativeMixinHooks4[2]

	narrative.Hooks[7] = narrativeMixinHooks5[0]

	narrative.Hooks[8] = narrativeMixinHooks5[1]

	narrative.Hooks[9] = narrativeMixinHooks5[2]
	narrativeMixinInters1 := narrativeMixin[1].Interceptors()
	narrativeMixinInters4 := narrativeMixin[4].Interceptors()
	narrative.Interceptors[0] = narrativeMixinInters1[0]
	narrative.Interceptors[1] = narrativeMixinInters4[0]
	narrativeMixinFields0 := narrativeMixin[0].Fields()
	_ = narrativeMixinFields0
	narrativeMixinFields2 := narrativeMixin[2].Fields()
	_ = narrativeMixinFields2
	narrativeMixinFields3 := narrativeMixin[3].Fields()
	_ = narrativeMixinFields3
	narrativeMixinFields4 := narrativeMixin[4].Fields()
	_ = narrativeMixinFields4
	narrativeFields := schema.Narrative{}.Fields()
	_ = narrativeFields
	// narrativeDescCreatedAt is the schema descriptor for created_at field.
	narrativeDescCreatedAt := narrativeMixinFields0[0].Descriptor()
	// narrative.DefaultCreatedAt holds the default value on creation for the created_at field.
	narrative.DefaultCreatedAt = narrativeDescCreatedAt.Default.(func() time.Time)
	// narrativeDescUpdatedAt is the schema descriptor for updated_at field.
	narrativeDescUpdatedAt := narrativeMixinFields0[1].Descriptor()
	// narrative.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	narrative.DefaultUpdatedAt = narrativeDescUpdatedAt.Default.(func() time.Time)
	// narrative.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	narrative.UpdateDefaultUpdatedAt = narrativeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// narrativeDescDisplayID is the schema descriptor for display_id field.
	narrativeDescDisplayID := narrativeMixinFields2[1].Descriptor()
	// narrative.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	narrative.DisplayIDValidator = narrativeDescDisplayID.Validators[0].(func(string) error)
	// narrativeDescTags is the schema descriptor for tags field.
	narrativeDescTags := narrativeMixinFields3[0].Descriptor()
	// narrative.DefaultTags holds the default value on creation for the tags field.
	narrative.DefaultTags = narrativeDescTags.Default.([]string)
	// narrativeDescOwnerID is the schema descriptor for owner_id field.
	narrativeDescOwnerID := narrativeMixinFields4[0].Descriptor()
	// narrative.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	narrative.OwnerIDValidator = narrativeDescOwnerID.Validators[0].(func(string) error)
	// narrativeDescName is the schema descriptor for name field.
	narrativeDescName := narrativeFields[0].Descriptor()
	// narrative.NameValidator is a validator for the "name" field. It is called by the builders before save.
	narrative.NameValidator = narrativeDescName.Validators[0].(func(string) error)
	// narrativeDescID is the schema descriptor for id field.
	narrativeDescID := narrativeMixinFields2[0].Descriptor()
	// narrative.DefaultID holds the default value on creation for the id field.
	narrative.DefaultID = narrativeDescID.Default.(func() string)
	narrativehistoryInters := schema.NarrativeHistory{}.Interceptors()
	narrativehistory.Interceptors[0] = narrativehistoryInters[0]
	narrativehistoryFields := schema.NarrativeHistory{}.Fields()
	_ = narrativehistoryFields
	// narrativehistoryDescHistoryTime is the schema descriptor for history_time field.
	narrativehistoryDescHistoryTime := narrativehistoryFields[0].Descriptor()
	// narrativehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	narrativehistory.DefaultHistoryTime = narrativehistoryDescHistoryTime.Default.(func() time.Time)
	// narrativehistoryDescCreatedAt is the schema descriptor for created_at field.
	narrativehistoryDescCreatedAt := narrativehistoryFields[3].Descriptor()
	// narrativehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	narrativehistory.DefaultCreatedAt = narrativehistoryDescCreatedAt.Default.(func() time.Time)
	// narrativehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	narrativehistoryDescUpdatedAt := narrativehistoryFields[4].Descriptor()
	// narrativehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	narrativehistory.DefaultUpdatedAt = narrativehistoryDescUpdatedAt.Default.(func() time.Time)
	// narrativehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	narrativehistory.UpdateDefaultUpdatedAt = narrativehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// narrativehistoryDescTags is the schema descriptor for tags field.
	narrativehistoryDescTags := narrativehistoryFields[11].Descriptor()
	// narrativehistory.DefaultTags holds the default value on creation for the tags field.
	narrativehistory.DefaultTags = narrativehistoryDescTags.Default.([]string)
	// narrativehistoryDescID is the schema descriptor for id field.
	narrativehistoryDescID := narrativehistoryFields[9].Descriptor()
	// narrativehistory.DefaultID holds the default value on creation for the id field.
	narrativehistory.DefaultID = narrativehistoryDescID.Default.(func() string)
	noteMixin := schema.Note{}.Mixin()
	note.Policy = privacy.NewPolicies(schema.Note{})
	note.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := note.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	noteMixinHooks0 := noteMixin[0].Hooks()
	noteMixinHooks1 := noteMixin[1].Hooks()
	noteMixinHooks2 := noteMixin[2].Hooks()
	noteMixinHooks4 := noteMixin[4].Hooks()

	note.Hooks[1] = noteMixinHooks0[0]

	note.Hooks[2] = noteMixinHooks1[0]

	note.Hooks[3] = noteMixinHooks2[0]

	note.Hooks[4] = noteMixinHooks4[0]
	noteMixinInters2 := noteMixin[2].Interceptors()
	noteMixinInters4 := noteMixin[4].Interceptors()
	note.Interceptors[0] = noteMixinInters2[0]
	note.Interceptors[1] = noteMixinInters4[0]
	noteMixinFields0 := noteMixin[0].Fields()
	_ = noteMixinFields0
	noteMixinFields1 := noteMixin[1].Fields()
	_ = noteMixinFields1
	noteMixinFields3 := noteMixin[3].Fields()
	_ = noteMixinFields3
	noteMixinFields4 := noteMixin[4].Fields()
	_ = noteMixinFields4
	noteFields := schema.Note{}.Fields()
	_ = noteFields
	// noteDescCreatedAt is the schema descriptor for created_at field.
	noteDescCreatedAt := noteMixinFields0[0].Descriptor()
	// note.DefaultCreatedAt holds the default value on creation for the created_at field.
	note.DefaultCreatedAt = noteDescCreatedAt.Default.(func() time.Time)
	// noteDescUpdatedAt is the schema descriptor for updated_at field.
	noteDescUpdatedAt := noteMixinFields0[1].Descriptor()
	// note.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	note.DefaultUpdatedAt = noteDescUpdatedAt.Default.(func() time.Time)
	// note.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	note.UpdateDefaultUpdatedAt = noteDescUpdatedAt.UpdateDefault.(func() time.Time)
	// noteDescDisplayID is the schema descriptor for display_id field.
	noteDescDisplayID := noteMixinFields1[1].Descriptor()
	// note.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	note.DisplayIDValidator = noteDescDisplayID.Validators[0].(func(string) error)
	// noteDescTags is the schema descriptor for tags field.
	noteDescTags := noteMixinFields3[0].Descriptor()
	// note.DefaultTags holds the default value on creation for the tags field.
	note.DefaultTags = noteDescTags.Default.([]string)
	// noteDescOwnerID is the schema descriptor for owner_id field.
	noteDescOwnerID := noteMixinFields4[0].Descriptor()
	// note.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	note.OwnerIDValidator = noteDescOwnerID.Validators[0].(func(string) error)
	// noteDescText is the schema descriptor for text field.
	noteDescText := noteFields[0].Descriptor()
	// note.TextValidator is a validator for the "text" field. It is called by the builders before save.
	note.TextValidator = noteDescText.Validators[0].(func(string) error)
	// noteDescID is the schema descriptor for id field.
	noteDescID := noteMixinFields1[0].Descriptor()
	// note.DefaultID holds the default value on creation for the id field.
	note.DefaultID = noteDescID.Default.(func() string)
	notehistoryInters := schema.NoteHistory{}.Interceptors()
	notehistory.Interceptors[0] = notehistoryInters[0]
	notehistoryFields := schema.NoteHistory{}.Fields()
	_ = notehistoryFields
	// notehistoryDescHistoryTime is the schema descriptor for history_time field.
	notehistoryDescHistoryTime := notehistoryFields[0].Descriptor()
	// notehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	notehistory.DefaultHistoryTime = notehistoryDescHistoryTime.Default.(func() time.Time)
	// notehistoryDescCreatedAt is the schema descriptor for created_at field.
	notehistoryDescCreatedAt := notehistoryFields[3].Descriptor()
	// notehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	notehistory.DefaultCreatedAt = notehistoryDescCreatedAt.Default.(func() time.Time)
	// notehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	notehistoryDescUpdatedAt := notehistoryFields[4].Descriptor()
	// notehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	notehistory.DefaultUpdatedAt = notehistoryDescUpdatedAt.Default.(func() time.Time)
	// notehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	notehistory.UpdateDefaultUpdatedAt = notehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// notehistoryDescTags is the schema descriptor for tags field.
	notehistoryDescTags := notehistoryFields[11].Descriptor()
	// notehistory.DefaultTags holds the default value on creation for the tags field.
	notehistory.DefaultTags = notehistoryDescTags.Default.([]string)
	// notehistoryDescID is the schema descriptor for id field.
	notehistoryDescID := notehistoryFields[7].Descriptor()
	// notehistory.DefaultID holds the default value on creation for the id field.
	notehistory.DefaultID = notehistoryDescID.Default.(func() string)
	orgmembershipMixin := schema.OrgMembership{}.Mixin()
	orgmembership.Policy = privacy.NewPolicies(schema.OrgMembership{})
	orgmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := orgmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orgmembershipMixinHooks0 := orgmembershipMixin[0].Hooks()
	orgmembershipMixinHooks2 := orgmembershipMixin[2].Hooks()
	orgmembershipHooks := schema.OrgMembership{}.Hooks()

	orgmembership.Hooks[1] = orgmembershipMixinHooks0[0]

	orgmembership.Hooks[2] = orgmembershipMixinHooks2[0]

	orgmembership.Hooks[3] = orgmembershipHooks[0]

	orgmembership.Hooks[4] = orgmembershipHooks[1]

	orgmembership.Hooks[5] = orgmembershipHooks[2]
	orgmembershipMixinInters2 := orgmembershipMixin[2].Interceptors()
	orgmembershipInters := schema.OrgMembership{}.Interceptors()
	orgmembership.Interceptors[0] = orgmembershipMixinInters2[0]
	orgmembership.Interceptors[1] = orgmembershipInters[0]
	orgmembership.Interceptors[2] = orgmembershipInters[1]
	orgmembershipMixinFields0 := orgmembershipMixin[0].Fields()
	_ = orgmembershipMixinFields0
	orgmembershipMixinFields1 := orgmembershipMixin[1].Fields()
	_ = orgmembershipMixinFields1
	orgmembershipFields := schema.OrgMembership{}.Fields()
	_ = orgmembershipFields
	// orgmembershipDescCreatedAt is the schema descriptor for created_at field.
	orgmembershipDescCreatedAt := orgmembershipMixinFields0[0].Descriptor()
	// orgmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembership.DefaultCreatedAt = orgmembershipDescCreatedAt.Default.(func() time.Time)
	// orgmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershipDescUpdatedAt := orgmembershipMixinFields0[1].Descriptor()
	// orgmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembership.DefaultUpdatedAt = orgmembershipDescUpdatedAt.Default.(func() time.Time)
	// orgmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmembership.UpdateDefaultUpdatedAt = orgmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmembershipDescID is the schema descriptor for id field.
	orgmembershipDescID := orgmembershipMixinFields1[0].Descriptor()
	// orgmembership.DefaultID holds the default value on creation for the id field.
	orgmembership.DefaultID = orgmembershipDescID.Default.(func() string)
	orgmembershiphistoryInters := schema.OrgMembershipHistory{}.Interceptors()
	orgmembershiphistory.Interceptors[0] = orgmembershiphistoryInters[0]
	orgmembershiphistoryFields := schema.OrgMembershipHistory{}.Fields()
	_ = orgmembershiphistoryFields
	// orgmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	orgmembershiphistoryDescHistoryTime := orgmembershiphistoryFields[0].Descriptor()
	// orgmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	orgmembershiphistory.DefaultHistoryTime = orgmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// orgmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	orgmembershiphistoryDescCreatedAt := orgmembershiphistoryFields[3].Descriptor()
	// orgmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembershiphistory.DefaultCreatedAt = orgmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// orgmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershiphistoryDescUpdatedAt := orgmembershiphistoryFields[4].Descriptor()
	// orgmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembershiphistory.DefaultUpdatedAt = orgmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// orgmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmembershiphistory.UpdateDefaultUpdatedAt = orgmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmembershiphistoryDescID is the schema descriptor for id field.
	orgmembershiphistoryDescID := orgmembershiphistoryFields[7].Descriptor()
	// orgmembershiphistory.DefaultID holds the default value on creation for the id field.
	orgmembershiphistory.DefaultID = orgmembershiphistoryDescID.Default.(func() string)
	orgsubscriptionMixin := schema.OrgSubscription{}.Mixin()
	orgsubscriptionMixinHooks0 := orgsubscriptionMixin[0].Hooks()
	orgsubscriptionMixinHooks3 := orgsubscriptionMixin[3].Hooks()
	orgsubscriptionMixinHooks4 := orgsubscriptionMixin[4].Hooks()
	orgsubscription.Hooks[0] = orgsubscriptionMixinHooks0[0]
	orgsubscription.Hooks[1] = orgsubscriptionMixinHooks3[0]
	orgsubscription.Hooks[2] = orgsubscriptionMixinHooks4[0]
	orgsubscriptionMixinInters3 := orgsubscriptionMixin[3].Interceptors()
	orgsubscriptionMixinInters4 := orgsubscriptionMixin[4].Interceptors()
	orgsubscriptionInters := schema.OrgSubscription{}.Interceptors()
	orgsubscription.Interceptors[0] = orgsubscriptionMixinInters3[0]
	orgsubscription.Interceptors[1] = orgsubscriptionMixinInters4[0]
	orgsubscription.Interceptors[2] = orgsubscriptionInters[0]
	orgsubscriptionMixinFields0 := orgsubscriptionMixin[0].Fields()
	_ = orgsubscriptionMixinFields0
	orgsubscriptionMixinFields1 := orgsubscriptionMixin[1].Fields()
	_ = orgsubscriptionMixinFields1
	orgsubscriptionMixinFields2 := orgsubscriptionMixin[2].Fields()
	_ = orgsubscriptionMixinFields2
	orgsubscriptionMixinFields4 := orgsubscriptionMixin[4].Fields()
	_ = orgsubscriptionMixinFields4
	orgsubscriptionFields := schema.OrgSubscription{}.Fields()
	_ = orgsubscriptionFields
	// orgsubscriptionDescCreatedAt is the schema descriptor for created_at field.
	orgsubscriptionDescCreatedAt := orgsubscriptionMixinFields0[0].Descriptor()
	// orgsubscription.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgsubscription.DefaultCreatedAt = orgsubscriptionDescCreatedAt.Default.(func() time.Time)
	// orgsubscriptionDescUpdatedAt is the schema descriptor for updated_at field.
	orgsubscriptionDescUpdatedAt := orgsubscriptionMixinFields0[1].Descriptor()
	// orgsubscription.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgsubscription.DefaultUpdatedAt = orgsubscriptionDescUpdatedAt.Default.(func() time.Time)
	// orgsubscription.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgsubscription.UpdateDefaultUpdatedAt = orgsubscriptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgsubscriptionDescTags is the schema descriptor for tags field.
	orgsubscriptionDescTags := orgsubscriptionMixinFields2[0].Descriptor()
	// orgsubscription.DefaultTags holds the default value on creation for the tags field.
	orgsubscription.DefaultTags = orgsubscriptionDescTags.Default.([]string)
	// orgsubscriptionDescOwnerID is the schema descriptor for owner_id field.
	orgsubscriptionDescOwnerID := orgsubscriptionMixinFields4[0].Descriptor()
	// orgsubscription.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	orgsubscription.OwnerIDValidator = orgsubscriptionDescOwnerID.Validators[0].(func(string) error)
	// orgsubscriptionDescActive is the schema descriptor for active field.
	orgsubscriptionDescActive := orgsubscriptionFields[5].Descriptor()
	// orgsubscription.DefaultActive holds the default value on creation for the active field.
	orgsubscription.DefaultActive = orgsubscriptionDescActive.Default.(bool)
	// orgsubscriptionDescID is the schema descriptor for id field.
	orgsubscriptionDescID := orgsubscriptionMixinFields1[0].Descriptor()
	// orgsubscription.DefaultID holds the default value on creation for the id field.
	orgsubscription.DefaultID = orgsubscriptionDescID.Default.(func() string)
	orgsubscriptionhistoryFields := schema.OrgSubscriptionHistory{}.Fields()
	_ = orgsubscriptionhistoryFields
	// orgsubscriptionhistoryDescHistoryTime is the schema descriptor for history_time field.
	orgsubscriptionhistoryDescHistoryTime := orgsubscriptionhistoryFields[0].Descriptor()
	// orgsubscriptionhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	orgsubscriptionhistory.DefaultHistoryTime = orgsubscriptionhistoryDescHistoryTime.Default.(func() time.Time)
	// orgsubscriptionhistoryDescCreatedAt is the schema descriptor for created_at field.
	orgsubscriptionhistoryDescCreatedAt := orgsubscriptionhistoryFields[3].Descriptor()
	// orgsubscriptionhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgsubscriptionhistory.DefaultCreatedAt = orgsubscriptionhistoryDescCreatedAt.Default.(func() time.Time)
	// orgsubscriptionhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	orgsubscriptionhistoryDescUpdatedAt := orgsubscriptionhistoryFields[4].Descriptor()
	// orgsubscriptionhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgsubscriptionhistory.DefaultUpdatedAt = orgsubscriptionhistoryDescUpdatedAt.Default.(func() time.Time)
	// orgsubscriptionhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgsubscriptionhistory.UpdateDefaultUpdatedAt = orgsubscriptionhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgsubscriptionhistoryDescTags is the schema descriptor for tags field.
	orgsubscriptionhistoryDescTags := orgsubscriptionhistoryFields[8].Descriptor()
	// orgsubscriptionhistory.DefaultTags holds the default value on creation for the tags field.
	orgsubscriptionhistory.DefaultTags = orgsubscriptionhistoryDescTags.Default.([]string)
	// orgsubscriptionhistoryDescActive is the schema descriptor for active field.
	orgsubscriptionhistoryDescActive := orgsubscriptionhistoryFields[17].Descriptor()
	// orgsubscriptionhistory.DefaultActive holds the default value on creation for the active field.
	orgsubscriptionhistory.DefaultActive = orgsubscriptionhistoryDescActive.Default.(bool)
	// orgsubscriptionhistoryDescID is the schema descriptor for id field.
	orgsubscriptionhistoryDescID := orgsubscriptionhistoryFields[7].Descriptor()
	// orgsubscriptionhistory.DefaultID holds the default value on creation for the id field.
	orgsubscriptionhistory.DefaultID = orgsubscriptionhistoryDescID.Default.(func() string)
	organizationMixin := schema.Organization{}.Mixin()
	organization.Policy = privacy.NewPolicies(schema.Organization{})
	organization.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organization.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationMixinHooks0 := organizationMixin[0].Hooks()
	organizationMixinHooks3 := organizationMixin[3].Hooks()
	organizationMixinHooks4 := organizationMixin[4].Hooks()
	organizationHooks := schema.Organization{}.Hooks()

	organization.Hooks[1] = organizationMixinHooks0[0]

	organization.Hooks[2] = organizationMixinHooks3[0]

	organization.Hooks[3] = organizationMixinHooks4[0]

	organization.Hooks[4] = organizationMixinHooks4[1]

	organization.Hooks[5] = organizationMixinHooks4[2]

	organization.Hooks[6] = organizationMixinHooks4[3]

	organization.Hooks[7] = organizationMixinHooks4[4]

	organization.Hooks[8] = organizationMixinHooks4[5]

	organization.Hooks[9] = organizationMixinHooks4[6]

	organization.Hooks[10] = organizationMixinHooks4[7]

	organization.Hooks[11] = organizationMixinHooks4[8]

	organization.Hooks[12] = organizationHooks[0]

	organization.Hooks[13] = organizationHooks[1]
	organizationMixinInters3 := organizationMixin[3].Interceptors()
	organizationInters := schema.Organization{}.Interceptors()
	organization.Interceptors[0] = organizationMixinInters3[0]
	organization.Interceptors[1] = organizationInters[0]
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationMixinFields1 := organizationMixin[1].Fields()
	_ = organizationMixinFields1
	organizationMixinFields2 := organizationMixin[2].Fields()
	_ = organizationMixinFields2
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationMixinFields0[1].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescTags is the schema descriptor for tags field.
	organizationDescTags := organizationMixinFields2[0].Descriptor()
	// organization.DefaultTags holds the default value on creation for the tags field.
	organization.DefaultTags = organizationDescTags.Default.([]string)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = func() func(string) error {
		validators := organizationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescDisplayName is the schema descriptor for display_name field.
	organizationDescDisplayName := organizationFields[1].Descriptor()
	// organization.DefaultDisplayName holds the default value on creation for the display_name field.
	organization.DefaultDisplayName = organizationDescDisplayName.Default.(string)
	// organization.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	organization.DisplayNameValidator = organizationDescDisplayName.Validators[0].(func(string) error)
	// organizationDescPersonalOrg is the schema descriptor for personal_org field.
	organizationDescPersonalOrg := organizationFields[4].Descriptor()
	// organization.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organization.DefaultPersonalOrg = organizationDescPersonalOrg.Default.(bool)
	// organizationDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	organizationDescAvatarRemoteURL := organizationFields[5].Descriptor()
	// organization.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	organization.AvatarRemoteURLValidator = func() func(string) error {
		validators := organizationDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	organizationDescAvatarUpdatedAt := organizationFields[7].Descriptor()
	// organization.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	organization.DefaultAvatarUpdatedAt = organizationDescAvatarUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	organization.UpdateDefaultAvatarUpdatedAt = organizationDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationDescDedicatedDb := organizationFields[8].Descriptor()
	// organization.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organization.DefaultDedicatedDb = organizationDescDedicatedDb.Default.(bool)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields1[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() string)
	organizationhistoryInters := schema.OrganizationHistory{}.Interceptors()
	organizationhistory.Interceptors[0] = organizationhistoryInters[0]
	organizationhistoryFields := schema.OrganizationHistory{}.Fields()
	_ = organizationhistoryFields
	// organizationhistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationhistoryDescHistoryTime := organizationhistoryFields[0].Descriptor()
	// organizationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationhistory.DefaultHistoryTime = organizationhistoryDescHistoryTime.Default.(func() time.Time)
	// organizationhistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationhistoryDescCreatedAt := organizationhistoryFields[3].Descriptor()
	// organizationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationhistory.DefaultCreatedAt = organizationhistoryDescCreatedAt.Default.(func() time.Time)
	// organizationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationhistoryDescUpdatedAt := organizationhistoryFields[4].Descriptor()
	// organizationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationhistory.DefaultUpdatedAt = organizationhistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationhistory.UpdateDefaultUpdatedAt = organizationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationhistoryDescTags is the schema descriptor for tags field.
	organizationhistoryDescTags := organizationhistoryFields[8].Descriptor()
	// organizationhistory.DefaultTags holds the default value on creation for the tags field.
	organizationhistory.DefaultTags = organizationhistoryDescTags.Default.([]string)
	// organizationhistoryDescDisplayName is the schema descriptor for display_name field.
	organizationhistoryDescDisplayName := organizationhistoryFields[12].Descriptor()
	// organizationhistory.DefaultDisplayName holds the default value on creation for the display_name field.
	organizationhistory.DefaultDisplayName = organizationhistoryDescDisplayName.Default.(string)
	// organizationhistoryDescPersonalOrg is the schema descriptor for personal_org field.
	organizationhistoryDescPersonalOrg := organizationhistoryFields[15].Descriptor()
	// organizationhistory.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organizationhistory.DefaultPersonalOrg = organizationhistoryDescPersonalOrg.Default.(bool)
	// organizationhistoryDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	organizationhistoryDescAvatarUpdatedAt := organizationhistoryFields[18].Descriptor()
	// organizationhistory.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	organizationhistory.DefaultAvatarUpdatedAt = organizationhistoryDescAvatarUpdatedAt.Default.(func() time.Time)
	// organizationhistory.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	organizationhistory.UpdateDefaultAvatarUpdatedAt = organizationhistoryDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationhistoryDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationhistoryDescDedicatedDb := organizationhistoryFields[19].Descriptor()
	// organizationhistory.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organizationhistory.DefaultDedicatedDb = organizationhistoryDescDedicatedDb.Default.(bool)
	// organizationhistoryDescID is the schema descriptor for id field.
	organizationhistoryDescID := organizationhistoryFields[7].Descriptor()
	// organizationhistory.DefaultID holds the default value on creation for the id field.
	organizationhistory.DefaultID = organizationhistoryDescID.Default.(func() string)
	organizationsettingMixin := schema.OrganizationSetting{}.Mixin()
	organizationsetting.Policy = privacy.NewPolicies(schema.OrganizationSetting{})
	organizationsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organizationsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationsettingMixinHooks0 := organizationsettingMixin[0].Hooks()
	organizationsettingMixinHooks3 := organizationsettingMixin[3].Hooks()

	organizationsetting.Hooks[1] = organizationsettingMixinHooks0[0]

	organizationsetting.Hooks[2] = organizationsettingMixinHooks3[0]
	organizationsettingMixinInters3 := organizationsettingMixin[3].Interceptors()
	organizationsettingInters := schema.OrganizationSetting{}.Interceptors()
	organizationsetting.Interceptors[0] = organizationsettingMixinInters3[0]
	organizationsetting.Interceptors[1] = organizationsettingInters[0]
	organizationsettingMixinFields0 := organizationsettingMixin[0].Fields()
	_ = organizationsettingMixinFields0
	organizationsettingMixinFields1 := organizationsettingMixin[1].Fields()
	_ = organizationsettingMixinFields1
	organizationsettingMixinFields2 := organizationsettingMixin[2].Fields()
	_ = organizationsettingMixinFields2
	organizationsettingFields := schema.OrganizationSetting{}.Fields()
	_ = organizationsettingFields
	// organizationsettingDescCreatedAt is the schema descriptor for created_at field.
	organizationsettingDescCreatedAt := organizationsettingMixinFields0[0].Descriptor()
	// organizationsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsetting.DefaultCreatedAt = organizationsettingDescCreatedAt.Default.(func() time.Time)
	// organizationsettingDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettingDescUpdatedAt := organizationsettingMixinFields0[1].Descriptor()
	// organizationsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsetting.DefaultUpdatedAt = organizationsettingDescUpdatedAt.Default.(func() time.Time)
	// organizationsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsetting.UpdateDefaultUpdatedAt = organizationsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettingDescTags is the schema descriptor for tags field.
	organizationsettingDescTags := organizationsettingMixinFields2[0].Descriptor()
	// organizationsetting.DefaultTags holds the default value on creation for the tags field.
	organizationsetting.DefaultTags = organizationsettingDescTags.Default.([]string)
	// organizationsettingDescDomains is the schema descriptor for domains field.
	organizationsettingDescDomains := organizationsettingFields[0].Descriptor()
	// organizationsetting.DomainsValidator is a validator for the "domains" field. It is called by the builders before save.
	organizationsetting.DomainsValidator = organizationsettingDescDomains.Validators[0].(func([]string) error)
	// organizationsettingDescBillingEmail is the schema descriptor for billing_email field.
	organizationsettingDescBillingEmail := organizationsettingFields[2].Descriptor()
	// organizationsetting.BillingEmailValidator is a validator for the "billing_email" field. It is called by the builders before save.
	organizationsetting.BillingEmailValidator = organizationsettingDescBillingEmail.Validators[0].(func(string) error)
	// organizationsettingDescBillingPhone is the schema descriptor for billing_phone field.
	organizationsettingDescBillingPhone := organizationsettingFields[3].Descriptor()
	// organizationsetting.BillingPhoneValidator is a validator for the "billing_phone" field. It is called by the builders before save.
	organizationsetting.BillingPhoneValidator = organizationsettingDescBillingPhone.Validators[0].(func(string) error)
	// organizationsettingDescBillingNotificationsEnabled is the schema descriptor for billing_notifications_enabled field.
	organizationsettingDescBillingNotificationsEnabled := organizationsettingFields[8].Descriptor()
	// organizationsetting.DefaultBillingNotificationsEnabled holds the default value on creation for the billing_notifications_enabled field.
	organizationsetting.DefaultBillingNotificationsEnabled = organizationsettingDescBillingNotificationsEnabled.Default.(bool)
	// organizationsettingDescID is the schema descriptor for id field.
	organizationsettingDescID := organizationsettingMixinFields1[0].Descriptor()
	// organizationsetting.DefaultID holds the default value on creation for the id field.
	organizationsetting.DefaultID = organizationsettingDescID.Default.(func() string)
	organizationsettinghistoryInters := schema.OrganizationSettingHistory{}.Interceptors()
	organizationsettinghistory.Interceptors[0] = organizationsettinghistoryInters[0]
	organizationsettinghistoryFields := schema.OrganizationSettingHistory{}.Fields()
	_ = organizationsettinghistoryFields
	// organizationsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationsettinghistoryDescHistoryTime := organizationsettinghistoryFields[0].Descriptor()
	// organizationsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationsettinghistory.DefaultHistoryTime = organizationsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// organizationsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationsettinghistoryDescCreatedAt := organizationsettinghistoryFields[3].Descriptor()
	// organizationsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsettinghistory.DefaultCreatedAt = organizationsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// organizationsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettinghistoryDescUpdatedAt := organizationsettinghistoryFields[4].Descriptor()
	// organizationsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsettinghistory.DefaultUpdatedAt = organizationsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationsettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsettinghistory.UpdateDefaultUpdatedAt = organizationsettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettinghistoryDescTags is the schema descriptor for tags field.
	organizationsettinghistoryDescTags := organizationsettinghistoryFields[8].Descriptor()
	// organizationsettinghistory.DefaultTags holds the default value on creation for the tags field.
	organizationsettinghistory.DefaultTags = organizationsettinghistoryDescTags.Default.([]string)
	// organizationsettinghistoryDescBillingNotificationsEnabled is the schema descriptor for billing_notifications_enabled field.
	organizationsettinghistoryDescBillingNotificationsEnabled := organizationsettinghistoryFields[19].Descriptor()
	// organizationsettinghistory.DefaultBillingNotificationsEnabled holds the default value on creation for the billing_notifications_enabled field.
	organizationsettinghistory.DefaultBillingNotificationsEnabled = organizationsettinghistoryDescBillingNotificationsEnabled.Default.(bool)
	// organizationsettinghistoryDescID is the schema descriptor for id field.
	organizationsettinghistoryDescID := organizationsettinghistoryFields[7].Descriptor()
	// organizationsettinghistory.DefaultID holds the default value on creation for the id field.
	organizationsettinghistory.DefaultID = organizationsettinghistoryDescID.Default.(func() string)
	passwordresettokenMixin := schema.PasswordResetToken{}.Mixin()
	passwordresettoken.Policy = privacy.NewPolicies(schema.PasswordResetToken{})
	passwordresettoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := passwordresettoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	passwordresettokenMixinHooks0 := passwordresettokenMixin[0].Hooks()
	passwordresettokenMixinHooks2 := passwordresettokenMixin[2].Hooks()
	passwordresettokenMixinHooks3 := passwordresettokenMixin[3].Hooks()
	passwordresettokenHooks := schema.PasswordResetToken{}.Hooks()

	passwordresettoken.Hooks[1] = passwordresettokenMixinHooks0[0]

	passwordresettoken.Hooks[2] = passwordresettokenMixinHooks2[0]

	passwordresettoken.Hooks[3] = passwordresettokenMixinHooks3[0]

	passwordresettoken.Hooks[4] = passwordresettokenHooks[0]
	passwordresettokenMixinInters2 := passwordresettokenMixin[2].Interceptors()
	passwordresettokenMixinInters3 := passwordresettokenMixin[3].Interceptors()
	passwordresettoken.Interceptors[0] = passwordresettokenMixinInters2[0]
	passwordresettoken.Interceptors[1] = passwordresettokenMixinInters3[0]
	passwordresettokenMixinFields0 := passwordresettokenMixin[0].Fields()
	_ = passwordresettokenMixinFields0
	passwordresettokenMixinFields1 := passwordresettokenMixin[1].Fields()
	_ = passwordresettokenMixinFields1
	passwordresettokenFields := schema.PasswordResetToken{}.Fields()
	_ = passwordresettokenFields
	// passwordresettokenDescCreatedAt is the schema descriptor for created_at field.
	passwordresettokenDescCreatedAt := passwordresettokenMixinFields0[0].Descriptor()
	// passwordresettoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	passwordresettoken.DefaultCreatedAt = passwordresettokenDescCreatedAt.Default.(func() time.Time)
	// passwordresettokenDescUpdatedAt is the schema descriptor for updated_at field.
	passwordresettokenDescUpdatedAt := passwordresettokenMixinFields0[1].Descriptor()
	// passwordresettoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	passwordresettoken.DefaultUpdatedAt = passwordresettokenDescUpdatedAt.Default.(func() time.Time)
	// passwordresettoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	passwordresettoken.UpdateDefaultUpdatedAt = passwordresettokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// passwordresettokenDescToken is the schema descriptor for token field.
	passwordresettokenDescToken := passwordresettokenFields[0].Descriptor()
	// passwordresettoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	passwordresettoken.TokenValidator = passwordresettokenDescToken.Validators[0].(func(string) error)
	// passwordresettokenDescEmail is the schema descriptor for email field.
	passwordresettokenDescEmail := passwordresettokenFields[2].Descriptor()
	// passwordresettoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	passwordresettoken.EmailValidator = func() func(string) error {
		validators := passwordresettokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// passwordresettokenDescSecret is the schema descriptor for secret field.
	passwordresettokenDescSecret := passwordresettokenFields[3].Descriptor()
	// passwordresettoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	passwordresettoken.SecretValidator = passwordresettokenDescSecret.Validators[0].(func([]byte) error)
	// passwordresettokenDescID is the schema descriptor for id field.
	passwordresettokenDescID := passwordresettokenMixinFields1[0].Descriptor()
	// passwordresettoken.DefaultID holds the default value on creation for the id field.
	passwordresettoken.DefaultID = passwordresettokenDescID.Default.(func() string)
	personalaccesstokenMixin := schema.PersonalAccessToken{}.Mixin()
	personalaccesstoken.Policy = privacy.NewPolicies(schema.PersonalAccessToken{})
	personalaccesstoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := personalaccesstoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	personalaccesstokenMixinHooks0 := personalaccesstokenMixin[0].Hooks()
	personalaccesstokenMixinHooks1 := personalaccesstokenMixin[1].Hooks()
	personalaccesstokenMixinHooks4 := personalaccesstokenMixin[4].Hooks()
	personalaccesstokenHooks := schema.PersonalAccessToken{}.Hooks()

	personalaccesstoken.Hooks[1] = personalaccesstokenMixinHooks0[0]

	personalaccesstoken.Hooks[2] = personalaccesstokenMixinHooks1[0]

	personalaccesstoken.Hooks[3] = personalaccesstokenMixinHooks4[0]

	personalaccesstoken.Hooks[4] = personalaccesstokenHooks[0]

	personalaccesstoken.Hooks[5] = personalaccesstokenHooks[1]
	personalaccesstokenMixinInters1 := personalaccesstokenMixin[1].Interceptors()
	personalaccesstokenMixinInters4 := personalaccesstokenMixin[4].Interceptors()
	personalaccesstokenInters := schema.PersonalAccessToken{}.Interceptors()
	personalaccesstoken.Interceptors[0] = personalaccesstokenMixinInters1[0]
	personalaccesstoken.Interceptors[1] = personalaccesstokenMixinInters4[0]
	personalaccesstoken.Interceptors[2] = personalaccesstokenInters[0]
	personalaccesstokenMixinFields0 := personalaccesstokenMixin[0].Fields()
	_ = personalaccesstokenMixinFields0
	personalaccesstokenMixinFields2 := personalaccesstokenMixin[2].Fields()
	_ = personalaccesstokenMixinFields2
	personalaccesstokenMixinFields3 := personalaccesstokenMixin[3].Fields()
	_ = personalaccesstokenMixinFields3
	personalaccesstokenFields := schema.PersonalAccessToken{}.Fields()
	_ = personalaccesstokenFields
	// personalaccesstokenDescCreatedAt is the schema descriptor for created_at field.
	personalaccesstokenDescCreatedAt := personalaccesstokenMixinFields0[0].Descriptor()
	// personalaccesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalaccesstoken.DefaultCreatedAt = personalaccesstokenDescCreatedAt.Default.(func() time.Time)
	// personalaccesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	personalaccesstokenDescUpdatedAt := personalaccesstokenMixinFields0[1].Descriptor()
	// personalaccesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalaccesstoken.DefaultUpdatedAt = personalaccesstokenDescUpdatedAt.Default.(func() time.Time)
	// personalaccesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalaccesstoken.UpdateDefaultUpdatedAt = personalaccesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalaccesstokenDescTags is the schema descriptor for tags field.
	personalaccesstokenDescTags := personalaccesstokenMixinFields3[0].Descriptor()
	// personalaccesstoken.DefaultTags holds the default value on creation for the tags field.
	personalaccesstoken.DefaultTags = personalaccesstokenDescTags.Default.([]string)
	// personalaccesstokenDescName is the schema descriptor for name field.
	personalaccesstokenDescName := personalaccesstokenFields[0].Descriptor()
	// personalaccesstoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	personalaccesstoken.NameValidator = personalaccesstokenDescName.Validators[0].(func(string) error)
	// personalaccesstokenDescToken is the schema descriptor for token field.
	personalaccesstokenDescToken := personalaccesstokenFields[1].Descriptor()
	// personalaccesstoken.DefaultToken holds the default value on creation for the token field.
	personalaccesstoken.DefaultToken = personalaccesstokenDescToken.Default.(func() string)
	// personalaccesstokenDescID is the schema descriptor for id field.
	personalaccesstokenDescID := personalaccesstokenMixinFields2[0].Descriptor()
	// personalaccesstoken.DefaultID holds the default value on creation for the id field.
	personalaccesstoken.DefaultID = personalaccesstokenDescID.Default.(func() string)
	procedureMixin := schema.Procedure{}.Mixin()
	procedure.Policy = privacy.NewPolicies(schema.Procedure{})
	procedure.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := procedure.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	procedureMixinHooks0 := procedureMixin[0].Hooks()
	procedureMixinHooks1 := procedureMixin[1].Hooks()
	procedureMixinHooks2 := procedureMixin[2].Hooks()
	procedureMixinHooks4 := procedureMixin[4].Hooks()
	procedureMixinHooks5 := procedureMixin[5].Hooks()
	procedureHooks := schema.Procedure{}.Hooks()

	procedure.Hooks[1] = procedureMixinHooks0[0]

	procedure.Hooks[2] = procedureMixinHooks1[0]

	procedure.Hooks[3] = procedureMixinHooks2[0]

	procedure.Hooks[4] = procedureMixinHooks4[0]

	procedure.Hooks[5] = procedureMixinHooks5[0]

	procedure.Hooks[6] = procedureMixinHooks5[1]

	procedure.Hooks[7] = procedureHooks[0]
	procedureMixinInters1 := procedureMixin[1].Interceptors()
	procedureMixinInters4 := procedureMixin[4].Interceptors()
	procedure.Interceptors[0] = procedureMixinInters1[0]
	procedure.Interceptors[1] = procedureMixinInters4[0]
	procedureMixinFields0 := procedureMixin[0].Fields()
	_ = procedureMixinFields0
	procedureMixinFields2 := procedureMixin[2].Fields()
	_ = procedureMixinFields2
	procedureMixinFields3 := procedureMixin[3].Fields()
	_ = procedureMixinFields3
	procedureMixinFields4 := procedureMixin[4].Fields()
	_ = procedureMixinFields4
	procedureFields := schema.Procedure{}.Fields()
	_ = procedureFields
	// procedureDescCreatedAt is the schema descriptor for created_at field.
	procedureDescCreatedAt := procedureMixinFields0[0].Descriptor()
	// procedure.DefaultCreatedAt holds the default value on creation for the created_at field.
	procedure.DefaultCreatedAt = procedureDescCreatedAt.Default.(func() time.Time)
	// procedureDescUpdatedAt is the schema descriptor for updated_at field.
	procedureDescUpdatedAt := procedureMixinFields0[1].Descriptor()
	// procedure.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	procedure.DefaultUpdatedAt = procedureDescUpdatedAt.Default.(func() time.Time)
	// procedure.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	procedure.UpdateDefaultUpdatedAt = procedureDescUpdatedAt.UpdateDefault.(func() time.Time)
	// procedureDescDisplayID is the schema descriptor for display_id field.
	procedureDescDisplayID := procedureMixinFields2[1].Descriptor()
	// procedure.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	procedure.DisplayIDValidator = procedureDescDisplayID.Validators[0].(func(string) error)
	// procedureDescTags is the schema descriptor for tags field.
	procedureDescTags := procedureMixinFields3[0].Descriptor()
	// procedure.DefaultTags holds the default value on creation for the tags field.
	procedure.DefaultTags = procedureDescTags.Default.([]string)
	// procedureDescOwnerID is the schema descriptor for owner_id field.
	procedureDescOwnerID := procedureMixinFields4[0].Descriptor()
	// procedure.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	procedure.OwnerIDValidator = procedureDescOwnerID.Validators[0].(func(string) error)
	// procedureDescName is the schema descriptor for name field.
	procedureDescName := procedureFields[0].Descriptor()
	// procedure.NameValidator is a validator for the "name" field. It is called by the builders before save.
	procedure.NameValidator = procedureDescName.Validators[0].(func(string) error)
	// procedureDescReviewDue is the schema descriptor for review_due field.
	procedureDescReviewDue := procedureFields[4].Descriptor()
	// procedure.DefaultReviewDue holds the default value on creation for the review_due field.
	procedure.DefaultReviewDue = procedureDescReviewDue.Default.(time.Time)
	// procedureDescID is the schema descriptor for id field.
	procedureDescID := procedureMixinFields2[0].Descriptor()
	// procedure.DefaultID holds the default value on creation for the id field.
	procedure.DefaultID = procedureDescID.Default.(func() string)
	procedurehistoryInters := schema.ProcedureHistory{}.Interceptors()
	procedurehistory.Interceptors[0] = procedurehistoryInters[0]
	procedurehistoryFields := schema.ProcedureHistory{}.Fields()
	_ = procedurehistoryFields
	// procedurehistoryDescHistoryTime is the schema descriptor for history_time field.
	procedurehistoryDescHistoryTime := procedurehistoryFields[0].Descriptor()
	// procedurehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	procedurehistory.DefaultHistoryTime = procedurehistoryDescHistoryTime.Default.(func() time.Time)
	// procedurehistoryDescCreatedAt is the schema descriptor for created_at field.
	procedurehistoryDescCreatedAt := procedurehistoryFields[3].Descriptor()
	// procedurehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	procedurehistory.DefaultCreatedAt = procedurehistoryDescCreatedAt.Default.(func() time.Time)
	// procedurehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	procedurehistoryDescUpdatedAt := procedurehistoryFields[4].Descriptor()
	// procedurehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	procedurehistory.DefaultUpdatedAt = procedurehistoryDescUpdatedAt.Default.(func() time.Time)
	// procedurehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	procedurehistory.UpdateDefaultUpdatedAt = procedurehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// procedurehistoryDescTags is the schema descriptor for tags field.
	procedurehistoryDescTags := procedurehistoryFields[11].Descriptor()
	// procedurehistory.DefaultTags holds the default value on creation for the tags field.
	procedurehistory.DefaultTags = procedurehistoryDescTags.Default.([]string)
	// procedurehistoryDescReviewDue is the schema descriptor for review_due field.
	procedurehistoryDescReviewDue := procedurehistoryFields[17].Descriptor()
	// procedurehistory.DefaultReviewDue holds the default value on creation for the review_due field.
	procedurehistory.DefaultReviewDue = procedurehistoryDescReviewDue.Default.(time.Time)
	// procedurehistoryDescID is the schema descriptor for id field.
	procedurehistoryDescID := procedurehistoryFields[9].Descriptor()
	// procedurehistory.DefaultID holds the default value on creation for the id field.
	procedurehistory.DefaultID = procedurehistoryDescID.Default.(func() string)
	programMixin := schema.Program{}.Mixin()
	program.Policy = privacy.NewPolicies(schema.Program{})
	program.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := program.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programMixinHooks0 := programMixin[0].Hooks()
	programMixinHooks1 := programMixin[1].Hooks()
	programMixinHooks2 := programMixin[2].Hooks()
	programMixinHooks4 := programMixin[4].Hooks()
	programMixinHooks5 := programMixin[5].Hooks()
	programHooks := schema.Program{}.Hooks()

	program.Hooks[1] = programMixinHooks0[0]

	program.Hooks[2] = programMixinHooks1[0]

	program.Hooks[3] = programMixinHooks2[0]

	program.Hooks[4] = programMixinHooks4[0]

	program.Hooks[5] = programMixinHooks5[0]

	program.Hooks[6] = programMixinHooks5[1]

	program.Hooks[7] = programMixinHooks5[2]

	program.Hooks[8] = programHooks[0]
	programMixinInters2 := programMixin[2].Interceptors()
	programMixinInters4 := programMixin[4].Interceptors()
	programInters := schema.Program{}.Interceptors()
	program.Interceptors[0] = programMixinInters2[0]
	program.Interceptors[1] = programMixinInters4[0]
	program.Interceptors[2] = programInters[0]
	programMixinFields0 := programMixin[0].Fields()
	_ = programMixinFields0
	programMixinFields1 := programMixin[1].Fields()
	_ = programMixinFields1
	programMixinFields3 := programMixin[3].Fields()
	_ = programMixinFields3
	programMixinFields4 := programMixin[4].Fields()
	_ = programMixinFields4
	programFields := schema.Program{}.Fields()
	_ = programFields
	// programDescCreatedAt is the schema descriptor for created_at field.
	programDescCreatedAt := programMixinFields0[0].Descriptor()
	// program.DefaultCreatedAt holds the default value on creation for the created_at field.
	program.DefaultCreatedAt = programDescCreatedAt.Default.(func() time.Time)
	// programDescUpdatedAt is the schema descriptor for updated_at field.
	programDescUpdatedAt := programMixinFields0[1].Descriptor()
	// program.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	program.DefaultUpdatedAt = programDescUpdatedAt.Default.(func() time.Time)
	// program.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	program.UpdateDefaultUpdatedAt = programDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programDescDisplayID is the schema descriptor for display_id field.
	programDescDisplayID := programMixinFields1[1].Descriptor()
	// program.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	program.DisplayIDValidator = programDescDisplayID.Validators[0].(func(string) error)
	// programDescTags is the schema descriptor for tags field.
	programDescTags := programMixinFields3[0].Descriptor()
	// program.DefaultTags holds the default value on creation for the tags field.
	program.DefaultTags = programDescTags.Default.([]string)
	// programDescOwnerID is the schema descriptor for owner_id field.
	programDescOwnerID := programMixinFields4[0].Descriptor()
	// program.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	program.OwnerIDValidator = programDescOwnerID.Validators[0].(func(string) error)
	// programDescName is the schema descriptor for name field.
	programDescName := programFields[0].Descriptor()
	// program.NameValidator is a validator for the "name" field. It is called by the builders before save.
	program.NameValidator = programDescName.Validators[0].(func(string) error)
	// programDescAuditorReady is the schema descriptor for auditor_ready field.
	programDescAuditorReady := programFields[5].Descriptor()
	// program.DefaultAuditorReady holds the default value on creation for the auditor_ready field.
	program.DefaultAuditorReady = programDescAuditorReady.Default.(bool)
	// programDescAuditorWriteComments is the schema descriptor for auditor_write_comments field.
	programDescAuditorWriteComments := programFields[6].Descriptor()
	// program.DefaultAuditorWriteComments holds the default value on creation for the auditor_write_comments field.
	program.DefaultAuditorWriteComments = programDescAuditorWriteComments.Default.(bool)
	// programDescAuditorReadComments is the schema descriptor for auditor_read_comments field.
	programDescAuditorReadComments := programFields[7].Descriptor()
	// program.DefaultAuditorReadComments holds the default value on creation for the auditor_read_comments field.
	program.DefaultAuditorReadComments = programDescAuditorReadComments.Default.(bool)
	// programDescID is the schema descriptor for id field.
	programDescID := programMixinFields1[0].Descriptor()
	// program.DefaultID holds the default value on creation for the id field.
	program.DefaultID = programDescID.Default.(func() string)
	programhistoryInters := schema.ProgramHistory{}.Interceptors()
	programhistory.Interceptors[0] = programhistoryInters[0]
	programhistoryFields := schema.ProgramHistory{}.Fields()
	_ = programhistoryFields
	// programhistoryDescHistoryTime is the schema descriptor for history_time field.
	programhistoryDescHistoryTime := programhistoryFields[0].Descriptor()
	// programhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	programhistory.DefaultHistoryTime = programhistoryDescHistoryTime.Default.(func() time.Time)
	// programhistoryDescCreatedAt is the schema descriptor for created_at field.
	programhistoryDescCreatedAt := programhistoryFields[3].Descriptor()
	// programhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	programhistory.DefaultCreatedAt = programhistoryDescCreatedAt.Default.(func() time.Time)
	// programhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	programhistoryDescUpdatedAt := programhistoryFields[4].Descriptor()
	// programhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programhistory.DefaultUpdatedAt = programhistoryDescUpdatedAt.Default.(func() time.Time)
	// programhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programhistory.UpdateDefaultUpdatedAt = programhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programhistoryDescTags is the schema descriptor for tags field.
	programhistoryDescTags := programhistoryFields[11].Descriptor()
	// programhistory.DefaultTags holds the default value on creation for the tags field.
	programhistory.DefaultTags = programhistoryDescTags.Default.([]string)
	// programhistoryDescAuditorReady is the schema descriptor for auditor_ready field.
	programhistoryDescAuditorReady := programhistoryFields[18].Descriptor()
	// programhistory.DefaultAuditorReady holds the default value on creation for the auditor_ready field.
	programhistory.DefaultAuditorReady = programhistoryDescAuditorReady.Default.(bool)
	// programhistoryDescAuditorWriteComments is the schema descriptor for auditor_write_comments field.
	programhistoryDescAuditorWriteComments := programhistoryFields[19].Descriptor()
	// programhistory.DefaultAuditorWriteComments holds the default value on creation for the auditor_write_comments field.
	programhistory.DefaultAuditorWriteComments = programhistoryDescAuditorWriteComments.Default.(bool)
	// programhistoryDescAuditorReadComments is the schema descriptor for auditor_read_comments field.
	programhistoryDescAuditorReadComments := programhistoryFields[20].Descriptor()
	// programhistory.DefaultAuditorReadComments holds the default value on creation for the auditor_read_comments field.
	programhistory.DefaultAuditorReadComments = programhistoryDescAuditorReadComments.Default.(bool)
	// programhistoryDescID is the schema descriptor for id field.
	programhistoryDescID := programhistoryFields[7].Descriptor()
	// programhistory.DefaultID holds the default value on creation for the id field.
	programhistory.DefaultID = programhistoryDescID.Default.(func() string)
	programmembershipMixin := schema.ProgramMembership{}.Mixin()
	programmembership.Policy = privacy.NewPolicies(schema.ProgramMembership{})
	programmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := programmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programmembershipMixinHooks0 := programmembershipMixin[0].Hooks()
	programmembershipMixinHooks2 := programmembershipMixin[2].Hooks()
	programmembershipHooks := schema.ProgramMembership{}.Hooks()

	programmembership.Hooks[1] = programmembershipMixinHooks0[0]

	programmembership.Hooks[2] = programmembershipMixinHooks2[0]

	programmembership.Hooks[3] = programmembershipHooks[0]
	programmembershipMixinInters2 := programmembershipMixin[2].Interceptors()
	programmembership.Interceptors[0] = programmembershipMixinInters2[0]
	programmembershipMixinFields0 := programmembershipMixin[0].Fields()
	_ = programmembershipMixinFields0
	programmembershipMixinFields1 := programmembershipMixin[1].Fields()
	_ = programmembershipMixinFields1
	programmembershipFields := schema.ProgramMembership{}.Fields()
	_ = programmembershipFields
	// programmembershipDescCreatedAt is the schema descriptor for created_at field.
	programmembershipDescCreatedAt := programmembershipMixinFields0[0].Descriptor()
	// programmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	programmembership.DefaultCreatedAt = programmembershipDescCreatedAt.Default.(func() time.Time)
	// programmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	programmembershipDescUpdatedAt := programmembershipMixinFields0[1].Descriptor()
	// programmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programmembership.DefaultUpdatedAt = programmembershipDescUpdatedAt.Default.(func() time.Time)
	// programmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programmembership.UpdateDefaultUpdatedAt = programmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programmembershipDescID is the schema descriptor for id field.
	programmembershipDescID := programmembershipMixinFields1[0].Descriptor()
	// programmembership.DefaultID holds the default value on creation for the id field.
	programmembership.DefaultID = programmembershipDescID.Default.(func() string)
	programmembershiphistoryInters := schema.ProgramMembershipHistory{}.Interceptors()
	programmembershiphistory.Interceptors[0] = programmembershiphistoryInters[0]
	programmembershiphistoryFields := schema.ProgramMembershipHistory{}.Fields()
	_ = programmembershiphistoryFields
	// programmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	programmembershiphistoryDescHistoryTime := programmembershiphistoryFields[0].Descriptor()
	// programmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	programmembershiphistory.DefaultHistoryTime = programmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// programmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	programmembershiphistoryDescCreatedAt := programmembershiphistoryFields[3].Descriptor()
	// programmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	programmembershiphistory.DefaultCreatedAt = programmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// programmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	programmembershiphistoryDescUpdatedAt := programmembershiphistoryFields[4].Descriptor()
	// programmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programmembershiphistory.DefaultUpdatedAt = programmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// programmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programmembershiphistory.UpdateDefaultUpdatedAt = programmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programmembershiphistoryDescID is the schema descriptor for id field.
	programmembershiphistoryDescID := programmembershiphistoryFields[7].Descriptor()
	// programmembershiphistory.DefaultID holds the default value on creation for the id field.
	programmembershiphistory.DefaultID = programmembershiphistoryDescID.Default.(func() string)
	riskMixin := schema.Risk{}.Mixin()
	risk.Policy = privacy.NewPolicies(schema.Risk{})
	risk.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := risk.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	riskMixinHooks0 := riskMixin[0].Hooks()
	riskMixinHooks1 := riskMixin[1].Hooks()
	riskMixinHooks2 := riskMixin[2].Hooks()
	riskMixinHooks4 := riskMixin[4].Hooks()
	riskMixinHooks5 := riskMixin[5].Hooks()

	risk.Hooks[1] = riskMixinHooks0[0]

	risk.Hooks[2] = riskMixinHooks1[0]

	risk.Hooks[3] = riskMixinHooks2[0]

	risk.Hooks[4] = riskMixinHooks4[0]

	risk.Hooks[5] = riskMixinHooks4[1]

	risk.Hooks[6] = riskMixinHooks4[2]

	risk.Hooks[7] = riskMixinHooks5[0]

	risk.Hooks[8] = riskMixinHooks5[1]

	risk.Hooks[9] = riskMixinHooks5[2]
	riskMixinInters1 := riskMixin[1].Interceptors()
	riskMixinInters4 := riskMixin[4].Interceptors()
	risk.Interceptors[0] = riskMixinInters1[0]
	risk.Interceptors[1] = riskMixinInters4[0]
	riskMixinFields0 := riskMixin[0].Fields()
	_ = riskMixinFields0
	riskMixinFields2 := riskMixin[2].Fields()
	_ = riskMixinFields2
	riskMixinFields3 := riskMixin[3].Fields()
	_ = riskMixinFields3
	riskMixinFields4 := riskMixin[4].Fields()
	_ = riskMixinFields4
	riskFields := schema.Risk{}.Fields()
	_ = riskFields
	// riskDescCreatedAt is the schema descriptor for created_at field.
	riskDescCreatedAt := riskMixinFields0[0].Descriptor()
	// risk.DefaultCreatedAt holds the default value on creation for the created_at field.
	risk.DefaultCreatedAt = riskDescCreatedAt.Default.(func() time.Time)
	// riskDescUpdatedAt is the schema descriptor for updated_at field.
	riskDescUpdatedAt := riskMixinFields0[1].Descriptor()
	// risk.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	risk.DefaultUpdatedAt = riskDescUpdatedAt.Default.(func() time.Time)
	// risk.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	risk.UpdateDefaultUpdatedAt = riskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskDescDisplayID is the schema descriptor for display_id field.
	riskDescDisplayID := riskMixinFields2[1].Descriptor()
	// risk.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	risk.DisplayIDValidator = riskDescDisplayID.Validators[0].(func(string) error)
	// riskDescTags is the schema descriptor for tags field.
	riskDescTags := riskMixinFields3[0].Descriptor()
	// risk.DefaultTags holds the default value on creation for the tags field.
	risk.DefaultTags = riskDescTags.Default.([]string)
	// riskDescOwnerID is the schema descriptor for owner_id field.
	riskDescOwnerID := riskMixinFields4[0].Descriptor()
	// risk.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	risk.OwnerIDValidator = riskDescOwnerID.Validators[0].(func(string) error)
	// riskDescName is the schema descriptor for name field.
	riskDescName := riskFields[0].Descriptor()
	// risk.NameValidator is a validator for the "name" field. It is called by the builders before save.
	risk.NameValidator = riskDescName.Validators[0].(func(string) error)
	// riskDescID is the schema descriptor for id field.
	riskDescID := riskMixinFields2[0].Descriptor()
	// risk.DefaultID holds the default value on creation for the id field.
	risk.DefaultID = riskDescID.Default.(func() string)
	riskhistoryInters := schema.RiskHistory{}.Interceptors()
	riskhistory.Interceptors[0] = riskhistoryInters[0]
	riskhistoryFields := schema.RiskHistory{}.Fields()
	_ = riskhistoryFields
	// riskhistoryDescHistoryTime is the schema descriptor for history_time field.
	riskhistoryDescHistoryTime := riskhistoryFields[0].Descriptor()
	// riskhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	riskhistory.DefaultHistoryTime = riskhistoryDescHistoryTime.Default.(func() time.Time)
	// riskhistoryDescCreatedAt is the schema descriptor for created_at field.
	riskhistoryDescCreatedAt := riskhistoryFields[3].Descriptor()
	// riskhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	riskhistory.DefaultCreatedAt = riskhistoryDescCreatedAt.Default.(func() time.Time)
	// riskhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	riskhistoryDescUpdatedAt := riskhistoryFields[4].Descriptor()
	// riskhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	riskhistory.DefaultUpdatedAt = riskhistoryDescUpdatedAt.Default.(func() time.Time)
	// riskhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	riskhistory.UpdateDefaultUpdatedAt = riskhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskhistoryDescTags is the schema descriptor for tags field.
	riskhistoryDescTags := riskhistoryFields[11].Descriptor()
	// riskhistory.DefaultTags holds the default value on creation for the tags field.
	riskhistory.DefaultTags = riskhistoryDescTags.Default.([]string)
	// riskhistoryDescID is the schema descriptor for id field.
	riskhistoryDescID := riskhistoryFields[9].Descriptor()
	// riskhistory.DefaultID holds the default value on creation for the id field.
	riskhistory.DefaultID = riskhistoryDescID.Default.(func() string)
	standardMixin := schema.Standard{}.Mixin()
	standardMixinHooks0 := standardMixin[0].Hooks()
	standardMixinHooks1 := standardMixin[1].Hooks()
	standard.Hooks[0] = standardMixinHooks0[0]
	standard.Hooks[1] = standardMixinHooks1[0]
	standardMixinInters1 := standardMixin[1].Interceptors()
	standard.Interceptors[0] = standardMixinInters1[0]
	standardMixinFields0 := standardMixin[0].Fields()
	_ = standardMixinFields0
	standardMixinFields2 := standardMixin[2].Fields()
	_ = standardMixinFields2
	standardMixinFields3 := standardMixin[3].Fields()
	_ = standardMixinFields3
	standardFields := schema.Standard{}.Fields()
	_ = standardFields
	// standardDescCreatedAt is the schema descriptor for created_at field.
	standardDescCreatedAt := standardMixinFields0[0].Descriptor()
	// standard.DefaultCreatedAt holds the default value on creation for the created_at field.
	standard.DefaultCreatedAt = standardDescCreatedAt.Default.(func() time.Time)
	// standardDescUpdatedAt is the schema descriptor for updated_at field.
	standardDescUpdatedAt := standardMixinFields0[1].Descriptor()
	// standard.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	standard.DefaultUpdatedAt = standardDescUpdatedAt.Default.(func() time.Time)
	// standard.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	standard.UpdateDefaultUpdatedAt = standardDescUpdatedAt.UpdateDefault.(func() time.Time)
	// standardDescTags is the schema descriptor for tags field.
	standardDescTags := standardMixinFields3[0].Descriptor()
	// standard.DefaultTags holds the default value on creation for the tags field.
	standard.DefaultTags = standardDescTags.Default.([]string)
	// standardDescName is the schema descriptor for name field.
	standardDescName := standardFields[0].Descriptor()
	// standard.NameValidator is a validator for the "name" field. It is called by the builders before save.
	standard.NameValidator = standardDescName.Validators[0].(func(string) error)
	// standardDescID is the schema descriptor for id field.
	standardDescID := standardMixinFields2[0].Descriptor()
	// standard.DefaultID holds the default value on creation for the id field.
	standard.DefaultID = standardDescID.Default.(func() string)
	standardhistoryFields := schema.StandardHistory{}.Fields()
	_ = standardhistoryFields
	// standardhistoryDescHistoryTime is the schema descriptor for history_time field.
	standardhistoryDescHistoryTime := standardhistoryFields[0].Descriptor()
	// standardhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	standardhistory.DefaultHistoryTime = standardhistoryDescHistoryTime.Default.(func() time.Time)
	// standardhistoryDescCreatedAt is the schema descriptor for created_at field.
	standardhistoryDescCreatedAt := standardhistoryFields[3].Descriptor()
	// standardhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	standardhistory.DefaultCreatedAt = standardhistoryDescCreatedAt.Default.(func() time.Time)
	// standardhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	standardhistoryDescUpdatedAt := standardhistoryFields[4].Descriptor()
	// standardhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	standardhistory.DefaultUpdatedAt = standardhistoryDescUpdatedAt.Default.(func() time.Time)
	// standardhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	standardhistory.UpdateDefaultUpdatedAt = standardhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// standardhistoryDescTags is the schema descriptor for tags field.
	standardhistoryDescTags := standardhistoryFields[10].Descriptor()
	// standardhistory.DefaultTags holds the default value on creation for the tags field.
	standardhistory.DefaultTags = standardhistoryDescTags.Default.([]string)
	// standardhistoryDescID is the schema descriptor for id field.
	standardhistoryDescID := standardhistoryFields[9].Descriptor()
	// standardhistory.DefaultID holds the default value on creation for the id field.
	standardhistory.DefaultID = standardhistoryDescID.Default.(func() string)
	subcontrolMixin := schema.Subcontrol{}.Mixin()
	subcontrol.Policy = privacy.NewPolicies(schema.Subcontrol{})
	subcontrol.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subcontrol.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subcontrolMixinHooks0 := subcontrolMixin[0].Hooks()
	subcontrolMixinHooks1 := subcontrolMixin[1].Hooks()
	subcontrolMixinHooks2 := subcontrolMixin[2].Hooks()
	subcontrolMixinHooks4 := subcontrolMixin[4].Hooks()
	subcontrolHooks := schema.Subcontrol{}.Hooks()

	subcontrol.Hooks[1] = subcontrolMixinHooks0[0]

	subcontrol.Hooks[2] = subcontrolMixinHooks1[0]

	subcontrol.Hooks[3] = subcontrolMixinHooks2[0]

	subcontrol.Hooks[4] = subcontrolMixinHooks4[0]

	subcontrol.Hooks[5] = subcontrolMixinHooks4[1]

	subcontrol.Hooks[6] = subcontrolMixinHooks4[2]

	subcontrol.Hooks[7] = subcontrolHooks[0]
	subcontrolMixinInters1 := subcontrolMixin[1].Interceptors()
	subcontrolMixinInters4 := subcontrolMixin[4].Interceptors()
	subcontrol.Interceptors[0] = subcontrolMixinInters1[0]
	subcontrol.Interceptors[1] = subcontrolMixinInters4[0]
	subcontrolMixinFields0 := subcontrolMixin[0].Fields()
	_ = subcontrolMixinFields0
	subcontrolMixinFields2 := subcontrolMixin[2].Fields()
	_ = subcontrolMixinFields2
	subcontrolMixinFields3 := subcontrolMixin[3].Fields()
	_ = subcontrolMixinFields3
	subcontrolMixinFields4 := subcontrolMixin[4].Fields()
	_ = subcontrolMixinFields4
	subcontrolFields := schema.Subcontrol{}.Fields()
	_ = subcontrolFields
	// subcontrolDescCreatedAt is the schema descriptor for created_at field.
	subcontrolDescCreatedAt := subcontrolMixinFields0[0].Descriptor()
	// subcontrol.DefaultCreatedAt holds the default value on creation for the created_at field.
	subcontrol.DefaultCreatedAt = subcontrolDescCreatedAt.Default.(func() time.Time)
	// subcontrolDescUpdatedAt is the schema descriptor for updated_at field.
	subcontrolDescUpdatedAt := subcontrolMixinFields0[1].Descriptor()
	// subcontrol.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subcontrol.DefaultUpdatedAt = subcontrolDescUpdatedAt.Default.(func() time.Time)
	// subcontrol.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subcontrol.UpdateDefaultUpdatedAt = subcontrolDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subcontrolDescDisplayID is the schema descriptor for display_id field.
	subcontrolDescDisplayID := subcontrolMixinFields2[1].Descriptor()
	// subcontrol.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	subcontrol.DisplayIDValidator = subcontrolDescDisplayID.Validators[0].(func(string) error)
	// subcontrolDescTags is the schema descriptor for tags field.
	subcontrolDescTags := subcontrolMixinFields3[0].Descriptor()
	// subcontrol.DefaultTags holds the default value on creation for the tags field.
	subcontrol.DefaultTags = subcontrolDescTags.Default.([]string)
	// subcontrolDescOwnerID is the schema descriptor for owner_id field.
	subcontrolDescOwnerID := subcontrolMixinFields4[0].Descriptor()
	// subcontrol.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	subcontrol.OwnerIDValidator = subcontrolDescOwnerID.Validators[0].(func(string) error)
	// subcontrolDescName is the schema descriptor for name field.
	subcontrolDescName := subcontrolFields[0].Descriptor()
	// subcontrol.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subcontrol.NameValidator = subcontrolDescName.Validators[0].(func(string) error)
	// subcontrolDescID is the schema descriptor for id field.
	subcontrolDescID := subcontrolMixinFields2[0].Descriptor()
	// subcontrol.DefaultID holds the default value on creation for the id field.
	subcontrol.DefaultID = subcontrolDescID.Default.(func() string)
	subcontrolhistoryInters := schema.SubcontrolHistory{}.Interceptors()
	subcontrolhistory.Interceptors[0] = subcontrolhistoryInters[0]
	subcontrolhistoryFields := schema.SubcontrolHistory{}.Fields()
	_ = subcontrolhistoryFields
	// subcontrolhistoryDescHistoryTime is the schema descriptor for history_time field.
	subcontrolhistoryDescHistoryTime := subcontrolhistoryFields[0].Descriptor()
	// subcontrolhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	subcontrolhistory.DefaultHistoryTime = subcontrolhistoryDescHistoryTime.Default.(func() time.Time)
	// subcontrolhistoryDescCreatedAt is the schema descriptor for created_at field.
	subcontrolhistoryDescCreatedAt := subcontrolhistoryFields[3].Descriptor()
	// subcontrolhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	subcontrolhistory.DefaultCreatedAt = subcontrolhistoryDescCreatedAt.Default.(func() time.Time)
	// subcontrolhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	subcontrolhistoryDescUpdatedAt := subcontrolhistoryFields[4].Descriptor()
	// subcontrolhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subcontrolhistory.DefaultUpdatedAt = subcontrolhistoryDescUpdatedAt.Default.(func() time.Time)
	// subcontrolhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subcontrolhistory.UpdateDefaultUpdatedAt = subcontrolhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subcontrolhistoryDescTags is the schema descriptor for tags field.
	subcontrolhistoryDescTags := subcontrolhistoryFields[11].Descriptor()
	// subcontrolhistory.DefaultTags holds the default value on creation for the tags field.
	subcontrolhistory.DefaultTags = subcontrolhistoryDescTags.Default.([]string)
	// subcontrolhistoryDescID is the schema descriptor for id field.
	subcontrolhistoryDescID := subcontrolhistoryFields[9].Descriptor()
	// subcontrolhistory.DefaultID holds the default value on creation for the id field.
	subcontrolhistory.DefaultID = subcontrolhistoryDescID.Default.(func() string)
	subscriberMixin := schema.Subscriber{}.Mixin()
	subscriber.Policy = privacy.NewPolicies(schema.Subscriber{})
	subscriber.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subscriber.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subscriberMixinHooks0 := subscriberMixin[0].Hooks()
	subscriberMixinHooks3 := subscriberMixin[3].Hooks()
	subscriberMixinHooks4 := subscriberMixin[4].Hooks()
	subscriberHooks := schema.Subscriber{}.Hooks()

	subscriber.Hooks[1] = subscriberMixinHooks0[0]

	subscriber.Hooks[2] = subscriberMixinHooks3[0]

	subscriber.Hooks[3] = subscriberMixinHooks4[0]

	subscriber.Hooks[4] = subscriberHooks[0]
	subscriberMixinInters3 := subscriberMixin[3].Interceptors()
	subscriberMixinInters4 := subscriberMixin[4].Interceptors()
	subscriber.Interceptors[0] = subscriberMixinInters3[0]
	subscriber.Interceptors[1] = subscriberMixinInters4[0]
	subscriberMixinFields0 := subscriberMixin[0].Fields()
	_ = subscriberMixinFields0
	subscriberMixinFields1 := subscriberMixin[1].Fields()
	_ = subscriberMixinFields1
	subscriberMixinFields2 := subscriberMixin[2].Fields()
	_ = subscriberMixinFields2
	subscriberMixinFields4 := subscriberMixin[4].Fields()
	_ = subscriberMixinFields4
	subscriberFields := schema.Subscriber{}.Fields()
	_ = subscriberFields
	// subscriberDescCreatedAt is the schema descriptor for created_at field.
	subscriberDescCreatedAt := subscriberMixinFields0[0].Descriptor()
	// subscriber.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscriber.DefaultCreatedAt = subscriberDescCreatedAt.Default.(func() time.Time)
	// subscriberDescUpdatedAt is the schema descriptor for updated_at field.
	subscriberDescUpdatedAt := subscriberMixinFields0[1].Descriptor()
	// subscriber.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscriber.DefaultUpdatedAt = subscriberDescUpdatedAt.Default.(func() time.Time)
	// subscriber.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscriber.UpdateDefaultUpdatedAt = subscriberDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriberDescTags is the schema descriptor for tags field.
	subscriberDescTags := subscriberMixinFields2[0].Descriptor()
	// subscriber.DefaultTags holds the default value on creation for the tags field.
	subscriber.DefaultTags = subscriberDescTags.Default.([]string)
	// subscriberDescOwnerID is the schema descriptor for owner_id field.
	subscriberDescOwnerID := subscriberMixinFields4[0].Descriptor()
	// subscriber.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	subscriber.OwnerIDValidator = subscriberDescOwnerID.Validators[0].(func(string) error)
	// subscriberDescEmail is the schema descriptor for email field.
	subscriberDescEmail := subscriberFields[0].Descriptor()
	// subscriber.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	subscriber.EmailValidator = subscriberDescEmail.Validators[0].(func(string) error)
	// subscriberDescPhoneNumber is the schema descriptor for phone_number field.
	subscriberDescPhoneNumber := subscriberFields[1].Descriptor()
	// subscriber.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	subscriber.PhoneNumberValidator = subscriberDescPhoneNumber.Validators[0].(func(string) error)
	// subscriberDescVerifiedEmail is the schema descriptor for verified_email field.
	subscriberDescVerifiedEmail := subscriberFields[2].Descriptor()
	// subscriber.DefaultVerifiedEmail holds the default value on creation for the verified_email field.
	subscriber.DefaultVerifiedEmail = subscriberDescVerifiedEmail.Default.(bool)
	// subscriberDescVerifiedPhone is the schema descriptor for verified_phone field.
	subscriberDescVerifiedPhone := subscriberFields[3].Descriptor()
	// subscriber.DefaultVerifiedPhone holds the default value on creation for the verified_phone field.
	subscriber.DefaultVerifiedPhone = subscriberDescVerifiedPhone.Default.(bool)
	// subscriberDescActive is the schema descriptor for active field.
	subscriberDescActive := subscriberFields[4].Descriptor()
	// subscriber.DefaultActive holds the default value on creation for the active field.
	subscriber.DefaultActive = subscriberDescActive.Default.(bool)
	// subscriberDescToken is the schema descriptor for token field.
	subscriberDescToken := subscriberFields[5].Descriptor()
	// subscriber.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	subscriber.TokenValidator = subscriberDescToken.Validators[0].(func(string) error)
	// subscriberDescSecret is the schema descriptor for secret field.
	subscriberDescSecret := subscriberFields[7].Descriptor()
	// subscriber.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	subscriber.SecretValidator = subscriberDescSecret.Validators[0].(func([]byte) error)
	// subscriberDescID is the schema descriptor for id field.
	subscriberDescID := subscriberMixinFields1[0].Descriptor()
	// subscriber.DefaultID holds the default value on creation for the id field.
	subscriber.DefaultID = subscriberDescID.Default.(func() string)
	tfasettingMixin := schema.TFASetting{}.Mixin()
	tfasetting.Policy = privacy.NewPolicies(schema.TFASetting{})
	tfasetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tfasetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tfasettingMixinHooks0 := tfasettingMixin[0].Hooks()
	tfasettingMixinHooks2 := tfasettingMixin[2].Hooks()
	tfasettingMixinHooks3 := tfasettingMixin[3].Hooks()
	tfasettingHooks := schema.TFASetting{}.Hooks()

	tfasetting.Hooks[1] = tfasettingMixinHooks0[0]

	tfasetting.Hooks[2] = tfasettingMixinHooks2[0]

	tfasetting.Hooks[3] = tfasettingMixinHooks3[0]

	tfasetting.Hooks[4] = tfasettingHooks[0]

	tfasetting.Hooks[5] = tfasettingHooks[1]
	tfasettingMixinInters2 := tfasettingMixin[2].Interceptors()
	tfasetting.Interceptors[0] = tfasettingMixinInters2[0]
	tfasettingMixinFields0 := tfasettingMixin[0].Fields()
	_ = tfasettingMixinFields0
	tfasettingMixinFields1 := tfasettingMixin[1].Fields()
	_ = tfasettingMixinFields1
	tfasettingFields := schema.TFASetting{}.Fields()
	_ = tfasettingFields
	// tfasettingDescCreatedAt is the schema descriptor for created_at field.
	tfasettingDescCreatedAt := tfasettingMixinFields0[0].Descriptor()
	// tfasetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	tfasetting.DefaultCreatedAt = tfasettingDescCreatedAt.Default.(func() time.Time)
	// tfasettingDescUpdatedAt is the schema descriptor for updated_at field.
	tfasettingDescUpdatedAt := tfasettingMixinFields0[1].Descriptor()
	// tfasetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tfasetting.DefaultUpdatedAt = tfasettingDescUpdatedAt.Default.(func() time.Time)
	// tfasetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tfasetting.UpdateDefaultUpdatedAt = tfasettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tfasettingDescVerified is the schema descriptor for verified field.
	tfasettingDescVerified := tfasettingFields[1].Descriptor()
	// tfasetting.DefaultVerified holds the default value on creation for the verified field.
	tfasetting.DefaultVerified = tfasettingDescVerified.Default.(bool)
	// tfasettingDescPhoneOtpAllowed is the schema descriptor for phone_otp_allowed field.
	tfasettingDescPhoneOtpAllowed := tfasettingFields[3].Descriptor()
	// tfasetting.DefaultPhoneOtpAllowed holds the default value on creation for the phone_otp_allowed field.
	tfasetting.DefaultPhoneOtpAllowed = tfasettingDescPhoneOtpAllowed.Default.(bool)
	// tfasettingDescEmailOtpAllowed is the schema descriptor for email_otp_allowed field.
	tfasettingDescEmailOtpAllowed := tfasettingFields[4].Descriptor()
	// tfasetting.DefaultEmailOtpAllowed holds the default value on creation for the email_otp_allowed field.
	tfasetting.DefaultEmailOtpAllowed = tfasettingDescEmailOtpAllowed.Default.(bool)
	// tfasettingDescTotpAllowed is the schema descriptor for totp_allowed field.
	tfasettingDescTotpAllowed := tfasettingFields[5].Descriptor()
	// tfasetting.DefaultTotpAllowed holds the default value on creation for the totp_allowed field.
	tfasetting.DefaultTotpAllowed = tfasettingDescTotpAllowed.Default.(bool)
	// tfasettingDescID is the schema descriptor for id field.
	tfasettingDescID := tfasettingMixinFields1[0].Descriptor()
	// tfasetting.DefaultID holds the default value on creation for the id field.
	tfasetting.DefaultID = tfasettingDescID.Default.(func() string)
	taskMixin := schema.Task{}.Mixin()
	task.Policy = privacy.NewPolicies(schema.Task{})
	task.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := task.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	taskMixinHooks0 := taskMixin[0].Hooks()
	taskMixinHooks1 := taskMixin[1].Hooks()
	taskMixinHooks2 := taskMixin[2].Hooks()
	taskMixinHooks4 := taskMixin[4].Hooks()
	taskHooks := schema.Task{}.Hooks()

	task.Hooks[1] = taskMixinHooks0[0]

	task.Hooks[2] = taskMixinHooks1[0]

	task.Hooks[3] = taskMixinHooks2[0]

	task.Hooks[4] = taskMixinHooks4[0]

	task.Hooks[5] = taskMixinHooks4[1]

	task.Hooks[6] = taskMixinHooks4[2]

	task.Hooks[7] = taskHooks[0]

	task.Hooks[8] = taskHooks[1]
	taskMixinInters2 := taskMixin[2].Interceptors()
	taskMixinInters4 := taskMixin[4].Interceptors()
	task.Interceptors[0] = taskMixinInters2[0]
	task.Interceptors[1] = taskMixinInters4[0]
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskMixinFields1 := taskMixin[1].Fields()
	_ = taskMixinFields1
	taskMixinFields3 := taskMixin[3].Fields()
	_ = taskMixinFields3
	taskMixinFields4 := taskMixin[4].Fields()
	_ = taskMixinFields4
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskMixinFields0[0].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescUpdatedAt is the schema descriptor for updated_at field.
	taskDescUpdatedAt := taskMixinFields0[1].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
	// task.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	task.UpdateDefaultUpdatedAt = taskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskDescDisplayID is the schema descriptor for display_id field.
	taskDescDisplayID := taskMixinFields1[1].Descriptor()
	// task.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	task.DisplayIDValidator = taskDescDisplayID.Validators[0].(func(string) error)
	// taskDescTags is the schema descriptor for tags field.
	taskDescTags := taskMixinFields3[0].Descriptor()
	// task.DefaultTags holds the default value on creation for the tags field.
	task.DefaultTags = taskDescTags.Default.([]string)
	// taskDescOwnerID is the schema descriptor for owner_id field.
	taskDescOwnerID := taskMixinFields4[0].Descriptor()
	// task.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	task.OwnerIDValidator = taskDescOwnerID.Validators[0].(func(string) error)
	// taskDescTitle is the schema descriptor for title field.
	taskDescTitle := taskFields[0].Descriptor()
	// task.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	task.TitleValidator = taskDescTitle.Validators[0].(func(string) error)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskMixinFields1[0].Descriptor()
	// task.DefaultID holds the default value on creation for the id field.
	task.DefaultID = taskDescID.Default.(func() string)
	taskhistoryInters := schema.TaskHistory{}.Interceptors()
	taskhistory.Interceptors[0] = taskhistoryInters[0]
	taskhistoryFields := schema.TaskHistory{}.Fields()
	_ = taskhistoryFields
	// taskhistoryDescHistoryTime is the schema descriptor for history_time field.
	taskhistoryDescHistoryTime := taskhistoryFields[0].Descriptor()
	// taskhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	taskhistory.DefaultHistoryTime = taskhistoryDescHistoryTime.Default.(func() time.Time)
	// taskhistoryDescCreatedAt is the schema descriptor for created_at field.
	taskhistoryDescCreatedAt := taskhistoryFields[3].Descriptor()
	// taskhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	taskhistory.DefaultCreatedAt = taskhistoryDescCreatedAt.Default.(func() time.Time)
	// taskhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	taskhistoryDescUpdatedAt := taskhistoryFields[4].Descriptor()
	// taskhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	taskhistory.DefaultUpdatedAt = taskhistoryDescUpdatedAt.Default.(func() time.Time)
	// taskhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	taskhistory.UpdateDefaultUpdatedAt = taskhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskhistoryDescTags is the schema descriptor for tags field.
	taskhistoryDescTags := taskhistoryFields[11].Descriptor()
	// taskhistory.DefaultTags holds the default value on creation for the tags field.
	taskhistory.DefaultTags = taskhistoryDescTags.Default.([]string)
	// taskhistoryDescID is the schema descriptor for id field.
	taskhistoryDescID := taskhistoryFields[7].Descriptor()
	// taskhistory.DefaultID holds the default value on creation for the id field.
	taskhistory.DefaultID = taskhistoryDescID.Default.(func() string)
	templateMixin := schema.Template{}.Mixin()
	template.Policy = privacy.NewPolicies(schema.Template{})
	template.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := template.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	templateMixinHooks0 := templateMixin[0].Hooks()
	templateMixinHooks1 := templateMixin[1].Hooks()
	templateMixinHooks4 := templateMixin[4].Hooks()

	template.Hooks[1] = templateMixinHooks0[0]

	template.Hooks[2] = templateMixinHooks1[0]

	template.Hooks[3] = templateMixinHooks4[0]
	templateMixinInters1 := templateMixin[1].Interceptors()
	templateMixinInters4 := templateMixin[4].Interceptors()
	template.Interceptors[0] = templateMixinInters1[0]
	template.Interceptors[1] = templateMixinInters4[0]
	templateMixinFields0 := templateMixin[0].Fields()
	_ = templateMixinFields0
	templateMixinFields2 := templateMixin[2].Fields()
	_ = templateMixinFields2
	templateMixinFields3 := templateMixin[3].Fields()
	_ = templateMixinFields3
	templateMixinFields4 := templateMixin[4].Fields()
	_ = templateMixinFields4
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreatedAt is the schema descriptor for created_at field.
	templateDescCreatedAt := templateMixinFields0[0].Descriptor()
	// template.DefaultCreatedAt holds the default value on creation for the created_at field.
	template.DefaultCreatedAt = templateDescCreatedAt.Default.(func() time.Time)
	// templateDescUpdatedAt is the schema descriptor for updated_at field.
	templateDescUpdatedAt := templateMixinFields0[1].Descriptor()
	// template.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	template.DefaultUpdatedAt = templateDescUpdatedAt.Default.(func() time.Time)
	// template.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	template.UpdateDefaultUpdatedAt = templateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templateDescTags is the schema descriptor for tags field.
	templateDescTags := templateMixinFields3[0].Descriptor()
	// template.DefaultTags holds the default value on creation for the tags field.
	template.DefaultTags = templateDescTags.Default.([]string)
	// templateDescOwnerID is the schema descriptor for owner_id field.
	templateDescOwnerID := templateMixinFields4[0].Descriptor()
	// template.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	template.OwnerIDValidator = templateDescOwnerID.Validators[0].(func(string) error)
	// templateDescName is the schema descriptor for name field.
	templateDescName := templateFields[0].Descriptor()
	// template.NameValidator is a validator for the "name" field. It is called by the builders before save.
	template.NameValidator = templateDescName.Validators[0].(func(string) error)
	// templateDescID is the schema descriptor for id field.
	templateDescID := templateMixinFields2[0].Descriptor()
	// template.DefaultID holds the default value on creation for the id field.
	template.DefaultID = templateDescID.Default.(func() string)
	templatehistoryInters := schema.TemplateHistory{}.Interceptors()
	templatehistory.Interceptors[0] = templatehistoryInters[0]
	templatehistoryFields := schema.TemplateHistory{}.Fields()
	_ = templatehistoryFields
	// templatehistoryDescHistoryTime is the schema descriptor for history_time field.
	templatehistoryDescHistoryTime := templatehistoryFields[0].Descriptor()
	// templatehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	templatehistory.DefaultHistoryTime = templatehistoryDescHistoryTime.Default.(func() time.Time)
	// templatehistoryDescCreatedAt is the schema descriptor for created_at field.
	templatehistoryDescCreatedAt := templatehistoryFields[3].Descriptor()
	// templatehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	templatehistory.DefaultCreatedAt = templatehistoryDescCreatedAt.Default.(func() time.Time)
	// templatehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	templatehistoryDescUpdatedAt := templatehistoryFields[4].Descriptor()
	// templatehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	templatehistory.DefaultUpdatedAt = templatehistoryDescUpdatedAt.Default.(func() time.Time)
	// templatehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	templatehistory.UpdateDefaultUpdatedAt = templatehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templatehistoryDescTags is the schema descriptor for tags field.
	templatehistoryDescTags := templatehistoryFields[10].Descriptor()
	// templatehistory.DefaultTags holds the default value on creation for the tags field.
	templatehistory.DefaultTags = templatehistoryDescTags.Default.([]string)
	// templatehistoryDescID is the schema descriptor for id field.
	templatehistoryDescID := templatehistoryFields[9].Descriptor()
	// templatehistory.DefaultID holds the default value on creation for the id field.
	templatehistory.DefaultID = templatehistoryDescID.Default.(func() string)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks0 := userMixin[0].Hooks()
	userMixinHooks1 := userMixin[1].Hooks()
	userMixinHooks2 := userMixin[2].Hooks()
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userMixinHooks0[0]

	user.Hooks[2] = userMixinHooks1[0]

	user.Hooks[3] = userMixinHooks2[0]

	user.Hooks[4] = userHooks[0]

	user.Hooks[5] = userHooks[1]

	user.Hooks[6] = userHooks[2]
	userMixinInters1 := userMixin[1].Interceptors()
	userInters := schema.User{}.Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	user.Interceptors[1] = userInters[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields2 := userMixin[2].Fields()
	_ = userMixinFields2
	userMixinFields3 := userMixin[3].Fields()
	_ = userMixinFields3
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescDisplayID is the schema descriptor for display_id field.
	userDescDisplayID := userMixinFields2[1].Descriptor()
	// user.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	user.DisplayIDValidator = userDescDisplayID.Validators[0].(func(string) error)
	// userDescTags is the schema descriptor for tags field.
	userDescTags := userMixinFields3[0].Descriptor()
	// user.DefaultTags holds the default value on creation for the tags field.
	user.DefaultTags = userDescTags.Default.([]string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[1].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[2].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescDisplayName is the schema descriptor for display_name field.
	userDescDisplayName := userFields[3].Descriptor()
	// user.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	user.DisplayNameValidator = func() func(string) error {
		validators := userDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	userDescAvatarRemoteURL := userFields[4].Descriptor()
	// user.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	user.AvatarRemoteURLValidator = func() func(string) error {
		validators := userDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userDescAvatarUpdatedAt := userFields[6].Descriptor()
	// user.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	user.DefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	user.UpdateDefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescLastSeen is the schema descriptor for last_seen field.
	userDescLastSeen := userFields[7].Descriptor()
	// user.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	user.UpdateDefaultLastSeen = userDescLastSeen.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields2[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
	userhistoryInters := schema.UserHistory{}.Interceptors()
	userhistory.Interceptors[0] = userhistoryInters[0]
	userhistoryFields := schema.UserHistory{}.Fields()
	_ = userhistoryFields
	// userhistoryDescHistoryTime is the schema descriptor for history_time field.
	userhistoryDescHistoryTime := userhistoryFields[0].Descriptor()
	// userhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	userhistory.DefaultHistoryTime = userhistoryDescHistoryTime.Default.(func() time.Time)
	// userhistoryDescCreatedAt is the schema descriptor for created_at field.
	userhistoryDescCreatedAt := userhistoryFields[3].Descriptor()
	// userhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	userhistory.DefaultCreatedAt = userhistoryDescCreatedAt.Default.(func() time.Time)
	// userhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	userhistoryDescUpdatedAt := userhistoryFields[4].Descriptor()
	// userhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userhistory.DefaultUpdatedAt = userhistoryDescUpdatedAt.Default.(func() time.Time)
	// userhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	userhistory.UpdateDefaultUpdatedAt = userhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userhistoryDescTags is the schema descriptor for tags field.
	userhistoryDescTags := userhistoryFields[11].Descriptor()
	// userhistory.DefaultTags holds the default value on creation for the tags field.
	userhistory.DefaultTags = userhistoryDescTags.Default.([]string)
	// userhistoryDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userhistoryDescAvatarUpdatedAt := userhistoryFields[18].Descriptor()
	// userhistory.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	userhistory.DefaultAvatarUpdatedAt = userhistoryDescAvatarUpdatedAt.Default.(func() time.Time)
	// userhistory.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	userhistory.UpdateDefaultAvatarUpdatedAt = userhistoryDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userhistoryDescLastSeen is the schema descriptor for last_seen field.
	userhistoryDescLastSeen := userhistoryFields[19].Descriptor()
	// userhistory.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	userhistory.UpdateDefaultLastSeen = userhistoryDescLastSeen.UpdateDefault.(func() time.Time)
	// userhistoryDescID is the schema descriptor for id field.
	userhistoryDescID := userhistoryFields[9].Descriptor()
	// userhistory.DefaultID holds the default value on creation for the id field.
	userhistory.DefaultID = userhistoryDescID.Default.(func() string)
	usersettingMixin := schema.UserSetting{}.Mixin()
	usersetting.Policy = privacy.NewPolicies(schema.UserSetting{})
	usersetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usersetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usersettingMixinHooks0 := usersettingMixin[0].Hooks()
	usersettingMixinHooks3 := usersettingMixin[3].Hooks()
	usersettingHooks := schema.UserSetting{}.Hooks()

	usersetting.Hooks[1] = usersettingMixinHooks0[0]

	usersetting.Hooks[2] = usersettingMixinHooks3[0]

	usersetting.Hooks[3] = usersettingHooks[0]
	usersettingMixinInters3 := usersettingMixin[3].Interceptors()
	usersettingInters := schema.UserSetting{}.Interceptors()
	usersetting.Interceptors[0] = usersettingMixinInters3[0]
	usersetting.Interceptors[1] = usersettingInters[0]
	usersettingMixinFields0 := usersettingMixin[0].Fields()
	_ = usersettingMixinFields0
	usersettingMixinFields1 := usersettingMixin[1].Fields()
	_ = usersettingMixinFields1
	usersettingMixinFields2 := usersettingMixin[2].Fields()
	_ = usersettingMixinFields2
	usersettingFields := schema.UserSetting{}.Fields()
	_ = usersettingFields
	// usersettingDescCreatedAt is the schema descriptor for created_at field.
	usersettingDescCreatedAt := usersettingMixinFields0[0].Descriptor()
	// usersetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersetting.DefaultCreatedAt = usersettingDescCreatedAt.Default.(func() time.Time)
	// usersettingDescUpdatedAt is the schema descriptor for updated_at field.
	usersettingDescUpdatedAt := usersettingMixinFields0[1].Descriptor()
	// usersetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersetting.DefaultUpdatedAt = usersettingDescUpdatedAt.Default.(func() time.Time)
	// usersetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersetting.UpdateDefaultUpdatedAt = usersettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettingDescTags is the schema descriptor for tags field.
	usersettingDescTags := usersettingMixinFields2[0].Descriptor()
	// usersetting.DefaultTags holds the default value on creation for the tags field.
	usersetting.DefaultTags = usersettingDescTags.Default.([]string)
	// usersettingDescLocked is the schema descriptor for locked field.
	usersettingDescLocked := usersettingFields[1].Descriptor()
	// usersetting.DefaultLocked holds the default value on creation for the locked field.
	usersetting.DefaultLocked = usersettingDescLocked.Default.(bool)
	// usersettingDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettingDescEmailConfirmed := usersettingFields[5].Descriptor()
	// usersetting.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersetting.DefaultEmailConfirmed = usersettingDescEmailConfirmed.Default.(bool)
	// usersettingDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettingDescIsWebauthnAllowed := usersettingFields[6].Descriptor()
	// usersetting.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersetting.DefaultIsWebauthnAllowed = usersettingDescIsWebauthnAllowed.Default.(bool)
	// usersettingDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettingDescIsTfaEnabled := usersettingFields[7].Descriptor()
	// usersetting.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersetting.DefaultIsTfaEnabled = usersettingDescIsTfaEnabled.Default.(bool)
	// usersettingDescID is the schema descriptor for id field.
	usersettingDescID := usersettingMixinFields1[0].Descriptor()
	// usersetting.DefaultID holds the default value on creation for the id field.
	usersetting.DefaultID = usersettingDescID.Default.(func() string)
	usersettinghistoryInters := schema.UserSettingHistory{}.Interceptors()
	usersettinghistory.Interceptors[0] = usersettinghistoryInters[0]
	usersettinghistoryFields := schema.UserSettingHistory{}.Fields()
	_ = usersettinghistoryFields
	// usersettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	usersettinghistoryDescHistoryTime := usersettinghistoryFields[0].Descriptor()
	// usersettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	usersettinghistory.DefaultHistoryTime = usersettinghistoryDescHistoryTime.Default.(func() time.Time)
	// usersettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	usersettinghistoryDescCreatedAt := usersettinghistoryFields[3].Descriptor()
	// usersettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersettinghistory.DefaultCreatedAt = usersettinghistoryDescCreatedAt.Default.(func() time.Time)
	// usersettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	usersettinghistoryDescUpdatedAt := usersettinghistoryFields[4].Descriptor()
	// usersettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersettinghistory.DefaultUpdatedAt = usersettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// usersettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersettinghistory.UpdateDefaultUpdatedAt = usersettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettinghistoryDescTags is the schema descriptor for tags field.
	usersettinghistoryDescTags := usersettinghistoryFields[8].Descriptor()
	// usersettinghistory.DefaultTags holds the default value on creation for the tags field.
	usersettinghistory.DefaultTags = usersettinghistoryDescTags.Default.([]string)
	// usersettinghistoryDescLocked is the schema descriptor for locked field.
	usersettinghistoryDescLocked := usersettinghistoryFields[12].Descriptor()
	// usersettinghistory.DefaultLocked holds the default value on creation for the locked field.
	usersettinghistory.DefaultLocked = usersettinghistoryDescLocked.Default.(bool)
	// usersettinghistoryDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettinghistoryDescEmailConfirmed := usersettinghistoryFields[16].Descriptor()
	// usersettinghistory.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersettinghistory.DefaultEmailConfirmed = usersettinghistoryDescEmailConfirmed.Default.(bool)
	// usersettinghistoryDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettinghistoryDescIsWebauthnAllowed := usersettinghistoryFields[17].Descriptor()
	// usersettinghistory.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersettinghistory.DefaultIsWebauthnAllowed = usersettinghistoryDescIsWebauthnAllowed.Default.(bool)
	// usersettinghistoryDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettinghistoryDescIsTfaEnabled := usersettinghistoryFields[18].Descriptor()
	// usersettinghistory.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersettinghistory.DefaultIsTfaEnabled = usersettinghistoryDescIsTfaEnabled.Default.(bool)
	// usersettinghistoryDescID is the schema descriptor for id field.
	usersettinghistoryDescID := usersettinghistoryFields[7].Descriptor()
	// usersettinghistory.DefaultID holds the default value on creation for the id field.
	usersettinghistory.DefaultID = usersettinghistoryDescID.Default.(func() string)
	webauthnMixin := schema.Webauthn{}.Mixin()
	webauthnMixinHooks0 := webauthnMixin[0].Hooks()
	webauthnMixinHooks3 := webauthnMixin[3].Hooks()
	webauthn.Hooks[0] = webauthnMixinHooks0[0]
	webauthn.Hooks[1] = webauthnMixinHooks3[0]
	webauthnMixinInters3 := webauthnMixin[3].Interceptors()
	webauthn.Interceptors[0] = webauthnMixinInters3[0]
	webauthnMixinFields0 := webauthnMixin[0].Fields()
	_ = webauthnMixinFields0
	webauthnMixinFields1 := webauthnMixin[1].Fields()
	_ = webauthnMixinFields1
	webauthnMixinFields2 := webauthnMixin[2].Fields()
	_ = webauthnMixinFields2
	webauthnFields := schema.Webauthn{}.Fields()
	_ = webauthnFields
	// webauthnDescCreatedAt is the schema descriptor for created_at field.
	webauthnDescCreatedAt := webauthnMixinFields0[0].Descriptor()
	// webauthn.DefaultCreatedAt holds the default value on creation for the created_at field.
	webauthn.DefaultCreatedAt = webauthnDescCreatedAt.Default.(func() time.Time)
	// webauthnDescUpdatedAt is the schema descriptor for updated_at field.
	webauthnDescUpdatedAt := webauthnMixinFields0[1].Descriptor()
	// webauthn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	webauthn.DefaultUpdatedAt = webauthnDescUpdatedAt.Default.(func() time.Time)
	// webauthn.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	webauthn.UpdateDefaultUpdatedAt = webauthnDescUpdatedAt.UpdateDefault.(func() time.Time)
	// webauthnDescTags is the schema descriptor for tags field.
	webauthnDescTags := webauthnMixinFields2[0].Descriptor()
	// webauthn.DefaultTags holds the default value on creation for the tags field.
	webauthn.DefaultTags = webauthnDescTags.Default.([]string)
	// webauthnDescBackupEligible is the schema descriptor for backup_eligible field.
	webauthnDescBackupEligible := webauthnFields[6].Descriptor()
	// webauthn.DefaultBackupEligible holds the default value on creation for the backup_eligible field.
	webauthn.DefaultBackupEligible = webauthnDescBackupEligible.Default.(bool)
	// webauthnDescBackupState is the schema descriptor for backup_state field.
	webauthnDescBackupState := webauthnFields[7].Descriptor()
	// webauthn.DefaultBackupState holds the default value on creation for the backup_state field.
	webauthn.DefaultBackupState = webauthnDescBackupState.Default.(bool)
	// webauthnDescUserPresent is the schema descriptor for user_present field.
	webauthnDescUserPresent := webauthnFields[8].Descriptor()
	// webauthn.DefaultUserPresent holds the default value on creation for the user_present field.
	webauthn.DefaultUserPresent = webauthnDescUserPresent.Default.(bool)
	// webauthnDescUserVerified is the schema descriptor for user_verified field.
	webauthnDescUserVerified := webauthnFields[9].Descriptor()
	// webauthn.DefaultUserVerified holds the default value on creation for the user_verified field.
	webauthn.DefaultUserVerified = webauthnDescUserVerified.Default.(bool)
	// webauthnDescID is the schema descriptor for id field.
	webauthnDescID := webauthnMixinFields1[0].Descriptor()
	// webauthn.DefaultID holds the default value on creation for the id field.
	webauthn.DefaultID = webauthnDescID.Default.(func() string)
}

const (
	Version = "v0.14.1"                                         // Version of ent codegen.
	Sum     = "h1:fUERL506Pqr92EPHJqr8EYxbPioflJo6PudkrEA8a/s=" // Sum of ent codegen.
)
