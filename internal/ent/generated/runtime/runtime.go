// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/theopenlane/core/internal/ent/generated/actionplan"
	"github.com/theopenlane/core/internal/ent/generated/actionplanhistory"
	"github.com/theopenlane/core/internal/ent/generated/apitoken"
	"github.com/theopenlane/core/internal/ent/generated/asset"
	"github.com/theopenlane/core/internal/ent/generated/assethistory"
	"github.com/theopenlane/core/internal/ent/generated/contact"
	"github.com/theopenlane/core/internal/ent/generated/contacthistory"
	"github.com/theopenlane/core/internal/ent/generated/control"
	"github.com/theopenlane/core/internal/ent/generated/controlhistory"
	"github.com/theopenlane/core/internal/ent/generated/controlimplementation"
	"github.com/theopenlane/core/internal/ent/generated/controlimplementationhistory"
	"github.com/theopenlane/core/internal/ent/generated/controlobjective"
	"github.com/theopenlane/core/internal/ent/generated/controlobjectivehistory"
	"github.com/theopenlane/core/internal/ent/generated/customdomain"
	"github.com/theopenlane/core/internal/ent/generated/customdomainhistory"
	"github.com/theopenlane/core/internal/ent/generated/dnsverification"
	"github.com/theopenlane/core/internal/ent/generated/dnsverificationhistory"
	"github.com/theopenlane/core/internal/ent/generated/documentdata"
	"github.com/theopenlane/core/internal/ent/generated/documentdatahistory"
	"github.com/theopenlane/core/internal/ent/generated/emailverificationtoken"
	"github.com/theopenlane/core/internal/ent/generated/entity"
	"github.com/theopenlane/core/internal/ent/generated/entityhistory"
	"github.com/theopenlane/core/internal/ent/generated/entitytype"
	"github.com/theopenlane/core/internal/ent/generated/entitytypehistory"
	"github.com/theopenlane/core/internal/ent/generated/event"
	"github.com/theopenlane/core/internal/ent/generated/evidence"
	"github.com/theopenlane/core/internal/ent/generated/evidencehistory"
	"github.com/theopenlane/core/internal/ent/generated/export"
	"github.com/theopenlane/core/internal/ent/generated/file"
	"github.com/theopenlane/core/internal/ent/generated/filehistory"
	"github.com/theopenlane/core/internal/ent/generated/group"
	"github.com/theopenlane/core/internal/ent/generated/grouphistory"
	"github.com/theopenlane/core/internal/ent/generated/groupmembership"
	"github.com/theopenlane/core/internal/ent/generated/groupmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/groupsetting"
	"github.com/theopenlane/core/internal/ent/generated/groupsettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/hush"
	"github.com/theopenlane/core/internal/ent/generated/hushhistory"
	"github.com/theopenlane/core/internal/ent/generated/integration"
	"github.com/theopenlane/core/internal/ent/generated/integrationhistory"
	"github.com/theopenlane/core/internal/ent/generated/internalpolicy"
	"github.com/theopenlane/core/internal/ent/generated/internalpolicyhistory"
	"github.com/theopenlane/core/internal/ent/generated/invite"
	"github.com/theopenlane/core/internal/ent/generated/jobresult"
	"github.com/theopenlane/core/internal/ent/generated/jobrunner"
	"github.com/theopenlane/core/internal/ent/generated/jobrunnerregistrationtoken"
	"github.com/theopenlane/core/internal/ent/generated/jobrunnertoken"
	"github.com/theopenlane/core/internal/ent/generated/jobtemplate"
	"github.com/theopenlane/core/internal/ent/generated/jobtemplatehistory"
	"github.com/theopenlane/core/internal/ent/generated/mappabledomain"
	"github.com/theopenlane/core/internal/ent/generated/mappabledomainhistory"
	"github.com/theopenlane/core/internal/ent/generated/mappedcontrol"
	"github.com/theopenlane/core/internal/ent/generated/mappedcontrolhistory"
	"github.com/theopenlane/core/internal/ent/generated/narrative"
	"github.com/theopenlane/core/internal/ent/generated/narrativehistory"
	"github.com/theopenlane/core/internal/ent/generated/note"
	"github.com/theopenlane/core/internal/ent/generated/notehistory"
	"github.com/theopenlane/core/internal/ent/generated/onboarding"
	"github.com/theopenlane/core/internal/ent/generated/organization"
	"github.com/theopenlane/core/internal/ent/generated/organizationhistory"
	"github.com/theopenlane/core/internal/ent/generated/organizationsetting"
	"github.com/theopenlane/core/internal/ent/generated/organizationsettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/orgmembership"
	"github.com/theopenlane/core/internal/ent/generated/orgmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/orgmodule"
	"github.com/theopenlane/core/internal/ent/generated/orgprice"
	"github.com/theopenlane/core/internal/ent/generated/orgproduct"
	"github.com/theopenlane/core/internal/ent/generated/orgsubscription"
	"github.com/theopenlane/core/internal/ent/generated/orgsubscriptionhistory"
	"github.com/theopenlane/core/internal/ent/generated/passwordresettoken"
	"github.com/theopenlane/core/internal/ent/generated/personalaccesstoken"
	"github.com/theopenlane/core/internal/ent/generated/procedure"
	"github.com/theopenlane/core/internal/ent/generated/procedurehistory"
	"github.com/theopenlane/core/internal/ent/generated/program"
	"github.com/theopenlane/core/internal/ent/generated/programhistory"
	"github.com/theopenlane/core/internal/ent/generated/programmembership"
	"github.com/theopenlane/core/internal/ent/generated/programmembershiphistory"
	"github.com/theopenlane/core/internal/ent/generated/risk"
	"github.com/theopenlane/core/internal/ent/generated/riskhistory"
	"github.com/theopenlane/core/internal/ent/generated/scan"
	"github.com/theopenlane/core/internal/ent/generated/scanhistory"
	"github.com/theopenlane/core/internal/ent/generated/scheduledjob"
	"github.com/theopenlane/core/internal/ent/generated/scheduledjobhistory"
	"github.com/theopenlane/core/internal/ent/generated/scheduledjobrun"
	"github.com/theopenlane/core/internal/ent/generated/standard"
	"github.com/theopenlane/core/internal/ent/generated/standardhistory"
	"github.com/theopenlane/core/internal/ent/generated/subcontrol"
	"github.com/theopenlane/core/internal/ent/generated/subcontrolhistory"
	"github.com/theopenlane/core/internal/ent/generated/subprocessor"
	"github.com/theopenlane/core/internal/ent/generated/subprocessorhistory"
	"github.com/theopenlane/core/internal/ent/generated/subscriber"
	"github.com/theopenlane/core/internal/ent/generated/task"
	"github.com/theopenlane/core/internal/ent/generated/taskhistory"
	"github.com/theopenlane/core/internal/ent/generated/template"
	"github.com/theopenlane/core/internal/ent/generated/templatehistory"
	"github.com/theopenlane/core/internal/ent/generated/tfasetting"
	"github.com/theopenlane/core/internal/ent/generated/trustcenter"
	"github.com/theopenlane/core/internal/ent/generated/trustcentercompliance"
	"github.com/theopenlane/core/internal/ent/generated/trustcentercompliancehistory"
	"github.com/theopenlane/core/internal/ent/generated/trustcenterhistory"
	"github.com/theopenlane/core/internal/ent/generated/trustcentersetting"
	"github.com/theopenlane/core/internal/ent/generated/trustcentersettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/trustcentersubprocessor"
	"github.com/theopenlane/core/internal/ent/generated/trustcentersubprocessorhistory"
	"github.com/theopenlane/core/internal/ent/generated/user"
	"github.com/theopenlane/core/internal/ent/generated/userhistory"
	"github.com/theopenlane/core/internal/ent/generated/usersetting"
	"github.com/theopenlane/core/internal/ent/generated/usersettinghistory"
	"github.com/theopenlane/core/internal/ent/generated/webauthn"
	"github.com/theopenlane/core/internal/ent/schema"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apitokenMixin := schema.APIToken{}.Mixin()
	apitoken.Policy = privacy.NewPolicies(schema.APIToken{})
	apitoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := apitoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	apitokenMixinHooks0 := apitokenMixin[0].Hooks()
	apitokenMixinHooks1 := apitokenMixin[1].Hooks()
	apitokenMixinHooks2 := apitokenMixin[2].Hooks()
	apitokenMixinHooks6 := apitokenMixin[6].Hooks()
	apitokenHooks := schema.APIToken{}.Hooks()

	apitoken.Hooks[1] = apitokenMixinHooks0[0]

	apitoken.Hooks[2] = apitokenMixinHooks1[0]

	apitoken.Hooks[3] = apitokenMixinHooks2[0]

	apitoken.Hooks[4] = apitokenMixinHooks6[0]

	apitoken.Hooks[5] = apitokenHooks[0]

	apitoken.Hooks[6] = apitokenHooks[1]
	apitokenMixinInters1 := apitokenMixin[1].Interceptors()
	apitokenMixinInters2 := apitokenMixin[2].Interceptors()
	apitokenMixinInters6 := apitokenMixin[6].Interceptors()
	apitokenInters := schema.APIToken{}.Interceptors()
	apitoken.Interceptors[0] = apitokenMixinInters1[0]
	apitoken.Interceptors[1] = apitokenMixinInters2[0]
	apitoken.Interceptors[2] = apitokenMixinInters6[0]
	apitoken.Interceptors[3] = apitokenInters[0]
	apitokenMixinFields0 := apitokenMixin[0].Fields()
	_ = apitokenMixinFields0
	apitokenMixinFields3 := apitokenMixin[3].Fields()
	_ = apitokenMixinFields3
	apitokenMixinFields4 := apitokenMixin[4].Fields()
	_ = apitokenMixinFields4
	apitokenMixinFields6 := apitokenMixin[6].Fields()
	_ = apitokenMixinFields6
	apitokenFields := schema.APIToken{}.Fields()
	_ = apitokenFields
	// apitokenDescCreatedAt is the schema descriptor for created_at field.
	apitokenDescCreatedAt := apitokenMixinFields0[0].Descriptor()
	// apitoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	apitoken.DefaultCreatedAt = apitokenDescCreatedAt.Default.(func() time.Time)
	// apitokenDescUpdatedAt is the schema descriptor for updated_at field.
	apitokenDescUpdatedAt := apitokenMixinFields0[1].Descriptor()
	// apitoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apitoken.DefaultUpdatedAt = apitokenDescUpdatedAt.Default.(func() time.Time)
	// apitoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apitoken.UpdateDefaultUpdatedAt = apitokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apitokenDescTags is the schema descriptor for tags field.
	apitokenDescTags := apitokenMixinFields4[0].Descriptor()
	// apitoken.DefaultTags holds the default value on creation for the tags field.
	apitoken.DefaultTags = apitokenDescTags.Default.([]string)
	// apitokenDescOwnerID is the schema descriptor for owner_id field.
	apitokenDescOwnerID := apitokenMixinFields6[0].Descriptor()
	// apitoken.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	apitoken.OwnerIDValidator = apitokenDescOwnerID.Validators[0].(func(string) error)
	// apitokenDescName is the schema descriptor for name field.
	apitokenDescName := apitokenFields[0].Descriptor()
	// apitoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	apitoken.NameValidator = apitokenDescName.Validators[0].(func(string) error)
	// apitokenDescToken is the schema descriptor for token field.
	apitokenDescToken := apitokenFields[1].Descriptor()
	// apitoken.DefaultToken holds the default value on creation for the token field.
	apitoken.DefaultToken = apitokenDescToken.Default.(func() string)
	// apitokenDescIsActive is the schema descriptor for is_active field.
	apitokenDescIsActive := apitokenFields[6].Descriptor()
	// apitoken.DefaultIsActive holds the default value on creation for the is_active field.
	apitoken.DefaultIsActive = apitokenDescIsActive.Default.(bool)
	// apitokenDescID is the schema descriptor for id field.
	apitokenDescID := apitokenMixinFields3[0].Descriptor()
	// apitoken.DefaultID holds the default value on creation for the id field.
	apitoken.DefaultID = apitokenDescID.Default.(func() string)
	actionplanMixin := schema.ActionPlan{}.Mixin()
	actionplan.Policy = privacy.NewPolicies(schema.ActionPlan{})
	actionplan.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := actionplan.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	actionplanMixinHooks0 := actionplanMixin[0].Hooks()
	actionplanMixinHooks1 := actionplanMixin[1].Hooks()
	actionplanMixinHooks2 := actionplanMixin[2].Hooks()
	actionplanMixinHooks5 := actionplanMixin[5].Hooks()
	actionplanMixinHooks7 := actionplanMixin[7].Hooks()
	actionplanMixinHooks8 := actionplanMixin[8].Hooks()

	actionplan.Hooks[1] = actionplanMixinHooks0[0]

	actionplan.Hooks[2] = actionplanMixinHooks1[0]

	actionplan.Hooks[3] = actionplanMixinHooks2[0]

	actionplan.Hooks[4] = actionplanMixinHooks5[0]

	actionplan.Hooks[5] = actionplanMixinHooks7[0]

	actionplan.Hooks[6] = actionplanMixinHooks7[1]

	actionplan.Hooks[7] = actionplanMixinHooks7[2]

	actionplan.Hooks[8] = actionplanMixinHooks8[0]
	actionplanMixinInters1 := actionplanMixin[1].Interceptors()
	actionplanMixinInters2 := actionplanMixin[2].Interceptors()
	actionplanMixinInters8 := actionplanMixin[8].Interceptors()
	actionplan.Interceptors[0] = actionplanMixinInters1[0]
	actionplan.Interceptors[1] = actionplanMixinInters2[0]
	actionplan.Interceptors[2] = actionplanMixinInters8[0]
	actionplanMixinFields0 := actionplanMixin[0].Fields()
	_ = actionplanMixinFields0
	actionplanMixinFields3 := actionplanMixin[3].Fields()
	_ = actionplanMixinFields3
	actionplanMixinFields4 := actionplanMixin[4].Fields()
	_ = actionplanMixinFields4
	actionplanMixinFields5 := actionplanMixin[5].Fields()
	_ = actionplanMixinFields5
	actionplanMixinFields7 := actionplanMixin[7].Fields()
	_ = actionplanMixinFields7
	actionplanMixinFields8 := actionplanMixin[8].Fields()
	_ = actionplanMixinFields8
	actionplanFields := schema.ActionPlan{}.Fields()
	_ = actionplanFields
	// actionplanDescCreatedAt is the schema descriptor for created_at field.
	actionplanDescCreatedAt := actionplanMixinFields0[0].Descriptor()
	// actionplan.DefaultCreatedAt holds the default value on creation for the created_at field.
	actionplan.DefaultCreatedAt = actionplanDescCreatedAt.Default.(func() time.Time)
	// actionplanDescUpdatedAt is the schema descriptor for updated_at field.
	actionplanDescUpdatedAt := actionplanMixinFields0[1].Descriptor()
	// actionplan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	actionplan.DefaultUpdatedAt = actionplanDescUpdatedAt.Default.(func() time.Time)
	// actionplan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	actionplan.UpdateDefaultUpdatedAt = actionplanDescUpdatedAt.UpdateDefault.(func() time.Time)
	// actionplanDescTags is the schema descriptor for tags field.
	actionplanDescTags := actionplanMixinFields4[0].Descriptor()
	// actionplan.DefaultTags holds the default value on creation for the tags field.
	actionplan.DefaultTags = actionplanDescTags.Default.([]string)
	// actionplanDescRevision is the schema descriptor for revision field.
	actionplanDescRevision := actionplanMixinFields5[0].Descriptor()
	// actionplan.DefaultRevision holds the default value on creation for the revision field.
	actionplan.DefaultRevision = actionplanDescRevision.Default.(string)
	// actionplan.RevisionValidator is a validator for the "revision" field. It is called by the builders before save.
	actionplan.RevisionValidator = actionplanDescRevision.Validators[0].(func(string) error)
	// actionplanDescName is the schema descriptor for name field.
	actionplanDescName := actionplanMixinFields7[0].Descriptor()
	// actionplan.NameValidator is a validator for the "name" field. It is called by the builders before save.
	actionplan.NameValidator = actionplanDescName.Validators[0].(func(string) error)
	// actionplanDescApprovalRequired is the schema descriptor for approval_required field.
	actionplanDescApprovalRequired := actionplanMixinFields7[4].Descriptor()
	// actionplan.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	actionplan.DefaultApprovalRequired = actionplanDescApprovalRequired.Default.(bool)
	// actionplanDescReviewDue is the schema descriptor for review_due field.
	actionplanDescReviewDue := actionplanMixinFields7[5].Descriptor()
	// actionplan.DefaultReviewDue holds the default value on creation for the review_due field.
	actionplan.DefaultReviewDue = actionplanDescReviewDue.Default.(time.Time)
	// actionplanDescTagSuggestions is the schema descriptor for tag_suggestions field.
	actionplanDescTagSuggestions := actionplanMixinFields7[10].Descriptor()
	// actionplan.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	actionplan.DefaultTagSuggestions = actionplanDescTagSuggestions.Default.([]string)
	// actionplanDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	actionplanDescDismissedTagSuggestions := actionplanMixinFields7[11].Descriptor()
	// actionplan.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	actionplan.DefaultDismissedTagSuggestions = actionplanDescDismissedTagSuggestions.Default.([]string)
	// actionplanDescControlSuggestions is the schema descriptor for control_suggestions field.
	actionplanDescControlSuggestions := actionplanMixinFields7[12].Descriptor()
	// actionplan.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	actionplan.DefaultControlSuggestions = actionplanDescControlSuggestions.Default.([]string)
	// actionplanDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	actionplanDescDismissedControlSuggestions := actionplanMixinFields7[13].Descriptor()
	// actionplan.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	actionplan.DefaultDismissedControlSuggestions = actionplanDescDismissedControlSuggestions.Default.([]string)
	// actionplanDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	actionplanDescImprovementSuggestions := actionplanMixinFields7[14].Descriptor()
	// actionplan.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	actionplan.DefaultImprovementSuggestions = actionplanDescImprovementSuggestions.Default.([]string)
	// actionplanDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	actionplanDescDismissedImprovementSuggestions := actionplanMixinFields7[15].Descriptor()
	// actionplan.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	actionplan.DefaultDismissedImprovementSuggestions = actionplanDescDismissedImprovementSuggestions.Default.([]string)
	// actionplanDescOwnerID is the schema descriptor for owner_id field.
	actionplanDescOwnerID := actionplanMixinFields8[0].Descriptor()
	// actionplan.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	actionplan.OwnerIDValidator = actionplanDescOwnerID.Validators[0].(func(string) error)
	// actionplanDescID is the schema descriptor for id field.
	actionplanDescID := actionplanMixinFields3[0].Descriptor()
	// actionplan.DefaultID holds the default value on creation for the id field.
	actionplan.DefaultID = actionplanDescID.Default.(func() string)
	actionplanhistory.Policy = privacy.NewPolicies(schema.ActionPlanHistory{})
	actionplanhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := actionplanhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	actionplanhistoryInters := schema.ActionPlanHistory{}.Interceptors()
	actionplanhistory.Interceptors[0] = actionplanhistoryInters[0]
	actionplanhistoryFields := schema.ActionPlanHistory{}.Fields()
	_ = actionplanhistoryFields
	// actionplanhistoryDescHistoryTime is the schema descriptor for history_time field.
	actionplanhistoryDescHistoryTime := actionplanhistoryFields[0].Descriptor()
	// actionplanhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	actionplanhistory.DefaultHistoryTime = actionplanhistoryDescHistoryTime.Default.(func() time.Time)
	// actionplanhistoryDescCreatedAt is the schema descriptor for created_at field.
	actionplanhistoryDescCreatedAt := actionplanhistoryFields[3].Descriptor()
	// actionplanhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	actionplanhistory.DefaultCreatedAt = actionplanhistoryDescCreatedAt.Default.(func() time.Time)
	// actionplanhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	actionplanhistoryDescUpdatedAt := actionplanhistoryFields[4].Descriptor()
	// actionplanhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	actionplanhistory.DefaultUpdatedAt = actionplanhistoryDescUpdatedAt.Default.(func() time.Time)
	// actionplanhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	actionplanhistory.UpdateDefaultUpdatedAt = actionplanhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// actionplanhistoryDescTags is the schema descriptor for tags field.
	actionplanhistoryDescTags := actionplanhistoryFields[10].Descriptor()
	// actionplanhistory.DefaultTags holds the default value on creation for the tags field.
	actionplanhistory.DefaultTags = actionplanhistoryDescTags.Default.([]string)
	// actionplanhistoryDescRevision is the schema descriptor for revision field.
	actionplanhistoryDescRevision := actionplanhistoryFields[11].Descriptor()
	// actionplanhistory.DefaultRevision holds the default value on creation for the revision field.
	actionplanhistory.DefaultRevision = actionplanhistoryDescRevision.Default.(string)
	// actionplanhistoryDescApprovalRequired is the schema descriptor for approval_required field.
	actionplanhistoryDescApprovalRequired := actionplanhistoryFields[16].Descriptor()
	// actionplanhistory.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	actionplanhistory.DefaultApprovalRequired = actionplanhistoryDescApprovalRequired.Default.(bool)
	// actionplanhistoryDescReviewDue is the schema descriptor for review_due field.
	actionplanhistoryDescReviewDue := actionplanhistoryFields[17].Descriptor()
	// actionplanhistory.DefaultReviewDue holds the default value on creation for the review_due field.
	actionplanhistory.DefaultReviewDue = actionplanhistoryDescReviewDue.Default.(time.Time)
	// actionplanhistoryDescTagSuggestions is the schema descriptor for tag_suggestions field.
	actionplanhistoryDescTagSuggestions := actionplanhistoryFields[22].Descriptor()
	// actionplanhistory.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	actionplanhistory.DefaultTagSuggestions = actionplanhistoryDescTagSuggestions.Default.([]string)
	// actionplanhistoryDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	actionplanhistoryDescDismissedTagSuggestions := actionplanhistoryFields[23].Descriptor()
	// actionplanhistory.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	actionplanhistory.DefaultDismissedTagSuggestions = actionplanhistoryDescDismissedTagSuggestions.Default.([]string)
	// actionplanhistoryDescControlSuggestions is the schema descriptor for control_suggestions field.
	actionplanhistoryDescControlSuggestions := actionplanhistoryFields[24].Descriptor()
	// actionplanhistory.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	actionplanhistory.DefaultControlSuggestions = actionplanhistoryDescControlSuggestions.Default.([]string)
	// actionplanhistoryDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	actionplanhistoryDescDismissedControlSuggestions := actionplanhistoryFields[25].Descriptor()
	// actionplanhistory.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	actionplanhistory.DefaultDismissedControlSuggestions = actionplanhistoryDescDismissedControlSuggestions.Default.([]string)
	// actionplanhistoryDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	actionplanhistoryDescImprovementSuggestions := actionplanhistoryFields[26].Descriptor()
	// actionplanhistory.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	actionplanhistory.DefaultImprovementSuggestions = actionplanhistoryDescImprovementSuggestions.Default.([]string)
	// actionplanhistoryDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	actionplanhistoryDescDismissedImprovementSuggestions := actionplanhistoryFields[27].Descriptor()
	// actionplanhistory.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	actionplanhistory.DefaultDismissedImprovementSuggestions = actionplanhistoryDescDismissedImprovementSuggestions.Default.([]string)
	// actionplanhistoryDescID is the schema descriptor for id field.
	actionplanhistoryDescID := actionplanhistoryFields[9].Descriptor()
	// actionplanhistory.DefaultID holds the default value on creation for the id field.
	actionplanhistory.DefaultID = actionplanhistoryDescID.Default.(func() string)
	assetMixin := schema.Asset{}.Mixin()
	asset.Policy = privacy.NewPolicies(schema.Asset{})
	asset.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := asset.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	assetMixinHooks0 := assetMixin[0].Hooks()
	assetMixinHooks1 := assetMixin[1].Hooks()
	assetMixinHooks2 := assetMixin[2].Hooks()
	assetMixinHooks6 := assetMixin[6].Hooks()
	assetMixinHooks7 := assetMixin[7].Hooks()

	asset.Hooks[1] = assetMixinHooks0[0]

	asset.Hooks[2] = assetMixinHooks1[0]

	asset.Hooks[3] = assetMixinHooks2[0]

	asset.Hooks[4] = assetMixinHooks6[0]

	asset.Hooks[5] = assetMixinHooks7[0]

	asset.Hooks[6] = assetMixinHooks7[1]

	asset.Hooks[7] = assetMixinHooks7[2]
	assetMixinInters1 := assetMixin[1].Interceptors()
	assetMixinInters2 := assetMixin[2].Interceptors()
	assetMixinInters6 := assetMixin[6].Interceptors()
	asset.Interceptors[0] = assetMixinInters1[0]
	asset.Interceptors[1] = assetMixinInters2[0]
	asset.Interceptors[2] = assetMixinInters6[0]
	assetMixinFields0 := assetMixin[0].Fields()
	_ = assetMixinFields0
	assetMixinFields3 := assetMixin[3].Fields()
	_ = assetMixinFields3
	assetMixinFields4 := assetMixin[4].Fields()
	_ = assetMixinFields4
	assetMixinFields6 := assetMixin[6].Fields()
	_ = assetMixinFields6
	assetFields := schema.Asset{}.Fields()
	_ = assetFields
	// assetDescCreatedAt is the schema descriptor for created_at field.
	assetDescCreatedAt := assetMixinFields0[0].Descriptor()
	// asset.DefaultCreatedAt holds the default value on creation for the created_at field.
	asset.DefaultCreatedAt = assetDescCreatedAt.Default.(func() time.Time)
	// assetDescUpdatedAt is the schema descriptor for updated_at field.
	assetDescUpdatedAt := assetMixinFields0[1].Descriptor()
	// asset.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	asset.DefaultUpdatedAt = assetDescUpdatedAt.Default.(func() time.Time)
	// asset.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	asset.UpdateDefaultUpdatedAt = assetDescUpdatedAt.UpdateDefault.(func() time.Time)
	// assetDescTags is the schema descriptor for tags field.
	assetDescTags := assetMixinFields4[0].Descriptor()
	// asset.DefaultTags holds the default value on creation for the tags field.
	asset.DefaultTags = assetDescTags.Default.([]string)
	// assetDescOwnerID is the schema descriptor for owner_id field.
	assetDescOwnerID := assetMixinFields6[0].Descriptor()
	// asset.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	asset.OwnerIDValidator = assetDescOwnerID.Validators[0].(func(string) error)
	// assetDescName is the schema descriptor for name field.
	assetDescName := assetFields[1].Descriptor()
	// asset.NameValidator is a validator for the "name" field. It is called by the builders before save.
	asset.NameValidator = assetDescName.Validators[0].(func(string) error)
	// assetDescID is the schema descriptor for id field.
	assetDescID := assetMixinFields3[0].Descriptor()
	// asset.DefaultID holds the default value on creation for the id field.
	asset.DefaultID = assetDescID.Default.(func() string)
	assethistory.Policy = privacy.NewPolicies(schema.AssetHistory{})
	assethistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := assethistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	assethistoryInters := schema.AssetHistory{}.Interceptors()
	assethistory.Interceptors[0] = assethistoryInters[0]
	assethistoryFields := schema.AssetHistory{}.Fields()
	_ = assethistoryFields
	// assethistoryDescHistoryTime is the schema descriptor for history_time field.
	assethistoryDescHistoryTime := assethistoryFields[0].Descriptor()
	// assethistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	assethistory.DefaultHistoryTime = assethistoryDescHistoryTime.Default.(func() time.Time)
	// assethistoryDescCreatedAt is the schema descriptor for created_at field.
	assethistoryDescCreatedAt := assethistoryFields[3].Descriptor()
	// assethistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	assethistory.DefaultCreatedAt = assethistoryDescCreatedAt.Default.(func() time.Time)
	// assethistoryDescUpdatedAt is the schema descriptor for updated_at field.
	assethistoryDescUpdatedAt := assethistoryFields[4].Descriptor()
	// assethistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	assethistory.DefaultUpdatedAt = assethistoryDescUpdatedAt.Default.(func() time.Time)
	// assethistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	assethistory.UpdateDefaultUpdatedAt = assethistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// assethistoryDescTags is the schema descriptor for tags field.
	assethistoryDescTags := assethistoryFields[10].Descriptor()
	// assethistory.DefaultTags holds the default value on creation for the tags field.
	assethistory.DefaultTags = assethistoryDescTags.Default.([]string)
	// assethistoryDescID is the schema descriptor for id field.
	assethistoryDescID := assethistoryFields[9].Descriptor()
	// assethistory.DefaultID holds the default value on creation for the id field.
	assethistory.DefaultID = assethistoryDescID.Default.(func() string)
	contactMixin := schema.Contact{}.Mixin()
	contact.Policy = privacy.NewPolicies(schema.Contact{})
	contact.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := contact.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	contactMixinHooks0 := contactMixin[0].Hooks()
	contactMixinHooks1 := contactMixin[1].Hooks()
	contactMixinHooks2 := contactMixin[2].Hooks()
	contactMixinHooks6 := contactMixin[6].Hooks()
	contactHooks := schema.Contact{}.Hooks()

	contact.Hooks[1] = contactMixinHooks0[0]

	contact.Hooks[2] = contactMixinHooks1[0]

	contact.Hooks[3] = contactMixinHooks2[0]

	contact.Hooks[4] = contactMixinHooks6[0]

	contact.Hooks[5] = contactHooks[0]
	contactMixinInters1 := contactMixin[1].Interceptors()
	contactMixinInters2 := contactMixin[2].Interceptors()
	contactMixinInters6 := contactMixin[6].Interceptors()
	contact.Interceptors[0] = contactMixinInters1[0]
	contact.Interceptors[1] = contactMixinInters2[0]
	contact.Interceptors[2] = contactMixinInters6[0]
	contactMixinFields0 := contactMixin[0].Fields()
	_ = contactMixinFields0
	contactMixinFields3 := contactMixin[3].Fields()
	_ = contactMixinFields3
	contactMixinFields4 := contactMixin[4].Fields()
	_ = contactMixinFields4
	contactMixinFields6 := contactMixin[6].Fields()
	_ = contactMixinFields6
	contactFields := schema.Contact{}.Fields()
	_ = contactFields
	// contactDescCreatedAt is the schema descriptor for created_at field.
	contactDescCreatedAt := contactMixinFields0[0].Descriptor()
	// contact.DefaultCreatedAt holds the default value on creation for the created_at field.
	contact.DefaultCreatedAt = contactDescCreatedAt.Default.(func() time.Time)
	// contactDescUpdatedAt is the schema descriptor for updated_at field.
	contactDescUpdatedAt := contactMixinFields0[1].Descriptor()
	// contact.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contact.DefaultUpdatedAt = contactDescUpdatedAt.Default.(func() time.Time)
	// contact.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	contact.UpdateDefaultUpdatedAt = contactDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contactDescTags is the schema descriptor for tags field.
	contactDescTags := contactMixinFields4[0].Descriptor()
	// contact.DefaultTags holds the default value on creation for the tags field.
	contact.DefaultTags = contactDescTags.Default.([]string)
	// contactDescOwnerID is the schema descriptor for owner_id field.
	contactDescOwnerID := contactMixinFields6[0].Descriptor()
	// contact.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	contact.OwnerIDValidator = contactDescOwnerID.Validators[0].(func(string) error)
	// contactDescFullName is the schema descriptor for full_name field.
	contactDescFullName := contactFields[0].Descriptor()
	// contact.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	contact.FullNameValidator = func() func(string) error {
		validators := contactDescFullName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(full_name string) error {
			for _, fn := range fns {
				if err := fn(full_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// contactDescEmail is the schema descriptor for email field.
	contactDescEmail := contactFields[3].Descriptor()
	// contact.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	contact.EmailValidator = contactDescEmail.Validators[0].(func(string) error)
	// contactDescPhoneNumber is the schema descriptor for phone_number field.
	contactDescPhoneNumber := contactFields[4].Descriptor()
	// contact.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	contact.PhoneNumberValidator = contactDescPhoneNumber.Validators[0].(func(string) error)
	// contactDescID is the schema descriptor for id field.
	contactDescID := contactMixinFields3[0].Descriptor()
	// contact.DefaultID holds the default value on creation for the id field.
	contact.DefaultID = contactDescID.Default.(func() string)
	contacthistory.Policy = privacy.NewPolicies(schema.ContactHistory{})
	contacthistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := contacthistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	contacthistoryInters := schema.ContactHistory{}.Interceptors()
	contacthistory.Interceptors[0] = contacthistoryInters[0]
	contacthistoryFields := schema.ContactHistory{}.Fields()
	_ = contacthistoryFields
	// contacthistoryDescHistoryTime is the schema descriptor for history_time field.
	contacthistoryDescHistoryTime := contacthistoryFields[0].Descriptor()
	// contacthistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	contacthistory.DefaultHistoryTime = contacthistoryDescHistoryTime.Default.(func() time.Time)
	// contacthistoryDescCreatedAt is the schema descriptor for created_at field.
	contacthistoryDescCreatedAt := contacthistoryFields[3].Descriptor()
	// contacthistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	contacthistory.DefaultCreatedAt = contacthistoryDescCreatedAt.Default.(func() time.Time)
	// contacthistoryDescUpdatedAt is the schema descriptor for updated_at field.
	contacthistoryDescUpdatedAt := contacthistoryFields[4].Descriptor()
	// contacthistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	contacthistory.DefaultUpdatedAt = contacthistoryDescUpdatedAt.Default.(func() time.Time)
	// contacthistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	contacthistory.UpdateDefaultUpdatedAt = contacthistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// contacthistoryDescTags is the schema descriptor for tags field.
	contacthistoryDescTags := contacthistoryFields[10].Descriptor()
	// contacthistory.DefaultTags holds the default value on creation for the tags field.
	contacthistory.DefaultTags = contacthistoryDescTags.Default.([]string)
	// contacthistoryDescID is the schema descriptor for id field.
	contacthistoryDescID := contacthistoryFields[9].Descriptor()
	// contacthistory.DefaultID holds the default value on creation for the id field.
	contacthistory.DefaultID = contacthistoryDescID.Default.(func() string)
	controlMixin := schema.Control{}.Mixin()
	control.Policy = privacy.NewPolicies(schema.Control{})
	control.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := control.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlMixinHooks0 := controlMixin[0].Hooks()
	controlMixinHooks1 := controlMixin[1].Hooks()
	controlMixinHooks2 := controlMixin[2].Hooks()
	controlMixinHooks3 := controlMixin[3].Hooks()
	controlMixinHooks6 := controlMixin[6].Hooks()
	controlMixinHooks7 := controlMixin[7].Hooks()
	controlMixinHooks8 := controlMixin[8].Hooks()
	controlHooks := schema.Control{}.Hooks()

	control.Hooks[1] = controlMixinHooks0[0]

	control.Hooks[2] = controlMixinHooks1[0]

	control.Hooks[3] = controlMixinHooks2[0]

	control.Hooks[4] = controlMixinHooks3[0]

	control.Hooks[5] = controlMixinHooks6[0]

	control.Hooks[6] = controlMixinHooks6[1]

	control.Hooks[7] = controlMixinHooks7[0]

	control.Hooks[8] = controlMixinHooks7[1]

	control.Hooks[9] = controlMixinHooks8[0]

	control.Hooks[10] = controlMixinHooks8[1]

	control.Hooks[11] = controlHooks[0]
	controlMixinInters1 := controlMixin[1].Interceptors()
	controlMixinInters2 := controlMixin[2].Interceptors()
	controlMixinInters7 := controlMixin[7].Interceptors()
	controlMixinInters8 := controlMixin[8].Interceptors()
	control.Interceptors[0] = controlMixinInters1[0]
	control.Interceptors[1] = controlMixinInters2[0]
	control.Interceptors[2] = controlMixinInters7[0]
	control.Interceptors[3] = controlMixinInters7[1]
	control.Interceptors[4] = controlMixinInters8[0]
	controlMixinFields0 := controlMixin[0].Fields()
	_ = controlMixinFields0
	controlMixinFields3 := controlMixin[3].Fields()
	_ = controlMixinFields3
	controlMixinFields4 := controlMixin[4].Fields()
	_ = controlMixinFields4
	controlMixinFields6 := controlMixin[6].Fields()
	_ = controlMixinFields6
	controlMixinFields7 := controlMixin[7].Fields()
	_ = controlMixinFields7
	controlFields := schema.Control{}.Fields()
	_ = controlFields
	// controlDescCreatedAt is the schema descriptor for created_at field.
	controlDescCreatedAt := controlMixinFields0[0].Descriptor()
	// control.DefaultCreatedAt holds the default value on creation for the created_at field.
	control.DefaultCreatedAt = controlDescCreatedAt.Default.(func() time.Time)
	// controlDescUpdatedAt is the schema descriptor for updated_at field.
	controlDescUpdatedAt := controlMixinFields0[1].Descriptor()
	// control.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	control.DefaultUpdatedAt = controlDescUpdatedAt.Default.(func() time.Time)
	// control.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	control.UpdateDefaultUpdatedAt = controlDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlDescDisplayID is the schema descriptor for display_id field.
	controlDescDisplayID := controlMixinFields3[1].Descriptor()
	// control.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	control.DisplayIDValidator = controlDescDisplayID.Validators[0].(func(string) error)
	// controlDescTags is the schema descriptor for tags field.
	controlDescTags := controlMixinFields4[0].Descriptor()
	// control.DefaultTags holds the default value on creation for the tags field.
	control.DefaultTags = controlDescTags.Default.([]string)
	// controlDescOwnerID is the schema descriptor for owner_id field.
	controlDescOwnerID := controlMixinFields7[0].Descriptor()
	// control.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	control.OwnerIDValidator = controlDescOwnerID.Validators[0].(func(string) error)
	// controlDescRefCode is the schema descriptor for ref_code field.
	controlDescRefCode := controlFields[0].Descriptor()
	// control.RefCodeValidator is a validator for the "ref_code" field. It is called by the builders before save.
	control.RefCodeValidator = controlDescRefCode.Validators[0].(func(string) error)
	// controlDescID is the schema descriptor for id field.
	controlDescID := controlMixinFields3[0].Descriptor()
	// control.DefaultID holds the default value on creation for the id field.
	control.DefaultID = controlDescID.Default.(func() string)
	controlhistory.Policy = privacy.NewPolicies(schema.ControlHistory{})
	controlhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlhistoryInters := schema.ControlHistory{}.Interceptors()
	controlhistory.Interceptors[0] = controlhistoryInters[0]
	controlhistoryFields := schema.ControlHistory{}.Fields()
	_ = controlhistoryFields
	// controlhistoryDescHistoryTime is the schema descriptor for history_time field.
	controlhistoryDescHistoryTime := controlhistoryFields[0].Descriptor()
	// controlhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	controlhistory.DefaultHistoryTime = controlhistoryDescHistoryTime.Default.(func() time.Time)
	// controlhistoryDescCreatedAt is the schema descriptor for created_at field.
	controlhistoryDescCreatedAt := controlhistoryFields[3].Descriptor()
	// controlhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlhistory.DefaultCreatedAt = controlhistoryDescCreatedAt.Default.(func() time.Time)
	// controlhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	controlhistoryDescUpdatedAt := controlhistoryFields[4].Descriptor()
	// controlhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlhistory.DefaultUpdatedAt = controlhistoryDescUpdatedAt.Default.(func() time.Time)
	// controlhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlhistory.UpdateDefaultUpdatedAt = controlhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlhistoryDescTags is the schema descriptor for tags field.
	controlhistoryDescTags := controlhistoryFields[11].Descriptor()
	// controlhistory.DefaultTags holds the default value on creation for the tags field.
	controlhistory.DefaultTags = controlhistoryDescTags.Default.([]string)
	// controlhistoryDescID is the schema descriptor for id field.
	controlhistoryDescID := controlhistoryFields[9].Descriptor()
	// controlhistory.DefaultID holds the default value on creation for the id field.
	controlhistory.DefaultID = controlhistoryDescID.Default.(func() string)
	controlimplementationMixin := schema.ControlImplementation{}.Mixin()
	controlimplementation.Policy = privacy.NewPolicies(schema.ControlImplementation{})
	controlimplementation.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlimplementation.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlimplementationMixinHooks0 := controlimplementationMixin[0].Hooks()
	controlimplementationMixinHooks1 := controlimplementationMixin[1].Hooks()
	controlimplementationMixinHooks2 := controlimplementationMixin[2].Hooks()
	controlimplementationMixinHooks6 := controlimplementationMixin[6].Hooks()
	controlimplementationMixinHooks7 := controlimplementationMixin[7].Hooks()
	controlimplementationHooks := schema.ControlImplementation{}.Hooks()

	controlimplementation.Hooks[1] = controlimplementationMixinHooks0[0]

	controlimplementation.Hooks[2] = controlimplementationMixinHooks1[0]

	controlimplementation.Hooks[3] = controlimplementationMixinHooks2[0]

	controlimplementation.Hooks[4] = controlimplementationMixinHooks6[0]

	controlimplementation.Hooks[5] = controlimplementationMixinHooks6[1]

	controlimplementation.Hooks[6] = controlimplementationMixinHooks7[0]

	controlimplementation.Hooks[7] = controlimplementationMixinHooks7[1]

	controlimplementation.Hooks[8] = controlimplementationMixinHooks7[2]

	controlimplementation.Hooks[9] = controlimplementationHooks[0]
	controlimplementationMixinInters1 := controlimplementationMixin[1].Interceptors()
	controlimplementationMixinInters2 := controlimplementationMixin[2].Interceptors()
	controlimplementationMixinInters6 := controlimplementationMixin[6].Interceptors()
	controlimplementation.Interceptors[0] = controlimplementationMixinInters1[0]
	controlimplementation.Interceptors[1] = controlimplementationMixinInters2[0]
	controlimplementation.Interceptors[2] = controlimplementationMixinInters6[0]
	controlimplementation.Interceptors[3] = controlimplementationMixinInters6[1]
	controlimplementationMixinFields0 := controlimplementationMixin[0].Fields()
	_ = controlimplementationMixinFields0
	controlimplementationMixinFields3 := controlimplementationMixin[3].Fields()
	_ = controlimplementationMixinFields3
	controlimplementationMixinFields4 := controlimplementationMixin[4].Fields()
	_ = controlimplementationMixinFields4
	controlimplementationMixinFields6 := controlimplementationMixin[6].Fields()
	_ = controlimplementationMixinFields6
	controlimplementationFields := schema.ControlImplementation{}.Fields()
	_ = controlimplementationFields
	// controlimplementationDescCreatedAt is the schema descriptor for created_at field.
	controlimplementationDescCreatedAt := controlimplementationMixinFields0[0].Descriptor()
	// controlimplementation.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlimplementation.DefaultCreatedAt = controlimplementationDescCreatedAt.Default.(func() time.Time)
	// controlimplementationDescUpdatedAt is the schema descriptor for updated_at field.
	controlimplementationDescUpdatedAt := controlimplementationMixinFields0[1].Descriptor()
	// controlimplementation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlimplementation.DefaultUpdatedAt = controlimplementationDescUpdatedAt.Default.(func() time.Time)
	// controlimplementation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlimplementation.UpdateDefaultUpdatedAt = controlimplementationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlimplementationDescTags is the schema descriptor for tags field.
	controlimplementationDescTags := controlimplementationMixinFields4[0].Descriptor()
	// controlimplementation.DefaultTags holds the default value on creation for the tags field.
	controlimplementation.DefaultTags = controlimplementationDescTags.Default.([]string)
	// controlimplementationDescOwnerID is the schema descriptor for owner_id field.
	controlimplementationDescOwnerID := controlimplementationMixinFields6[0].Descriptor()
	// controlimplementation.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	controlimplementation.OwnerIDValidator = controlimplementationDescOwnerID.Validators[0].(func(string) error)
	// controlimplementationDescID is the schema descriptor for id field.
	controlimplementationDescID := controlimplementationMixinFields3[0].Descriptor()
	// controlimplementation.DefaultID holds the default value on creation for the id field.
	controlimplementation.DefaultID = controlimplementationDescID.Default.(func() string)
	controlimplementationhistory.Policy = privacy.NewPolicies(schema.ControlImplementationHistory{})
	controlimplementationhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlimplementationhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlimplementationhistoryInters := schema.ControlImplementationHistory{}.Interceptors()
	controlimplementationhistory.Interceptors[0] = controlimplementationhistoryInters[0]
	controlimplementationhistoryFields := schema.ControlImplementationHistory{}.Fields()
	_ = controlimplementationhistoryFields
	// controlimplementationhistoryDescHistoryTime is the schema descriptor for history_time field.
	controlimplementationhistoryDescHistoryTime := controlimplementationhistoryFields[0].Descriptor()
	// controlimplementationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	controlimplementationhistory.DefaultHistoryTime = controlimplementationhistoryDescHistoryTime.Default.(func() time.Time)
	// controlimplementationhistoryDescCreatedAt is the schema descriptor for created_at field.
	controlimplementationhistoryDescCreatedAt := controlimplementationhistoryFields[3].Descriptor()
	// controlimplementationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlimplementationhistory.DefaultCreatedAt = controlimplementationhistoryDescCreatedAt.Default.(func() time.Time)
	// controlimplementationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	controlimplementationhistoryDescUpdatedAt := controlimplementationhistoryFields[4].Descriptor()
	// controlimplementationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlimplementationhistory.DefaultUpdatedAt = controlimplementationhistoryDescUpdatedAt.Default.(func() time.Time)
	// controlimplementationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlimplementationhistory.UpdateDefaultUpdatedAt = controlimplementationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlimplementationhistoryDescTags is the schema descriptor for tags field.
	controlimplementationhistoryDescTags := controlimplementationhistoryFields[10].Descriptor()
	// controlimplementationhistory.DefaultTags holds the default value on creation for the tags field.
	controlimplementationhistory.DefaultTags = controlimplementationhistoryDescTags.Default.([]string)
	// controlimplementationhistoryDescID is the schema descriptor for id field.
	controlimplementationhistoryDescID := controlimplementationhistoryFields[9].Descriptor()
	// controlimplementationhistory.DefaultID holds the default value on creation for the id field.
	controlimplementationhistory.DefaultID = controlimplementationhistoryDescID.Default.(func() string)
	controlobjectiveMixin := schema.ControlObjective{}.Mixin()
	controlobjective.Policy = privacy.NewPolicies(schema.ControlObjective{})
	controlobjective.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlobjective.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlobjectiveMixinHooks0 := controlobjectiveMixin[0].Hooks()
	controlobjectiveMixinHooks1 := controlobjectiveMixin[1].Hooks()
	controlobjectiveMixinHooks2 := controlobjectiveMixin[2].Hooks()
	controlobjectiveMixinHooks3 := controlobjectiveMixin[3].Hooks()
	controlobjectiveMixinHooks5 := controlobjectiveMixin[5].Hooks()
	controlobjectiveMixinHooks7 := controlobjectiveMixin[7].Hooks()
	controlobjectiveMixinHooks8 := controlobjectiveMixin[8].Hooks()

	controlobjective.Hooks[1] = controlobjectiveMixinHooks0[0]

	controlobjective.Hooks[2] = controlobjectiveMixinHooks1[0]

	controlobjective.Hooks[3] = controlobjectiveMixinHooks2[0]

	controlobjective.Hooks[4] = controlobjectiveMixinHooks3[0]

	controlobjective.Hooks[5] = controlobjectiveMixinHooks5[0]

	controlobjective.Hooks[6] = controlobjectiveMixinHooks7[0]

	controlobjective.Hooks[7] = controlobjectiveMixinHooks7[1]

	controlobjective.Hooks[8] = controlobjectiveMixinHooks8[0]

	controlobjective.Hooks[9] = controlobjectiveMixinHooks8[1]

	controlobjective.Hooks[10] = controlobjectiveMixinHooks8[2]
	controlobjectiveMixinInters1 := controlobjectiveMixin[1].Interceptors()
	controlobjectiveMixinInters2 := controlobjectiveMixin[2].Interceptors()
	controlobjectiveMixinInters7 := controlobjectiveMixin[7].Interceptors()
	controlobjective.Interceptors[0] = controlobjectiveMixinInters1[0]
	controlobjective.Interceptors[1] = controlobjectiveMixinInters2[0]
	controlobjective.Interceptors[2] = controlobjectiveMixinInters7[0]
	controlobjective.Interceptors[3] = controlobjectiveMixinInters7[1]
	controlobjectiveMixinFields0 := controlobjectiveMixin[0].Fields()
	_ = controlobjectiveMixinFields0
	controlobjectiveMixinFields3 := controlobjectiveMixin[3].Fields()
	_ = controlobjectiveMixinFields3
	controlobjectiveMixinFields4 := controlobjectiveMixin[4].Fields()
	_ = controlobjectiveMixinFields4
	controlobjectiveMixinFields5 := controlobjectiveMixin[5].Fields()
	_ = controlobjectiveMixinFields5
	controlobjectiveMixinFields7 := controlobjectiveMixin[7].Fields()
	_ = controlobjectiveMixinFields7
	controlobjectiveFields := schema.ControlObjective{}.Fields()
	_ = controlobjectiveFields
	// controlobjectiveDescCreatedAt is the schema descriptor for created_at field.
	controlobjectiveDescCreatedAt := controlobjectiveMixinFields0[0].Descriptor()
	// controlobjective.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlobjective.DefaultCreatedAt = controlobjectiveDescCreatedAt.Default.(func() time.Time)
	// controlobjectiveDescUpdatedAt is the schema descriptor for updated_at field.
	controlobjectiveDescUpdatedAt := controlobjectiveMixinFields0[1].Descriptor()
	// controlobjective.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlobjective.DefaultUpdatedAt = controlobjectiveDescUpdatedAt.Default.(func() time.Time)
	// controlobjective.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlobjective.UpdateDefaultUpdatedAt = controlobjectiveDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlobjectiveDescDisplayID is the schema descriptor for display_id field.
	controlobjectiveDescDisplayID := controlobjectiveMixinFields3[1].Descriptor()
	// controlobjective.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	controlobjective.DisplayIDValidator = controlobjectiveDescDisplayID.Validators[0].(func(string) error)
	// controlobjectiveDescTags is the schema descriptor for tags field.
	controlobjectiveDescTags := controlobjectiveMixinFields4[0].Descriptor()
	// controlobjective.DefaultTags holds the default value on creation for the tags field.
	controlobjective.DefaultTags = controlobjectiveDescTags.Default.([]string)
	// controlobjectiveDescRevision is the schema descriptor for revision field.
	controlobjectiveDescRevision := controlobjectiveMixinFields5[0].Descriptor()
	// controlobjective.DefaultRevision holds the default value on creation for the revision field.
	controlobjective.DefaultRevision = controlobjectiveDescRevision.Default.(string)
	// controlobjective.RevisionValidator is a validator for the "revision" field. It is called by the builders before save.
	controlobjective.RevisionValidator = controlobjectiveDescRevision.Validators[0].(func(string) error)
	// controlobjectiveDescOwnerID is the schema descriptor for owner_id field.
	controlobjectiveDescOwnerID := controlobjectiveMixinFields7[0].Descriptor()
	// controlobjective.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	controlobjective.OwnerIDValidator = controlobjectiveDescOwnerID.Validators[0].(func(string) error)
	// controlobjectiveDescName is the schema descriptor for name field.
	controlobjectiveDescName := controlobjectiveFields[0].Descriptor()
	// controlobjective.NameValidator is a validator for the "name" field. It is called by the builders before save.
	controlobjective.NameValidator = controlobjectiveDescName.Validators[0].(func(string) error)
	// controlobjectiveDescID is the schema descriptor for id field.
	controlobjectiveDescID := controlobjectiveMixinFields3[0].Descriptor()
	// controlobjective.DefaultID holds the default value on creation for the id field.
	controlobjective.DefaultID = controlobjectiveDescID.Default.(func() string)
	controlobjectivehistory.Policy = privacy.NewPolicies(schema.ControlObjectiveHistory{})
	controlobjectivehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := controlobjectivehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	controlobjectivehistoryInters := schema.ControlObjectiveHistory{}.Interceptors()
	controlobjectivehistory.Interceptors[0] = controlobjectivehistoryInters[0]
	controlobjectivehistoryFields := schema.ControlObjectiveHistory{}.Fields()
	_ = controlobjectivehistoryFields
	// controlobjectivehistoryDescHistoryTime is the schema descriptor for history_time field.
	controlobjectivehistoryDescHistoryTime := controlobjectivehistoryFields[0].Descriptor()
	// controlobjectivehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	controlobjectivehistory.DefaultHistoryTime = controlobjectivehistoryDescHistoryTime.Default.(func() time.Time)
	// controlobjectivehistoryDescCreatedAt is the schema descriptor for created_at field.
	controlobjectivehistoryDescCreatedAt := controlobjectivehistoryFields[3].Descriptor()
	// controlobjectivehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	controlobjectivehistory.DefaultCreatedAt = controlobjectivehistoryDescCreatedAt.Default.(func() time.Time)
	// controlobjectivehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	controlobjectivehistoryDescUpdatedAt := controlobjectivehistoryFields[4].Descriptor()
	// controlobjectivehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	controlobjectivehistory.DefaultUpdatedAt = controlobjectivehistoryDescUpdatedAt.Default.(func() time.Time)
	// controlobjectivehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	controlobjectivehistory.UpdateDefaultUpdatedAt = controlobjectivehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// controlobjectivehistoryDescTags is the schema descriptor for tags field.
	controlobjectivehistoryDescTags := controlobjectivehistoryFields[11].Descriptor()
	// controlobjectivehistory.DefaultTags holds the default value on creation for the tags field.
	controlobjectivehistory.DefaultTags = controlobjectivehistoryDescTags.Default.([]string)
	// controlobjectivehistoryDescRevision is the schema descriptor for revision field.
	controlobjectivehistoryDescRevision := controlobjectivehistoryFields[12].Descriptor()
	// controlobjectivehistory.DefaultRevision holds the default value on creation for the revision field.
	controlobjectivehistory.DefaultRevision = controlobjectivehistoryDescRevision.Default.(string)
	// controlobjectivehistoryDescID is the schema descriptor for id field.
	controlobjectivehistoryDescID := controlobjectivehistoryFields[9].Descriptor()
	// controlobjectivehistory.DefaultID holds the default value on creation for the id field.
	controlobjectivehistory.DefaultID = controlobjectivehistoryDescID.Default.(func() string)
	customdomainMixin := schema.CustomDomain{}.Mixin()
	customdomain.Policy = privacy.NewPolicies(schema.CustomDomain{})
	customdomain.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := customdomain.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	customdomainMixinHooks0 := customdomainMixin[0].Hooks()
	customdomainMixinHooks1 := customdomainMixin[1].Hooks()
	customdomainMixinHooks2 := customdomainMixin[2].Hooks()
	customdomainMixinHooks6 := customdomainMixin[6].Hooks()
	customdomainHooks := schema.CustomDomain{}.Hooks()

	customdomain.Hooks[1] = customdomainMixinHooks0[0]

	customdomain.Hooks[2] = customdomainMixinHooks1[0]

	customdomain.Hooks[3] = customdomainMixinHooks2[0]

	customdomain.Hooks[4] = customdomainMixinHooks6[0]

	customdomain.Hooks[5] = customdomainHooks[0]

	customdomain.Hooks[6] = customdomainHooks[1]
	customdomainMixinInters1 := customdomainMixin[1].Interceptors()
	customdomainMixinInters2 := customdomainMixin[2].Interceptors()
	customdomainMixinInters6 := customdomainMixin[6].Interceptors()
	customdomain.Interceptors[0] = customdomainMixinInters1[0]
	customdomain.Interceptors[1] = customdomainMixinInters2[0]
	customdomain.Interceptors[2] = customdomainMixinInters6[0]
	customdomainMixinFields0 := customdomainMixin[0].Fields()
	_ = customdomainMixinFields0
	customdomainMixinFields3 := customdomainMixin[3].Fields()
	_ = customdomainMixinFields3
	customdomainMixinFields4 := customdomainMixin[4].Fields()
	_ = customdomainMixinFields4
	customdomainFields := schema.CustomDomain{}.Fields()
	_ = customdomainFields
	// customdomainDescCreatedAt is the schema descriptor for created_at field.
	customdomainDescCreatedAt := customdomainMixinFields0[0].Descriptor()
	// customdomain.DefaultCreatedAt holds the default value on creation for the created_at field.
	customdomain.DefaultCreatedAt = customdomainDescCreatedAt.Default.(func() time.Time)
	// customdomainDescUpdatedAt is the schema descriptor for updated_at field.
	customdomainDescUpdatedAt := customdomainMixinFields0[1].Descriptor()
	// customdomain.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	customdomain.DefaultUpdatedAt = customdomainDescUpdatedAt.Default.(func() time.Time)
	// customdomain.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	customdomain.UpdateDefaultUpdatedAt = customdomainDescUpdatedAt.UpdateDefault.(func() time.Time)
	// customdomainDescTags is the schema descriptor for tags field.
	customdomainDescTags := customdomainMixinFields4[0].Descriptor()
	// customdomain.DefaultTags holds the default value on creation for the tags field.
	customdomain.DefaultTags = customdomainDescTags.Default.([]string)
	// customdomainDescCnameRecord is the schema descriptor for cname_record field.
	customdomainDescCnameRecord := customdomainFields[0].Descriptor()
	// customdomain.CnameRecordValidator is a validator for the "cname_record" field. It is called by the builders before save.
	customdomain.CnameRecordValidator = func() func(string) error {
		validators := customdomainDescCnameRecord.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(cname_record string) error {
			for _, fn := range fns {
				if err := fn(cname_record); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// customdomainDescMappableDomainID is the schema descriptor for mappable_domain_id field.
	customdomainDescMappableDomainID := customdomainFields[1].Descriptor()
	// customdomain.MappableDomainIDValidator is a validator for the "mappable_domain_id" field. It is called by the builders before save.
	customdomain.MappableDomainIDValidator = customdomainDescMappableDomainID.Validators[0].(func(string) error)
	// customdomainDescID is the schema descriptor for id field.
	customdomainDescID := customdomainMixinFields3[0].Descriptor()
	// customdomain.DefaultID holds the default value on creation for the id field.
	customdomain.DefaultID = customdomainDescID.Default.(func() string)
	customdomainhistory.Policy = privacy.NewPolicies(schema.CustomDomainHistory{})
	customdomainhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := customdomainhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	customdomainhistoryInters := schema.CustomDomainHistory{}.Interceptors()
	customdomainhistory.Interceptors[0] = customdomainhistoryInters[0]
	customdomainhistoryFields := schema.CustomDomainHistory{}.Fields()
	_ = customdomainhistoryFields
	// customdomainhistoryDescHistoryTime is the schema descriptor for history_time field.
	customdomainhistoryDescHistoryTime := customdomainhistoryFields[0].Descriptor()
	// customdomainhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	customdomainhistory.DefaultHistoryTime = customdomainhistoryDescHistoryTime.Default.(func() time.Time)
	// customdomainhistoryDescCreatedAt is the schema descriptor for created_at field.
	customdomainhistoryDescCreatedAt := customdomainhistoryFields[3].Descriptor()
	// customdomainhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	customdomainhistory.DefaultCreatedAt = customdomainhistoryDescCreatedAt.Default.(func() time.Time)
	// customdomainhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	customdomainhistoryDescUpdatedAt := customdomainhistoryFields[4].Descriptor()
	// customdomainhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	customdomainhistory.DefaultUpdatedAt = customdomainhistoryDescUpdatedAt.Default.(func() time.Time)
	// customdomainhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	customdomainhistory.UpdateDefaultUpdatedAt = customdomainhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// customdomainhistoryDescTags is the schema descriptor for tags field.
	customdomainhistoryDescTags := customdomainhistoryFields[10].Descriptor()
	// customdomainhistory.DefaultTags holds the default value on creation for the tags field.
	customdomainhistory.DefaultTags = customdomainhistoryDescTags.Default.([]string)
	// customdomainhistoryDescID is the schema descriptor for id field.
	customdomainhistoryDescID := customdomainhistoryFields[9].Descriptor()
	// customdomainhistory.DefaultID holds the default value on creation for the id field.
	customdomainhistory.DefaultID = customdomainhistoryDescID.Default.(func() string)
	dnsverificationMixin := schema.DNSVerification{}.Mixin()
	dnsverification.Policy = privacy.NewPolicies(schema.DNSVerification{})
	dnsverification.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := dnsverification.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	dnsverificationMixinHooks0 := dnsverificationMixin[0].Hooks()
	dnsverificationMixinHooks1 := dnsverificationMixin[1].Hooks()
	dnsverificationMixinHooks2 := dnsverificationMixin[2].Hooks()
	dnsverificationMixinHooks6 := dnsverificationMixin[6].Hooks()

	dnsverification.Hooks[1] = dnsverificationMixinHooks0[0]

	dnsverification.Hooks[2] = dnsverificationMixinHooks1[0]

	dnsverification.Hooks[3] = dnsverificationMixinHooks2[0]

	dnsverification.Hooks[4] = dnsverificationMixinHooks6[0]
	dnsverificationMixinInters1 := dnsverificationMixin[1].Interceptors()
	dnsverificationMixinInters2 := dnsverificationMixin[2].Interceptors()
	dnsverificationMixinInters6 := dnsverificationMixin[6].Interceptors()
	dnsverification.Interceptors[0] = dnsverificationMixinInters1[0]
	dnsverification.Interceptors[1] = dnsverificationMixinInters2[0]
	dnsverification.Interceptors[2] = dnsverificationMixinInters6[0]
	dnsverificationMixinFields0 := dnsverificationMixin[0].Fields()
	_ = dnsverificationMixinFields0
	dnsverificationMixinFields3 := dnsverificationMixin[3].Fields()
	_ = dnsverificationMixinFields3
	dnsverificationMixinFields4 := dnsverificationMixin[4].Fields()
	_ = dnsverificationMixinFields4
	dnsverificationFields := schema.DNSVerification{}.Fields()
	_ = dnsverificationFields
	// dnsverificationDescCreatedAt is the schema descriptor for created_at field.
	dnsverificationDescCreatedAt := dnsverificationMixinFields0[0].Descriptor()
	// dnsverification.DefaultCreatedAt holds the default value on creation for the created_at field.
	dnsverification.DefaultCreatedAt = dnsverificationDescCreatedAt.Default.(func() time.Time)
	// dnsverificationDescUpdatedAt is the schema descriptor for updated_at field.
	dnsverificationDescUpdatedAt := dnsverificationMixinFields0[1].Descriptor()
	// dnsverification.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	dnsverification.DefaultUpdatedAt = dnsverificationDescUpdatedAt.Default.(func() time.Time)
	// dnsverification.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	dnsverification.UpdateDefaultUpdatedAt = dnsverificationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// dnsverificationDescTags is the schema descriptor for tags field.
	dnsverificationDescTags := dnsverificationMixinFields4[0].Descriptor()
	// dnsverification.DefaultTags holds the default value on creation for the tags field.
	dnsverification.DefaultTags = dnsverificationDescTags.Default.([]string)
	// dnsverificationDescCloudflareHostnameID is the schema descriptor for cloudflare_hostname_id field.
	dnsverificationDescCloudflareHostnameID := dnsverificationFields[0].Descriptor()
	// dnsverification.CloudflareHostnameIDValidator is a validator for the "cloudflare_hostname_id" field. It is called by the builders before save.
	dnsverification.CloudflareHostnameIDValidator = func() func(string) error {
		validators := dnsverificationDescCloudflareHostnameID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(cloudflare_hostname_id string) error {
			for _, fn := range fns {
				if err := fn(cloudflare_hostname_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// dnsverificationDescDNSTxtRecord is the schema descriptor for dns_txt_record field.
	dnsverificationDescDNSTxtRecord := dnsverificationFields[1].Descriptor()
	// dnsverification.DNSTxtRecordValidator is a validator for the "dns_txt_record" field. It is called by the builders before save.
	dnsverification.DNSTxtRecordValidator = func() func(string) error {
		validators := dnsverificationDescDNSTxtRecord.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(dns_txt_record string) error {
			for _, fn := range fns {
				if err := fn(dns_txt_record); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// dnsverificationDescDNSTxtValue is the schema descriptor for dns_txt_value field.
	dnsverificationDescDNSTxtValue := dnsverificationFields[2].Descriptor()
	// dnsverification.DNSTxtValueValidator is a validator for the "dns_txt_value" field. It is called by the builders before save.
	dnsverification.DNSTxtValueValidator = func() func(string) error {
		validators := dnsverificationDescDNSTxtValue.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(dns_txt_value string) error {
			for _, fn := range fns {
				if err := fn(dns_txt_value); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// dnsverificationDescDNSVerificationStatusReason is the schema descriptor for dns_verification_status_reason field.
	dnsverificationDescDNSVerificationStatusReason := dnsverificationFields[4].Descriptor()
	// dnsverification.DNSVerificationStatusReasonValidator is a validator for the "dns_verification_status_reason" field. It is called by the builders before save.
	dnsverification.DNSVerificationStatusReasonValidator = dnsverificationDescDNSVerificationStatusReason.Validators[0].(func(string) error)
	// dnsverificationDescAcmeChallengePath is the schema descriptor for acme_challenge_path field.
	dnsverificationDescAcmeChallengePath := dnsverificationFields[5].Descriptor()
	// dnsverification.AcmeChallengePathValidator is a validator for the "acme_challenge_path" field. It is called by the builders before save.
	dnsverification.AcmeChallengePathValidator = dnsverificationDescAcmeChallengePath.Validators[0].(func(string) error)
	// dnsverificationDescExpectedAcmeChallengeValue is the schema descriptor for expected_acme_challenge_value field.
	dnsverificationDescExpectedAcmeChallengeValue := dnsverificationFields[6].Descriptor()
	// dnsverification.ExpectedAcmeChallengeValueValidator is a validator for the "expected_acme_challenge_value" field. It is called by the builders before save.
	dnsverification.ExpectedAcmeChallengeValueValidator = dnsverificationDescExpectedAcmeChallengeValue.Validators[0].(func(string) error)
	// dnsverificationDescAcmeChallengeStatusReason is the schema descriptor for acme_challenge_status_reason field.
	dnsverificationDescAcmeChallengeStatusReason := dnsverificationFields[8].Descriptor()
	// dnsverification.AcmeChallengeStatusReasonValidator is a validator for the "acme_challenge_status_reason" field. It is called by the builders before save.
	dnsverification.AcmeChallengeStatusReasonValidator = dnsverificationDescAcmeChallengeStatusReason.Validators[0].(func(string) error)
	// dnsverificationDescID is the schema descriptor for id field.
	dnsverificationDescID := dnsverificationMixinFields3[0].Descriptor()
	// dnsverification.DefaultID holds the default value on creation for the id field.
	dnsverification.DefaultID = dnsverificationDescID.Default.(func() string)
	dnsverificationhistory.Policy = privacy.NewPolicies(schema.DNSVerificationHistory{})
	dnsverificationhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := dnsverificationhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	dnsverificationhistoryInters := schema.DNSVerificationHistory{}.Interceptors()
	dnsverificationhistory.Interceptors[0] = dnsverificationhistoryInters[0]
	dnsverificationhistoryFields := schema.DNSVerificationHistory{}.Fields()
	_ = dnsverificationhistoryFields
	// dnsverificationhistoryDescHistoryTime is the schema descriptor for history_time field.
	dnsverificationhistoryDescHistoryTime := dnsverificationhistoryFields[0].Descriptor()
	// dnsverificationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	dnsverificationhistory.DefaultHistoryTime = dnsverificationhistoryDescHistoryTime.Default.(func() time.Time)
	// dnsverificationhistoryDescCreatedAt is the schema descriptor for created_at field.
	dnsverificationhistoryDescCreatedAt := dnsverificationhistoryFields[3].Descriptor()
	// dnsverificationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	dnsverificationhistory.DefaultCreatedAt = dnsverificationhistoryDescCreatedAt.Default.(func() time.Time)
	// dnsverificationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	dnsverificationhistoryDescUpdatedAt := dnsverificationhistoryFields[4].Descriptor()
	// dnsverificationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	dnsverificationhistory.DefaultUpdatedAt = dnsverificationhistoryDescUpdatedAt.Default.(func() time.Time)
	// dnsverificationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	dnsverificationhistory.UpdateDefaultUpdatedAt = dnsverificationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// dnsverificationhistoryDescTags is the schema descriptor for tags field.
	dnsverificationhistoryDescTags := dnsverificationhistoryFields[10].Descriptor()
	// dnsverificationhistory.DefaultTags holds the default value on creation for the tags field.
	dnsverificationhistory.DefaultTags = dnsverificationhistoryDescTags.Default.([]string)
	// dnsverificationhistoryDescID is the schema descriptor for id field.
	dnsverificationhistoryDescID := dnsverificationhistoryFields[9].Descriptor()
	// dnsverificationhistory.DefaultID holds the default value on creation for the id field.
	dnsverificationhistory.DefaultID = dnsverificationhistoryDescID.Default.(func() string)
	documentdataMixin := schema.DocumentData{}.Mixin()
	documentdata.Policy = privacy.NewPolicies(schema.DocumentData{})
	documentdata.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := documentdata.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	documentdataMixinHooks0 := documentdataMixin[0].Hooks()
	documentdataMixinHooks1 := documentdataMixin[1].Hooks()
	documentdataMixinHooks2 := documentdataMixin[2].Hooks()
	documentdataMixinHooks6 := documentdataMixin[6].Hooks()

	documentdata.Hooks[1] = documentdataMixinHooks0[0]

	documentdata.Hooks[2] = documentdataMixinHooks1[0]

	documentdata.Hooks[3] = documentdataMixinHooks2[0]

	documentdata.Hooks[4] = documentdataMixinHooks6[0]

	documentdata.Hooks[5] = documentdataMixinHooks6[1]
	documentdataMixinInters1 := documentdataMixin[1].Interceptors()
	documentdataMixinInters2 := documentdataMixin[2].Interceptors()
	documentdataMixinInters6 := documentdataMixin[6].Interceptors()
	documentdata.Interceptors[0] = documentdataMixinInters1[0]
	documentdata.Interceptors[1] = documentdataMixinInters2[0]
	documentdata.Interceptors[2] = documentdataMixinInters6[0]
	documentdata.Interceptors[3] = documentdataMixinInters6[1]
	documentdataMixinFields0 := documentdataMixin[0].Fields()
	_ = documentdataMixinFields0
	documentdataMixinFields3 := documentdataMixin[3].Fields()
	_ = documentdataMixinFields3
	documentdataMixinFields4 := documentdataMixin[4].Fields()
	_ = documentdataMixinFields4
	documentdataMixinFields6 := documentdataMixin[6].Fields()
	_ = documentdataMixinFields6
	documentdataFields := schema.DocumentData{}.Fields()
	_ = documentdataFields
	// documentdataDescCreatedAt is the schema descriptor for created_at field.
	documentdataDescCreatedAt := documentdataMixinFields0[0].Descriptor()
	// documentdata.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdata.DefaultCreatedAt = documentdataDescCreatedAt.Default.(func() time.Time)
	// documentdataDescUpdatedAt is the schema descriptor for updated_at field.
	documentdataDescUpdatedAt := documentdataMixinFields0[1].Descriptor()
	// documentdata.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdata.DefaultUpdatedAt = documentdataDescUpdatedAt.Default.(func() time.Time)
	// documentdata.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	documentdata.UpdateDefaultUpdatedAt = documentdataDescUpdatedAt.UpdateDefault.(func() time.Time)
	// documentdataDescTags is the schema descriptor for tags field.
	documentdataDescTags := documentdataMixinFields4[0].Descriptor()
	// documentdata.DefaultTags holds the default value on creation for the tags field.
	documentdata.DefaultTags = documentdataDescTags.Default.([]string)
	// documentdataDescOwnerID is the schema descriptor for owner_id field.
	documentdataDescOwnerID := documentdataMixinFields6[0].Descriptor()
	// documentdata.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	documentdata.OwnerIDValidator = documentdataDescOwnerID.Validators[0].(func(string) error)
	// documentdataDescID is the schema descriptor for id field.
	documentdataDescID := documentdataMixinFields3[0].Descriptor()
	// documentdata.DefaultID holds the default value on creation for the id field.
	documentdata.DefaultID = documentdataDescID.Default.(func() string)
	documentdatahistory.Policy = privacy.NewPolicies(schema.DocumentDataHistory{})
	documentdatahistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := documentdatahistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	documentdatahistoryInters := schema.DocumentDataHistory{}.Interceptors()
	documentdatahistory.Interceptors[0] = documentdatahistoryInters[0]
	documentdatahistoryFields := schema.DocumentDataHistory{}.Fields()
	_ = documentdatahistoryFields
	// documentdatahistoryDescHistoryTime is the schema descriptor for history_time field.
	documentdatahistoryDescHistoryTime := documentdatahistoryFields[0].Descriptor()
	// documentdatahistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	documentdatahistory.DefaultHistoryTime = documentdatahistoryDescHistoryTime.Default.(func() time.Time)
	// documentdatahistoryDescCreatedAt is the schema descriptor for created_at field.
	documentdatahistoryDescCreatedAt := documentdatahistoryFields[3].Descriptor()
	// documentdatahistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	documentdatahistory.DefaultCreatedAt = documentdatahistoryDescCreatedAt.Default.(func() time.Time)
	// documentdatahistoryDescUpdatedAt is the schema descriptor for updated_at field.
	documentdatahistoryDescUpdatedAt := documentdatahistoryFields[4].Descriptor()
	// documentdatahistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	documentdatahistory.DefaultUpdatedAt = documentdatahistoryDescUpdatedAt.Default.(func() time.Time)
	// documentdatahistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	documentdatahistory.UpdateDefaultUpdatedAt = documentdatahistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// documentdatahistoryDescTags is the schema descriptor for tags field.
	documentdatahistoryDescTags := documentdatahistoryFields[10].Descriptor()
	// documentdatahistory.DefaultTags holds the default value on creation for the tags field.
	documentdatahistory.DefaultTags = documentdatahistoryDescTags.Default.([]string)
	// documentdatahistoryDescID is the schema descriptor for id field.
	documentdatahistoryDescID := documentdatahistoryFields[9].Descriptor()
	// documentdatahistory.DefaultID holds the default value on creation for the id field.
	documentdatahistory.DefaultID = documentdatahistoryDescID.Default.(func() string)
	emailverificationtokenMixin := schema.EmailVerificationToken{}.Mixin()
	emailverificationtoken.Policy = privacy.NewPolicies(schema.EmailVerificationToken{})
	emailverificationtoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := emailverificationtoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	emailverificationtokenMixinHooks0 := emailverificationtokenMixin[0].Hooks()
	emailverificationtokenMixinHooks2 := emailverificationtokenMixin[2].Hooks()
	emailverificationtokenMixinHooks3 := emailverificationtokenMixin[3].Hooks()
	emailverificationtokenHooks := schema.EmailVerificationToken{}.Hooks()

	emailverificationtoken.Hooks[1] = emailverificationtokenMixinHooks0[0]

	emailverificationtoken.Hooks[2] = emailverificationtokenMixinHooks2[0]

	emailverificationtoken.Hooks[3] = emailverificationtokenMixinHooks3[0]

	emailverificationtoken.Hooks[4] = emailverificationtokenHooks[0]
	emailverificationtokenMixinInters2 := emailverificationtokenMixin[2].Interceptors()
	emailverificationtokenMixinInters3 := emailverificationtokenMixin[3].Interceptors()
	emailverificationtoken.Interceptors[0] = emailverificationtokenMixinInters2[0]
	emailverificationtoken.Interceptors[1] = emailverificationtokenMixinInters3[0]
	emailverificationtokenMixinFields0 := emailverificationtokenMixin[0].Fields()
	_ = emailverificationtokenMixinFields0
	emailverificationtokenMixinFields1 := emailverificationtokenMixin[1].Fields()
	_ = emailverificationtokenMixinFields1
	emailverificationtokenFields := schema.EmailVerificationToken{}.Fields()
	_ = emailverificationtokenFields
	// emailverificationtokenDescCreatedAt is the schema descriptor for created_at field.
	emailverificationtokenDescCreatedAt := emailverificationtokenMixinFields0[0].Descriptor()
	// emailverificationtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	emailverificationtoken.DefaultCreatedAt = emailverificationtokenDescCreatedAt.Default.(func() time.Time)
	// emailverificationtokenDescUpdatedAt is the schema descriptor for updated_at field.
	emailverificationtokenDescUpdatedAt := emailverificationtokenMixinFields0[1].Descriptor()
	// emailverificationtoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	emailverificationtoken.DefaultUpdatedAt = emailverificationtokenDescUpdatedAt.Default.(func() time.Time)
	// emailverificationtoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	emailverificationtoken.UpdateDefaultUpdatedAt = emailverificationtokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// emailverificationtokenDescToken is the schema descriptor for token field.
	emailverificationtokenDescToken := emailverificationtokenFields[0].Descriptor()
	// emailverificationtoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	emailverificationtoken.TokenValidator = emailverificationtokenDescToken.Validators[0].(func(string) error)
	// emailverificationtokenDescEmail is the schema descriptor for email field.
	emailverificationtokenDescEmail := emailverificationtokenFields[2].Descriptor()
	// emailverificationtoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	emailverificationtoken.EmailValidator = func() func(string) error {
		validators := emailverificationtokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// emailverificationtokenDescSecret is the schema descriptor for secret field.
	emailverificationtokenDescSecret := emailverificationtokenFields[3].Descriptor()
	// emailverificationtoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	emailverificationtoken.SecretValidator = emailverificationtokenDescSecret.Validators[0].(func([]byte) error)
	// emailverificationtokenDescID is the schema descriptor for id field.
	emailverificationtokenDescID := emailverificationtokenMixinFields1[0].Descriptor()
	// emailverificationtoken.DefaultID holds the default value on creation for the id field.
	emailverificationtoken.DefaultID = emailverificationtokenDescID.Default.(func() string)
	entityMixin := schema.Entity{}.Mixin()
	entity.Policy = privacy.NewPolicies(schema.Entity{})
	entity.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entity.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entityMixinHooks0 := entityMixin[0].Hooks()
	entityMixinHooks1 := entityMixin[1].Hooks()
	entityMixinHooks2 := entityMixin[2].Hooks()
	entityMixinHooks6 := entityMixin[6].Hooks()
	entityMixinHooks7 := entityMixin[7].Hooks()
	entityHooks := schema.Entity{}.Hooks()

	entity.Hooks[1] = entityMixinHooks0[0]

	entity.Hooks[2] = entityMixinHooks1[0]

	entity.Hooks[3] = entityMixinHooks2[0]

	entity.Hooks[4] = entityMixinHooks6[0]

	entity.Hooks[5] = entityMixinHooks7[0]

	entity.Hooks[6] = entityMixinHooks7[1]

	entity.Hooks[7] = entityMixinHooks7[2]

	entity.Hooks[8] = entityHooks[0]
	entityMixinInters1 := entityMixin[1].Interceptors()
	entityMixinInters2 := entityMixin[2].Interceptors()
	entityMixinInters6 := entityMixin[6].Interceptors()
	entity.Interceptors[0] = entityMixinInters1[0]
	entity.Interceptors[1] = entityMixinInters2[0]
	entity.Interceptors[2] = entityMixinInters6[0]
	entityMixinFields0 := entityMixin[0].Fields()
	_ = entityMixinFields0
	entityMixinFields3 := entityMixin[3].Fields()
	_ = entityMixinFields3
	entityMixinFields4 := entityMixin[4].Fields()
	_ = entityMixinFields4
	entityMixinFields6 := entityMixin[6].Fields()
	_ = entityMixinFields6
	entityFields := schema.Entity{}.Fields()
	_ = entityFields
	// entityDescCreatedAt is the schema descriptor for created_at field.
	entityDescCreatedAt := entityMixinFields0[0].Descriptor()
	// entity.DefaultCreatedAt holds the default value on creation for the created_at field.
	entity.DefaultCreatedAt = entityDescCreatedAt.Default.(func() time.Time)
	// entityDescUpdatedAt is the schema descriptor for updated_at field.
	entityDescUpdatedAt := entityMixinFields0[1].Descriptor()
	// entity.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entity.DefaultUpdatedAt = entityDescUpdatedAt.Default.(func() time.Time)
	// entity.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entity.UpdateDefaultUpdatedAt = entityDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entityDescTags is the schema descriptor for tags field.
	entityDescTags := entityMixinFields4[0].Descriptor()
	// entity.DefaultTags holds the default value on creation for the tags field.
	entity.DefaultTags = entityDescTags.Default.([]string)
	// entityDescOwnerID is the schema descriptor for owner_id field.
	entityDescOwnerID := entityMixinFields6[0].Descriptor()
	// entity.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	entity.OwnerIDValidator = entityDescOwnerID.Validators[0].(func(string) error)
	// entityDescName is the schema descriptor for name field.
	entityDescName := entityFields[0].Descriptor()
	// entity.NameValidator is a validator for the "name" field. It is called by the builders before save.
	entity.NameValidator = func() func(string) error {
		validators := entityDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entityDescDisplayName is the schema descriptor for display_name field.
	entityDescDisplayName := entityFields[1].Descriptor()
	// entity.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	entity.DisplayNameValidator = func() func(string) error {
		validators := entityDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entityDescDomains is the schema descriptor for domains field.
	entityDescDomains := entityFields[3].Descriptor()
	// entity.DomainsValidator is a validator for the "domains" field. It is called by the builders before save.
	entity.DomainsValidator = entityDescDomains.Validators[0].(func([]string) error)
	// entityDescStatus is the schema descriptor for status field.
	entityDescStatus := entityFields[5].Descriptor()
	// entity.DefaultStatus holds the default value on creation for the status field.
	entity.DefaultStatus = entityDescStatus.Default.(string)
	// entityDescID is the schema descriptor for id field.
	entityDescID := entityMixinFields3[0].Descriptor()
	// entity.DefaultID holds the default value on creation for the id field.
	entity.DefaultID = entityDescID.Default.(func() string)
	entityhistory.Policy = privacy.NewPolicies(schema.EntityHistory{})
	entityhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entityhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entityhistoryInters := schema.EntityHistory{}.Interceptors()
	entityhistory.Interceptors[0] = entityhistoryInters[0]
	entityhistoryFields := schema.EntityHistory{}.Fields()
	_ = entityhistoryFields
	// entityhistoryDescHistoryTime is the schema descriptor for history_time field.
	entityhistoryDescHistoryTime := entityhistoryFields[0].Descriptor()
	// entityhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	entityhistory.DefaultHistoryTime = entityhistoryDescHistoryTime.Default.(func() time.Time)
	// entityhistoryDescCreatedAt is the schema descriptor for created_at field.
	entityhistoryDescCreatedAt := entityhistoryFields[3].Descriptor()
	// entityhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	entityhistory.DefaultCreatedAt = entityhistoryDescCreatedAt.Default.(func() time.Time)
	// entityhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	entityhistoryDescUpdatedAt := entityhistoryFields[4].Descriptor()
	// entityhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entityhistory.DefaultUpdatedAt = entityhistoryDescUpdatedAt.Default.(func() time.Time)
	// entityhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entityhistory.UpdateDefaultUpdatedAt = entityhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entityhistoryDescTags is the schema descriptor for tags field.
	entityhistoryDescTags := entityhistoryFields[10].Descriptor()
	// entityhistory.DefaultTags holds the default value on creation for the tags field.
	entityhistory.DefaultTags = entityhistoryDescTags.Default.([]string)
	// entityhistoryDescStatus is the schema descriptor for status field.
	entityhistoryDescStatus := entityhistoryFields[17].Descriptor()
	// entityhistory.DefaultStatus holds the default value on creation for the status field.
	entityhistory.DefaultStatus = entityhistoryDescStatus.Default.(string)
	// entityhistoryDescID is the schema descriptor for id field.
	entityhistoryDescID := entityhistoryFields[9].Descriptor()
	// entityhistory.DefaultID holds the default value on creation for the id field.
	entityhistory.DefaultID = entityhistoryDescID.Default.(func() string)
	entitytypeMixin := schema.EntityType{}.Mixin()
	entitytype.Policy = privacy.NewPolicies(schema.EntityType{})
	entitytype.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entitytype.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entitytypeMixinHooks0 := entitytypeMixin[0].Hooks()
	entitytypeMixinHooks1 := entitytypeMixin[1].Hooks()
	entitytypeMixinHooks2 := entitytypeMixin[2].Hooks()
	entitytypeMixinHooks6 := entitytypeMixin[6].Hooks()

	entitytype.Hooks[1] = entitytypeMixinHooks0[0]

	entitytype.Hooks[2] = entitytypeMixinHooks1[0]

	entitytype.Hooks[3] = entitytypeMixinHooks2[0]

	entitytype.Hooks[4] = entitytypeMixinHooks6[0]
	entitytypeMixinInters1 := entitytypeMixin[1].Interceptors()
	entitytypeMixinInters2 := entitytypeMixin[2].Interceptors()
	entitytypeMixinInters6 := entitytypeMixin[6].Interceptors()
	entitytype.Interceptors[0] = entitytypeMixinInters1[0]
	entitytype.Interceptors[1] = entitytypeMixinInters2[0]
	entitytype.Interceptors[2] = entitytypeMixinInters6[0]
	entitytypeMixinFields0 := entitytypeMixin[0].Fields()
	_ = entitytypeMixinFields0
	entitytypeMixinFields3 := entitytypeMixin[3].Fields()
	_ = entitytypeMixinFields3
	entitytypeMixinFields4 := entitytypeMixin[4].Fields()
	_ = entitytypeMixinFields4
	entitytypeMixinFields6 := entitytypeMixin[6].Fields()
	_ = entitytypeMixinFields6
	entitytypeFields := schema.EntityType{}.Fields()
	_ = entitytypeFields
	// entitytypeDescCreatedAt is the schema descriptor for created_at field.
	entitytypeDescCreatedAt := entitytypeMixinFields0[0].Descriptor()
	// entitytype.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitytype.DefaultCreatedAt = entitytypeDescCreatedAt.Default.(func() time.Time)
	// entitytypeDescUpdatedAt is the schema descriptor for updated_at field.
	entitytypeDescUpdatedAt := entitytypeMixinFields0[1].Descriptor()
	// entitytype.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitytype.DefaultUpdatedAt = entitytypeDescUpdatedAt.Default.(func() time.Time)
	// entitytype.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitytype.UpdateDefaultUpdatedAt = entitytypeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitytypeDescTags is the schema descriptor for tags field.
	entitytypeDescTags := entitytypeMixinFields4[0].Descriptor()
	// entitytype.DefaultTags holds the default value on creation for the tags field.
	entitytype.DefaultTags = entitytypeDescTags.Default.([]string)
	// entitytypeDescOwnerID is the schema descriptor for owner_id field.
	entitytypeDescOwnerID := entitytypeMixinFields6[0].Descriptor()
	// entitytype.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	entitytype.OwnerIDValidator = entitytypeDescOwnerID.Validators[0].(func(string) error)
	// entitytypeDescName is the schema descriptor for name field.
	entitytypeDescName := entitytypeFields[0].Descriptor()
	// entitytype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	entitytype.NameValidator = func() func(string) error {
		validators := entitytypeDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// entitytypeDescID is the schema descriptor for id field.
	entitytypeDescID := entitytypeMixinFields3[0].Descriptor()
	// entitytype.DefaultID holds the default value on creation for the id field.
	entitytype.DefaultID = entitytypeDescID.Default.(func() string)
	entitytypehistory.Policy = privacy.NewPolicies(schema.EntityTypeHistory{})
	entitytypehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := entitytypehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	entitytypehistoryInters := schema.EntityTypeHistory{}.Interceptors()
	entitytypehistory.Interceptors[0] = entitytypehistoryInters[0]
	entitytypehistoryFields := schema.EntityTypeHistory{}.Fields()
	_ = entitytypehistoryFields
	// entitytypehistoryDescHistoryTime is the schema descriptor for history_time field.
	entitytypehistoryDescHistoryTime := entitytypehistoryFields[0].Descriptor()
	// entitytypehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	entitytypehistory.DefaultHistoryTime = entitytypehistoryDescHistoryTime.Default.(func() time.Time)
	// entitytypehistoryDescCreatedAt is the schema descriptor for created_at field.
	entitytypehistoryDescCreatedAt := entitytypehistoryFields[3].Descriptor()
	// entitytypehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	entitytypehistory.DefaultCreatedAt = entitytypehistoryDescCreatedAt.Default.(func() time.Time)
	// entitytypehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	entitytypehistoryDescUpdatedAt := entitytypehistoryFields[4].Descriptor()
	// entitytypehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entitytypehistory.DefaultUpdatedAt = entitytypehistoryDescUpdatedAt.Default.(func() time.Time)
	// entitytypehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entitytypehistory.UpdateDefaultUpdatedAt = entitytypehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entitytypehistoryDescTags is the schema descriptor for tags field.
	entitytypehistoryDescTags := entitytypehistoryFields[10].Descriptor()
	// entitytypehistory.DefaultTags holds the default value on creation for the tags field.
	entitytypehistory.DefaultTags = entitytypehistoryDescTags.Default.([]string)
	// entitytypehistoryDescID is the schema descriptor for id field.
	entitytypehistoryDescID := entitytypehistoryFields[9].Descriptor()
	// entitytypehistory.DefaultID holds the default value on creation for the id field.
	entitytypehistory.DefaultID = entitytypehistoryDescID.Default.(func() string)
	eventMixin := schema.Event{}.Mixin()
	event.Policy = privacy.NewPolicies(schema.Event{})
	event.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := event.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	eventMixinHooks0 := eventMixin[0].Hooks()

	event.Hooks[1] = eventMixinHooks0[0]
	eventMixinFields0 := eventMixin[0].Fields()
	_ = eventMixinFields0
	eventMixinFields1 := eventMixin[1].Fields()
	_ = eventMixinFields1
	eventMixinFields2 := eventMixin[2].Fields()
	_ = eventMixinFields2
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescCreatedAt is the schema descriptor for created_at field.
	eventDescCreatedAt := eventMixinFields0[0].Descriptor()
	// event.DefaultCreatedAt holds the default value on creation for the created_at field.
	event.DefaultCreatedAt = eventDescCreatedAt.Default.(func() time.Time)
	// eventDescUpdatedAt is the schema descriptor for updated_at field.
	eventDescUpdatedAt := eventMixinFields0[1].Descriptor()
	// event.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	event.DefaultUpdatedAt = eventDescUpdatedAt.Default.(func() time.Time)
	// event.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	event.UpdateDefaultUpdatedAt = eventDescUpdatedAt.UpdateDefault.(func() time.Time)
	// eventDescTags is the schema descriptor for tags field.
	eventDescTags := eventMixinFields2[0].Descriptor()
	// event.DefaultTags holds the default value on creation for the tags field.
	event.DefaultTags = eventDescTags.Default.([]string)
	// eventDescID is the schema descriptor for id field.
	eventDescID := eventMixinFields1[0].Descriptor()
	// event.DefaultID holds the default value on creation for the id field.
	event.DefaultID = eventDescID.Default.(func() string)
	evidenceMixin := schema.Evidence{}.Mixin()
	evidence.Policy = privacy.NewPolicies(schema.Evidence{})
	evidence.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := evidence.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	evidenceMixinHooks0 := evidenceMixin[0].Hooks()
	evidenceMixinHooks1 := evidenceMixin[1].Hooks()
	evidenceMixinHooks2 := evidenceMixin[2].Hooks()
	evidenceMixinHooks3 := evidenceMixin[3].Hooks()
	evidenceMixinHooks6 := evidenceMixin[6].Hooks()
	evidenceHooks := schema.Evidence{}.Hooks()

	evidence.Hooks[1] = evidenceMixinHooks0[0]

	evidence.Hooks[2] = evidenceMixinHooks1[0]

	evidence.Hooks[3] = evidenceMixinHooks2[0]

	evidence.Hooks[4] = evidenceMixinHooks3[0]

	evidence.Hooks[5] = evidenceMixinHooks6[0]

	evidence.Hooks[6] = evidenceMixinHooks6[1]

	evidence.Hooks[7] = evidenceHooks[0]
	evidenceMixinInters1 := evidenceMixin[1].Interceptors()
	evidenceMixinInters2 := evidenceMixin[2].Interceptors()
	evidenceMixinInters6 := evidenceMixin[6].Interceptors()
	evidence.Interceptors[0] = evidenceMixinInters1[0]
	evidence.Interceptors[1] = evidenceMixinInters2[0]
	evidence.Interceptors[2] = evidenceMixinInters6[0]
	evidence.Interceptors[3] = evidenceMixinInters6[1]
	evidenceMixinFields0 := evidenceMixin[0].Fields()
	_ = evidenceMixinFields0
	evidenceMixinFields3 := evidenceMixin[3].Fields()
	_ = evidenceMixinFields3
	evidenceMixinFields4 := evidenceMixin[4].Fields()
	_ = evidenceMixinFields4
	evidenceMixinFields6 := evidenceMixin[6].Fields()
	_ = evidenceMixinFields6
	evidenceFields := schema.Evidence{}.Fields()
	_ = evidenceFields
	// evidenceDescCreatedAt is the schema descriptor for created_at field.
	evidenceDescCreatedAt := evidenceMixinFields0[0].Descriptor()
	// evidence.DefaultCreatedAt holds the default value on creation for the created_at field.
	evidence.DefaultCreatedAt = evidenceDescCreatedAt.Default.(func() time.Time)
	// evidenceDescUpdatedAt is the schema descriptor for updated_at field.
	evidenceDescUpdatedAt := evidenceMixinFields0[1].Descriptor()
	// evidence.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	evidence.DefaultUpdatedAt = evidenceDescUpdatedAt.Default.(func() time.Time)
	// evidence.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	evidence.UpdateDefaultUpdatedAt = evidenceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// evidenceDescDisplayID is the schema descriptor for display_id field.
	evidenceDescDisplayID := evidenceMixinFields3[1].Descriptor()
	// evidence.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	evidence.DisplayIDValidator = evidenceDescDisplayID.Validators[0].(func(string) error)
	// evidenceDescTags is the schema descriptor for tags field.
	evidenceDescTags := evidenceMixinFields4[0].Descriptor()
	// evidence.DefaultTags holds the default value on creation for the tags field.
	evidence.DefaultTags = evidenceDescTags.Default.([]string)
	// evidenceDescOwnerID is the schema descriptor for owner_id field.
	evidenceDescOwnerID := evidenceMixinFields6[0].Descriptor()
	// evidence.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	evidence.OwnerIDValidator = evidenceDescOwnerID.Validators[0].(func(string) error)
	// evidenceDescName is the schema descriptor for name field.
	evidenceDescName := evidenceFields[0].Descriptor()
	// evidence.NameValidator is a validator for the "name" field. It is called by the builders before save.
	evidence.NameValidator = evidenceDescName.Validators[0].(func(string) error)
	// evidenceDescCreationDate is the schema descriptor for creation_date field.
	evidenceDescCreationDate := evidenceFields[3].Descriptor()
	// evidence.DefaultCreationDate holds the default value on creation for the creation_date field.
	evidence.DefaultCreationDate = evidenceDescCreationDate.Default.(func() time.Time)
	// evidenceDescRenewalDate is the schema descriptor for renewal_date field.
	evidenceDescRenewalDate := evidenceFields[4].Descriptor()
	// evidence.DefaultRenewalDate holds the default value on creation for the renewal_date field.
	evidence.DefaultRenewalDate = evidenceDescRenewalDate.Default.(time.Time)
	// evidenceDescIsAutomated is the schema descriptor for is_automated field.
	evidenceDescIsAutomated := evidenceFields[6].Descriptor()
	// evidence.DefaultIsAutomated holds the default value on creation for the is_automated field.
	evidence.DefaultIsAutomated = evidenceDescIsAutomated.Default.(bool)
	// evidenceDescURL is the schema descriptor for url field.
	evidenceDescURL := evidenceFields[7].Descriptor()
	// evidence.URLValidator is a validator for the "url" field. It is called by the builders before save.
	evidence.URLValidator = evidenceDescURL.Validators[0].(func(string) error)
	// evidenceDescID is the schema descriptor for id field.
	evidenceDescID := evidenceMixinFields3[0].Descriptor()
	// evidence.DefaultID holds the default value on creation for the id field.
	evidence.DefaultID = evidenceDescID.Default.(func() string)
	evidencehistory.Policy = privacy.NewPolicies(schema.EvidenceHistory{})
	evidencehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := evidencehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	evidencehistoryInters := schema.EvidenceHistory{}.Interceptors()
	evidencehistory.Interceptors[0] = evidencehistoryInters[0]
	evidencehistoryFields := schema.EvidenceHistory{}.Fields()
	_ = evidencehistoryFields
	// evidencehistoryDescHistoryTime is the schema descriptor for history_time field.
	evidencehistoryDescHistoryTime := evidencehistoryFields[0].Descriptor()
	// evidencehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	evidencehistory.DefaultHistoryTime = evidencehistoryDescHistoryTime.Default.(func() time.Time)
	// evidencehistoryDescCreatedAt is the schema descriptor for created_at field.
	evidencehistoryDescCreatedAt := evidencehistoryFields[3].Descriptor()
	// evidencehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	evidencehistory.DefaultCreatedAt = evidencehistoryDescCreatedAt.Default.(func() time.Time)
	// evidencehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	evidencehistoryDescUpdatedAt := evidencehistoryFields[4].Descriptor()
	// evidencehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	evidencehistory.DefaultUpdatedAt = evidencehistoryDescUpdatedAt.Default.(func() time.Time)
	// evidencehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	evidencehistory.UpdateDefaultUpdatedAt = evidencehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// evidencehistoryDescTags is the schema descriptor for tags field.
	evidencehistoryDescTags := evidencehistoryFields[11].Descriptor()
	// evidencehistory.DefaultTags holds the default value on creation for the tags field.
	evidencehistory.DefaultTags = evidencehistoryDescTags.Default.([]string)
	// evidencehistoryDescCreationDate is the schema descriptor for creation_date field.
	evidencehistoryDescCreationDate := evidencehistoryFields[16].Descriptor()
	// evidencehistory.DefaultCreationDate holds the default value on creation for the creation_date field.
	evidencehistory.DefaultCreationDate = evidencehistoryDescCreationDate.Default.(func() time.Time)
	// evidencehistoryDescRenewalDate is the schema descriptor for renewal_date field.
	evidencehistoryDescRenewalDate := evidencehistoryFields[17].Descriptor()
	// evidencehistory.DefaultRenewalDate holds the default value on creation for the renewal_date field.
	evidencehistory.DefaultRenewalDate = evidencehistoryDescRenewalDate.Default.(time.Time)
	// evidencehistoryDescIsAutomated is the schema descriptor for is_automated field.
	evidencehistoryDescIsAutomated := evidencehistoryFields[19].Descriptor()
	// evidencehistory.DefaultIsAutomated holds the default value on creation for the is_automated field.
	evidencehistory.DefaultIsAutomated = evidencehistoryDescIsAutomated.Default.(bool)
	// evidencehistoryDescID is the schema descriptor for id field.
	evidencehistoryDescID := evidencehistoryFields[9].Descriptor()
	// evidencehistory.DefaultID holds the default value on creation for the id field.
	evidencehistory.DefaultID = evidencehistoryDescID.Default.(func() string)
	exportMixin := schema.Export{}.Mixin()
	export.Policy = privacy.NewPolicies(schema.Export{})
	export.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := export.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	exportMixinHooks0 := exportMixin[0].Hooks()
	exportMixinHooks1 := exportMixin[1].Hooks()
	exportMixinHooks2 := exportMixin[2].Hooks()
	exportMixinHooks5 := exportMixin[5].Hooks()
	exportHooks := schema.Export{}.Hooks()

	export.Hooks[1] = exportMixinHooks0[0]

	export.Hooks[2] = exportMixinHooks1[0]

	export.Hooks[3] = exportMixinHooks2[0]

	export.Hooks[4] = exportMixinHooks5[0]

	export.Hooks[5] = exportHooks[0]
	exportMixinInters1 := exportMixin[1].Interceptors()
	exportMixinInters2 := exportMixin[2].Interceptors()
	exportMixinInters5 := exportMixin[5].Interceptors()
	export.Interceptors[0] = exportMixinInters1[0]
	export.Interceptors[1] = exportMixinInters2[0]
	export.Interceptors[2] = exportMixinInters5[0]
	exportMixinFields0 := exportMixin[0].Fields()
	_ = exportMixinFields0
	exportMixinFields3 := exportMixin[3].Fields()
	_ = exportMixinFields3
	exportFields := schema.Export{}.Fields()
	_ = exportFields
	// exportDescCreatedAt is the schema descriptor for created_at field.
	exportDescCreatedAt := exportMixinFields0[0].Descriptor()
	// export.DefaultCreatedAt holds the default value on creation for the created_at field.
	export.DefaultCreatedAt = exportDescCreatedAt.Default.(func() time.Time)
	// exportDescUpdatedAt is the schema descriptor for updated_at field.
	exportDescUpdatedAt := exportMixinFields0[1].Descriptor()
	// export.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	export.DefaultUpdatedAt = exportDescUpdatedAt.Default.(func() time.Time)
	// export.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	export.UpdateDefaultUpdatedAt = exportDescUpdatedAt.UpdateDefault.(func() time.Time)
	// exportDescRequestorID is the schema descriptor for requestor_id field.
	exportDescRequestorID := exportFields[3].Descriptor()
	// export.RequestorIDValidator is a validator for the "requestor_id" field. It is called by the builders before save.
	export.RequestorIDValidator = exportDescRequestorID.Validators[0].(func(string) error)
	// exportDescFields is the schema descriptor for fields field.
	exportDescFields := exportFields[4].Descriptor()
	// export.DefaultFields holds the default value on creation for the fields field.
	export.DefaultFields = exportDescFields.Default.([]string)
	// exportDescID is the schema descriptor for id field.
	exportDescID := exportMixinFields3[0].Descriptor()
	// export.DefaultID holds the default value on creation for the id field.
	export.DefaultID = exportDescID.Default.(func() string)
	fileMixin := schema.File{}.Mixin()
	file.Policy = privacy.NewPolicies(schema.File{})
	file.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := file.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	fileMixinHooks0 := fileMixin[0].Hooks()
	fileMixinHooks1 := fileMixin[1].Hooks()
	fileMixinHooks2 := fileMixin[2].Hooks()
	fileHooks := schema.File{}.Hooks()

	file.Hooks[1] = fileMixinHooks0[0]

	file.Hooks[2] = fileMixinHooks1[0]

	file.Hooks[3] = fileMixinHooks2[0]

	file.Hooks[4] = fileHooks[0]
	fileMixinInters1 := fileMixin[1].Interceptors()
	fileMixinInters2 := fileMixin[2].Interceptors()
	fileMixinInters6 := fileMixin[6].Interceptors()
	fileInters := schema.File{}.Interceptors()
	file.Interceptors[0] = fileMixinInters1[0]
	file.Interceptors[1] = fileMixinInters2[0]
	file.Interceptors[2] = fileMixinInters6[0]
	file.Interceptors[3] = fileInters[0]
	file.Interceptors[4] = fileInters[1]
	fileMixinFields0 := fileMixin[0].Fields()
	_ = fileMixinFields0
	fileMixinFields3 := fileMixin[3].Fields()
	_ = fileMixinFields3
	fileMixinFields4 := fileMixin[4].Fields()
	_ = fileMixinFields4
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescCreatedAt is the schema descriptor for created_at field.
	fileDescCreatedAt := fileMixinFields0[0].Descriptor()
	// file.DefaultCreatedAt holds the default value on creation for the created_at field.
	file.DefaultCreatedAt = fileDescCreatedAt.Default.(func() time.Time)
	// fileDescUpdatedAt is the schema descriptor for updated_at field.
	fileDescUpdatedAt := fileMixinFields0[1].Descriptor()
	// file.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	file.DefaultUpdatedAt = fileDescUpdatedAt.Default.(func() time.Time)
	// file.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	file.UpdateDefaultUpdatedAt = fileDescUpdatedAt.UpdateDefault.(func() time.Time)
	// fileDescTags is the schema descriptor for tags field.
	fileDescTags := fileMixinFields4[0].Descriptor()
	// file.DefaultTags holds the default value on creation for the tags field.
	file.DefaultTags = fileDescTags.Default.([]string)
	// fileDescProvidedFileSize is the schema descriptor for provided_file_size field.
	fileDescProvidedFileSize := fileFields[2].Descriptor()
	// file.ProvidedFileSizeValidator is a validator for the "provided_file_size" field. It is called by the builders before save.
	file.ProvidedFileSizeValidator = fileDescProvidedFileSize.Validators[0].(func(int64) error)
	// fileDescPersistedFileSize is the schema descriptor for persisted_file_size field.
	fileDescPersistedFileSize := fileFields[3].Descriptor()
	// file.PersistedFileSizeValidator is a validator for the "persisted_file_size" field. It is called by the builders before save.
	file.PersistedFileSizeValidator = fileDescPersistedFileSize.Validators[0].(func(int64) error)
	// fileDescID is the schema descriptor for id field.
	fileDescID := fileMixinFields3[0].Descriptor()
	// file.DefaultID holds the default value on creation for the id field.
	file.DefaultID = fileDescID.Default.(func() string)
	filehistory.Policy = privacy.NewPolicies(schema.FileHistory{})
	filehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := filehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	filehistoryInters := schema.FileHistory{}.Interceptors()
	filehistory.Interceptors[0] = filehistoryInters[0]
	filehistoryFields := schema.FileHistory{}.Fields()
	_ = filehistoryFields
	// filehistoryDescHistoryTime is the schema descriptor for history_time field.
	filehistoryDescHistoryTime := filehistoryFields[0].Descriptor()
	// filehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	filehistory.DefaultHistoryTime = filehistoryDescHistoryTime.Default.(func() time.Time)
	// filehistoryDescCreatedAt is the schema descriptor for created_at field.
	filehistoryDescCreatedAt := filehistoryFields[3].Descriptor()
	// filehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	filehistory.DefaultCreatedAt = filehistoryDescCreatedAt.Default.(func() time.Time)
	// filehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	filehistoryDescUpdatedAt := filehistoryFields[4].Descriptor()
	// filehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	filehistory.DefaultUpdatedAt = filehistoryDescUpdatedAt.Default.(func() time.Time)
	// filehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	filehistory.UpdateDefaultUpdatedAt = filehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// filehistoryDescTags is the schema descriptor for tags field.
	filehistoryDescTags := filehistoryFields[10].Descriptor()
	// filehistory.DefaultTags holds the default value on creation for the tags field.
	filehistory.DefaultTags = filehistoryDescTags.Default.([]string)
	// filehistoryDescID is the schema descriptor for id field.
	filehistoryDescID := filehistoryFields[9].Descriptor()
	// filehistory.DefaultID holds the default value on creation for the id field.
	filehistory.DefaultID = filehistoryDescID.Default.(func() string)
	groupMixin := schema.Group{}.Mixin()
	group.Policy = privacy.NewPolicies(schema.Group{})
	group.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := group.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupMixinHooks0 := groupMixin[0].Hooks()
	groupMixinHooks1 := groupMixin[1].Hooks()
	groupMixinHooks2 := groupMixin[2].Hooks()
	groupMixinHooks3 := groupMixin[3].Hooks()
	groupMixinHooks6 := groupMixin[6].Hooks()
	groupMixinHooks7 := groupMixin[7].Hooks()
	groupHooks := schema.Group{}.Hooks()

	group.Hooks[1] = groupMixinHooks0[0]

	group.Hooks[2] = groupMixinHooks1[0]

	group.Hooks[3] = groupMixinHooks2[0]

	group.Hooks[4] = groupMixinHooks3[0]

	group.Hooks[5] = groupMixinHooks6[0]

	group.Hooks[6] = groupMixinHooks7[0]

	group.Hooks[7] = groupHooks[0]

	group.Hooks[8] = groupHooks[1]

	group.Hooks[9] = groupHooks[2]
	groupMixinInters1 := groupMixin[1].Interceptors()
	groupMixinInters2 := groupMixin[2].Interceptors()
	groupMixinInters6 := groupMixin[6].Interceptors()
	groupInters := schema.Group{}.Interceptors()
	group.Interceptors[0] = groupMixinInters1[0]
	group.Interceptors[1] = groupMixinInters2[0]
	group.Interceptors[2] = groupMixinInters6[0]
	group.Interceptors[3] = groupInters[0]
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupMixinFields3 := groupMixin[3].Fields()
	_ = groupMixinFields3
	groupMixinFields4 := groupMixin[4].Fields()
	_ = groupMixinFields4
	groupMixinFields6 := groupMixin[6].Fields()
	_ = groupMixinFields6
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupMixinFields0[0].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupMixinFields0[1].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescDisplayID is the schema descriptor for display_id field.
	groupDescDisplayID := groupMixinFields3[1].Descriptor()
	// group.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	group.DisplayIDValidator = groupDescDisplayID.Validators[0].(func(string) error)
	// groupDescTags is the schema descriptor for tags field.
	groupDescTags := groupMixinFields4[0].Descriptor()
	// group.DefaultTags holds the default value on creation for the tags field.
	group.DefaultTags = groupDescTags.Default.([]string)
	// groupDescOwnerID is the schema descriptor for owner_id field.
	groupDescOwnerID := groupMixinFields6[0].Descriptor()
	// group.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	group.OwnerIDValidator = groupDescOwnerID.Validators[0].(func(string) error)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = func() func(string) error {
		validators := groupDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// groupDescIsManaged is the schema descriptor for is_managed field.
	groupDescIsManaged := groupFields[2].Descriptor()
	// group.DefaultIsManaged holds the default value on creation for the is_managed field.
	group.DefaultIsManaged = groupDescIsManaged.Default.(bool)
	// groupDescGravatarLogoURL is the schema descriptor for gravatar_logo_url field.
	groupDescGravatarLogoURL := groupFields[3].Descriptor()
	// group.GravatarLogoURLValidator is a validator for the "gravatar_logo_url" field. It is called by the builders before save.
	group.GravatarLogoURLValidator = groupDescGravatarLogoURL.Validators[0].(func(string) error)
	// groupDescLogoURL is the schema descriptor for logo_url field.
	groupDescLogoURL := groupFields[4].Descriptor()
	// group.LogoURLValidator is a validator for the "logo_url" field. It is called by the builders before save.
	group.LogoURLValidator = groupDescLogoURL.Validators[0].(func(string) error)
	// groupDescDisplayName is the schema descriptor for display_name field.
	groupDescDisplayName := groupFields[5].Descriptor()
	// group.DefaultDisplayName holds the default value on creation for the display_name field.
	group.DefaultDisplayName = groupDescDisplayName.Default.(string)
	// group.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	group.DisplayNameValidator = groupDescDisplayName.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupMixinFields3[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() string)
	grouphistory.Policy = privacy.NewPolicies(schema.GroupHistory{})
	grouphistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := grouphistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	grouphistoryInters := schema.GroupHistory{}.Interceptors()
	grouphistory.Interceptors[0] = grouphistoryInters[0]
	grouphistoryFields := schema.GroupHistory{}.Fields()
	_ = grouphistoryFields
	// grouphistoryDescHistoryTime is the schema descriptor for history_time field.
	grouphistoryDescHistoryTime := grouphistoryFields[0].Descriptor()
	// grouphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	grouphistory.DefaultHistoryTime = grouphistoryDescHistoryTime.Default.(func() time.Time)
	// grouphistoryDescCreatedAt is the schema descriptor for created_at field.
	grouphistoryDescCreatedAt := grouphistoryFields[3].Descriptor()
	// grouphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	grouphistory.DefaultCreatedAt = grouphistoryDescCreatedAt.Default.(func() time.Time)
	// grouphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	grouphistoryDescUpdatedAt := grouphistoryFields[4].Descriptor()
	// grouphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	grouphistory.DefaultUpdatedAt = grouphistoryDescUpdatedAt.Default.(func() time.Time)
	// grouphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	grouphistory.UpdateDefaultUpdatedAt = grouphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// grouphistoryDescTags is the schema descriptor for tags field.
	grouphistoryDescTags := grouphistoryFields[11].Descriptor()
	// grouphistory.DefaultTags holds the default value on creation for the tags field.
	grouphistory.DefaultTags = grouphistoryDescTags.Default.([]string)
	// grouphistoryDescIsManaged is the schema descriptor for is_managed field.
	grouphistoryDescIsManaged := grouphistoryFields[15].Descriptor()
	// grouphistory.DefaultIsManaged holds the default value on creation for the is_managed field.
	grouphistory.DefaultIsManaged = grouphistoryDescIsManaged.Default.(bool)
	// grouphistoryDescDisplayName is the schema descriptor for display_name field.
	grouphistoryDescDisplayName := grouphistoryFields[18].Descriptor()
	// grouphistory.DefaultDisplayName holds the default value on creation for the display_name field.
	grouphistory.DefaultDisplayName = grouphistoryDescDisplayName.Default.(string)
	// grouphistoryDescID is the schema descriptor for id field.
	grouphistoryDescID := grouphistoryFields[9].Descriptor()
	// grouphistory.DefaultID holds the default value on creation for the id field.
	grouphistory.DefaultID = grouphistoryDescID.Default.(func() string)
	groupmembershipMixin := schema.GroupMembership{}.Mixin()
	groupmembership.Policy = privacy.NewPolicies(schema.GroupMembership{})
	groupmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupmembershipMixinHooks0 := groupmembershipMixin[0].Hooks()
	groupmembershipMixinHooks1 := groupmembershipMixin[1].Hooks()
	groupmembershipHooks := schema.GroupMembership{}.Hooks()

	groupmembership.Hooks[1] = groupmembershipMixinHooks0[0]

	groupmembership.Hooks[2] = groupmembershipMixinHooks1[0]

	groupmembership.Hooks[3] = groupmembershipHooks[0]

	groupmembership.Hooks[4] = groupmembershipHooks[1]
	groupmembershipMixinInters1 := groupmembershipMixin[1].Interceptors()
	groupmembershipInters := schema.GroupMembership{}.Interceptors()
	groupmembership.Interceptors[0] = groupmembershipMixinInters1[0]
	groupmembership.Interceptors[1] = groupmembershipInters[0]
	groupmembershipMixinFields0 := groupmembershipMixin[0].Fields()
	_ = groupmembershipMixinFields0
	groupmembershipMixinFields2 := groupmembershipMixin[2].Fields()
	_ = groupmembershipMixinFields2
	groupmembershipFields := schema.GroupMembership{}.Fields()
	_ = groupmembershipFields
	// groupmembershipDescCreatedAt is the schema descriptor for created_at field.
	groupmembershipDescCreatedAt := groupmembershipMixinFields0[0].Descriptor()
	// groupmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembership.DefaultCreatedAt = groupmembershipDescCreatedAt.Default.(func() time.Time)
	// groupmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershipDescUpdatedAt := groupmembershipMixinFields0[1].Descriptor()
	// groupmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembership.DefaultUpdatedAt = groupmembershipDescUpdatedAt.Default.(func() time.Time)
	// groupmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupmembership.UpdateDefaultUpdatedAt = groupmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupmembershipDescID is the schema descriptor for id field.
	groupmembershipDescID := groupmembershipMixinFields2[0].Descriptor()
	// groupmembership.DefaultID holds the default value on creation for the id field.
	groupmembership.DefaultID = groupmembershipDescID.Default.(func() string)
	groupmembershiphistory.Policy = privacy.NewPolicies(schema.GroupMembershipHistory{})
	groupmembershiphistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupmembershiphistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupmembershiphistoryInters := schema.GroupMembershipHistory{}.Interceptors()
	groupmembershiphistory.Interceptors[0] = groupmembershiphistoryInters[0]
	groupmembershiphistoryFields := schema.GroupMembershipHistory{}.Fields()
	_ = groupmembershiphistoryFields
	// groupmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	groupmembershiphistoryDescHistoryTime := groupmembershiphistoryFields[0].Descriptor()
	// groupmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupmembershiphistory.DefaultHistoryTime = groupmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// groupmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	groupmembershiphistoryDescCreatedAt := groupmembershiphistoryFields[3].Descriptor()
	// groupmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupmembershiphistory.DefaultCreatedAt = groupmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// groupmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupmembershiphistoryDescUpdatedAt := groupmembershiphistoryFields[4].Descriptor()
	// groupmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupmembershiphistory.DefaultUpdatedAt = groupmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// groupmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupmembershiphistory.UpdateDefaultUpdatedAt = groupmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupmembershiphistoryDescID is the schema descriptor for id field.
	groupmembershiphistoryDescID := groupmembershiphistoryFields[7].Descriptor()
	// groupmembershiphistory.DefaultID holds the default value on creation for the id field.
	groupmembershiphistory.DefaultID = groupmembershiphistoryDescID.Default.(func() string)
	groupsettingMixin := schema.GroupSetting{}.Mixin()
	groupsetting.Policy = privacy.NewPolicies(schema.GroupSetting{})
	groupsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupsettingMixinHooks0 := groupsettingMixin[0].Hooks()
	groupsettingMixinHooks1 := groupsettingMixin[1].Hooks()
	groupsettingMixinHooks2 := groupsettingMixin[2].Hooks()
	groupsettingHooks := schema.GroupSetting{}.Hooks()

	groupsetting.Hooks[1] = groupsettingMixinHooks0[0]

	groupsetting.Hooks[2] = groupsettingMixinHooks1[0]

	groupsetting.Hooks[3] = groupsettingMixinHooks2[0]

	groupsetting.Hooks[4] = groupsettingHooks[0]
	groupsettingMixinInters1 := groupsettingMixin[1].Interceptors()
	groupsettingMixinInters2 := groupsettingMixin[2].Interceptors()
	groupsettingInters := schema.GroupSetting{}.Interceptors()
	groupsetting.Interceptors[0] = groupsettingMixinInters1[0]
	groupsetting.Interceptors[1] = groupsettingMixinInters2[0]
	groupsetting.Interceptors[2] = groupsettingInters[0]
	groupsettingMixinFields0 := groupsettingMixin[0].Fields()
	_ = groupsettingMixinFields0
	groupsettingMixinFields3 := groupsettingMixin[3].Fields()
	_ = groupsettingMixinFields3
	groupsettingFields := schema.GroupSetting{}.Fields()
	_ = groupsettingFields
	// groupsettingDescCreatedAt is the schema descriptor for created_at field.
	groupsettingDescCreatedAt := groupsettingMixinFields0[0].Descriptor()
	// groupsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsetting.DefaultCreatedAt = groupsettingDescCreatedAt.Default.(func() time.Time)
	// groupsettingDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettingDescUpdatedAt := groupsettingMixinFields0[1].Descriptor()
	// groupsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsetting.DefaultUpdatedAt = groupsettingDescUpdatedAt.Default.(func() time.Time)
	// groupsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsetting.UpdateDefaultUpdatedAt = groupsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettingDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettingDescSyncToSlack := groupsettingFields[2].Descriptor()
	// groupsetting.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsetting.DefaultSyncToSlack = groupsettingDescSyncToSlack.Default.(bool)
	// groupsettingDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettingDescSyncToGithub := groupsettingFields[3].Descriptor()
	// groupsetting.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsetting.DefaultSyncToGithub = groupsettingDescSyncToGithub.Default.(bool)
	// groupsettingDescID is the schema descriptor for id field.
	groupsettingDescID := groupsettingMixinFields3[0].Descriptor()
	// groupsetting.DefaultID holds the default value on creation for the id field.
	groupsetting.DefaultID = groupsettingDescID.Default.(func() string)
	groupsettinghistory.Policy = privacy.NewPolicies(schema.GroupSettingHistory{})
	groupsettinghistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := groupsettinghistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	groupsettinghistoryInters := schema.GroupSettingHistory{}.Interceptors()
	groupsettinghistory.Interceptors[0] = groupsettinghistoryInters[0]
	groupsettinghistoryFields := schema.GroupSettingHistory{}.Fields()
	_ = groupsettinghistoryFields
	// groupsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	groupsettinghistoryDescHistoryTime := groupsettinghistoryFields[0].Descriptor()
	// groupsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	groupsettinghistory.DefaultHistoryTime = groupsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// groupsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	groupsettinghistoryDescCreatedAt := groupsettinghistoryFields[3].Descriptor()
	// groupsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	groupsettinghistory.DefaultCreatedAt = groupsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// groupsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	groupsettinghistoryDescUpdatedAt := groupsettinghistoryFields[4].Descriptor()
	// groupsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	groupsettinghistory.DefaultUpdatedAt = groupsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// groupsettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	groupsettinghistory.UpdateDefaultUpdatedAt = groupsettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupsettinghistoryDescSyncToSlack is the schema descriptor for sync_to_slack field.
	groupsettinghistoryDescSyncToSlack := groupsettinghistoryFields[12].Descriptor()
	// groupsettinghistory.DefaultSyncToSlack holds the default value on creation for the sync_to_slack field.
	groupsettinghistory.DefaultSyncToSlack = groupsettinghistoryDescSyncToSlack.Default.(bool)
	// groupsettinghistoryDescSyncToGithub is the schema descriptor for sync_to_github field.
	groupsettinghistoryDescSyncToGithub := groupsettinghistoryFields[13].Descriptor()
	// groupsettinghistory.DefaultSyncToGithub holds the default value on creation for the sync_to_github field.
	groupsettinghistory.DefaultSyncToGithub = groupsettinghistoryDescSyncToGithub.Default.(bool)
	// groupsettinghistoryDescID is the schema descriptor for id field.
	groupsettinghistoryDescID := groupsettinghistoryFields[9].Descriptor()
	// groupsettinghistory.DefaultID holds the default value on creation for the id field.
	groupsettinghistory.DefaultID = groupsettinghistoryDescID.Default.(func() string)
	hushMixin := schema.Hush{}.Mixin()
	hush.Policy = privacy.NewPolicies(schema.Hush{})
	hush.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hush.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hushMixinHooks0 := hushMixin[0].Hooks()
	hushMixinHooks1 := hushMixin[1].Hooks()
	hushMixinHooks2 := hushMixin[2].Hooks()
	hushMixinHooks5 := hushMixin[5].Hooks()

	hush.Hooks[1] = hushMixinHooks0[0]

	hush.Hooks[2] = hushMixinHooks1[0]

	hush.Hooks[3] = hushMixinHooks2[0]

	hush.Hooks[4] = hushMixinHooks5[0]
	hushMixinInters1 := hushMixin[1].Interceptors()
	hushMixinInters2 := hushMixin[2].Interceptors()
	hushMixinInters5 := hushMixin[5].Interceptors()
	hush.Interceptors[0] = hushMixinInters1[0]
	hush.Interceptors[1] = hushMixinInters2[0]
	hush.Interceptors[2] = hushMixinInters5[0]
	hushMixinFields0 := hushMixin[0].Fields()
	_ = hushMixinFields0
	hushMixinFields3 := hushMixin[3].Fields()
	_ = hushMixinFields3
	hushMixinFields5 := hushMixin[5].Fields()
	_ = hushMixinFields5
	hushFields := schema.Hush{}.Fields()
	_ = hushFields
	// hushDescCreatedAt is the schema descriptor for created_at field.
	hushDescCreatedAt := hushMixinFields0[0].Descriptor()
	// hush.DefaultCreatedAt holds the default value on creation for the created_at field.
	hush.DefaultCreatedAt = hushDescCreatedAt.Default.(func() time.Time)
	// hushDescUpdatedAt is the schema descriptor for updated_at field.
	hushDescUpdatedAt := hushMixinFields0[1].Descriptor()
	// hush.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hush.DefaultUpdatedAt = hushDescUpdatedAt.Default.(func() time.Time)
	// hush.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	hush.UpdateDefaultUpdatedAt = hushDescUpdatedAt.UpdateDefault.(func() time.Time)
	// hushDescOwnerID is the schema descriptor for owner_id field.
	hushDescOwnerID := hushMixinFields5[0].Descriptor()
	// hush.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	hush.OwnerIDValidator = hushDescOwnerID.Validators[0].(func(string) error)
	// hushDescName is the schema descriptor for name field.
	hushDescName := hushFields[0].Descriptor()
	// hush.NameValidator is a validator for the "name" field. It is called by the builders before save.
	hush.NameValidator = hushDescName.Validators[0].(func(string) error)
	// hushDescID is the schema descriptor for id field.
	hushDescID := hushMixinFields3[0].Descriptor()
	// hush.DefaultID holds the default value on creation for the id field.
	hush.DefaultID = hushDescID.Default.(func() string)
	hushhistory.Policy = privacy.NewPolicies(schema.HushHistory{})
	hushhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hushhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hushhistoryInters := schema.HushHistory{}.Interceptors()
	hushhistory.Interceptors[0] = hushhistoryInters[0]
	hushhistoryFields := schema.HushHistory{}.Fields()
	_ = hushhistoryFields
	// hushhistoryDescHistoryTime is the schema descriptor for history_time field.
	hushhistoryDescHistoryTime := hushhistoryFields[0].Descriptor()
	// hushhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	hushhistory.DefaultHistoryTime = hushhistoryDescHistoryTime.Default.(func() time.Time)
	// hushhistoryDescCreatedAt is the schema descriptor for created_at field.
	hushhistoryDescCreatedAt := hushhistoryFields[3].Descriptor()
	// hushhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	hushhistory.DefaultCreatedAt = hushhistoryDescCreatedAt.Default.(func() time.Time)
	// hushhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	hushhistoryDescUpdatedAt := hushhistoryFields[4].Descriptor()
	// hushhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	hushhistory.DefaultUpdatedAt = hushhistoryDescUpdatedAt.Default.(func() time.Time)
	// hushhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	hushhistory.UpdateDefaultUpdatedAt = hushhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// hushhistoryDescID is the schema descriptor for id field.
	hushhistoryDescID := hushhistoryFields[9].Descriptor()
	// hushhistory.DefaultID holds the default value on creation for the id field.
	hushhistory.DefaultID = hushhistoryDescID.Default.(func() string)
	integrationMixin := schema.Integration{}.Mixin()
	integration.Policy = privacy.NewPolicies(schema.Integration{})
	integration.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := integration.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	integrationMixinHooks0 := integrationMixin[0].Hooks()
	integrationMixinHooks1 := integrationMixin[1].Hooks()
	integrationMixinHooks2 := integrationMixin[2].Hooks()
	integrationMixinHooks6 := integrationMixin[6].Hooks()

	integration.Hooks[1] = integrationMixinHooks0[0]

	integration.Hooks[2] = integrationMixinHooks1[0]

	integration.Hooks[3] = integrationMixinHooks2[0]

	integration.Hooks[4] = integrationMixinHooks6[0]
	integrationMixinInters1 := integrationMixin[1].Interceptors()
	integrationMixinInters2 := integrationMixin[2].Interceptors()
	integrationMixinInters6 := integrationMixin[6].Interceptors()
	integration.Interceptors[0] = integrationMixinInters1[0]
	integration.Interceptors[1] = integrationMixinInters2[0]
	integration.Interceptors[2] = integrationMixinInters6[0]
	integrationMixinFields0 := integrationMixin[0].Fields()
	_ = integrationMixinFields0
	integrationMixinFields3 := integrationMixin[3].Fields()
	_ = integrationMixinFields3
	integrationMixinFields4 := integrationMixin[4].Fields()
	_ = integrationMixinFields4
	integrationMixinFields6 := integrationMixin[6].Fields()
	_ = integrationMixinFields6
	integrationFields := schema.Integration{}.Fields()
	_ = integrationFields
	// integrationDescCreatedAt is the schema descriptor for created_at field.
	integrationDescCreatedAt := integrationMixinFields0[0].Descriptor()
	// integration.DefaultCreatedAt holds the default value on creation for the created_at field.
	integration.DefaultCreatedAt = integrationDescCreatedAt.Default.(func() time.Time)
	// integrationDescUpdatedAt is the schema descriptor for updated_at field.
	integrationDescUpdatedAt := integrationMixinFields0[1].Descriptor()
	// integration.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integration.DefaultUpdatedAt = integrationDescUpdatedAt.Default.(func() time.Time)
	// integration.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integration.UpdateDefaultUpdatedAt = integrationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationDescTags is the schema descriptor for tags field.
	integrationDescTags := integrationMixinFields4[0].Descriptor()
	// integration.DefaultTags holds the default value on creation for the tags field.
	integration.DefaultTags = integrationDescTags.Default.([]string)
	// integrationDescOwnerID is the schema descriptor for owner_id field.
	integrationDescOwnerID := integrationMixinFields6[0].Descriptor()
	// integration.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	integration.OwnerIDValidator = integrationDescOwnerID.Validators[0].(func(string) error)
	// integrationDescName is the schema descriptor for name field.
	integrationDescName := integrationFields[0].Descriptor()
	// integration.NameValidator is a validator for the "name" field. It is called by the builders before save.
	integration.NameValidator = integrationDescName.Validators[0].(func(string) error)
	// integrationDescID is the schema descriptor for id field.
	integrationDescID := integrationMixinFields3[0].Descriptor()
	// integration.DefaultID holds the default value on creation for the id field.
	integration.DefaultID = integrationDescID.Default.(func() string)
	integrationhistory.Policy = privacy.NewPolicies(schema.IntegrationHistory{})
	integrationhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := integrationhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	integrationhistoryInters := schema.IntegrationHistory{}.Interceptors()
	integrationhistory.Interceptors[0] = integrationhistoryInters[0]
	integrationhistoryFields := schema.IntegrationHistory{}.Fields()
	_ = integrationhistoryFields
	// integrationhistoryDescHistoryTime is the schema descriptor for history_time field.
	integrationhistoryDescHistoryTime := integrationhistoryFields[0].Descriptor()
	// integrationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	integrationhistory.DefaultHistoryTime = integrationhistoryDescHistoryTime.Default.(func() time.Time)
	// integrationhistoryDescCreatedAt is the schema descriptor for created_at field.
	integrationhistoryDescCreatedAt := integrationhistoryFields[3].Descriptor()
	// integrationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	integrationhistory.DefaultCreatedAt = integrationhistoryDescCreatedAt.Default.(func() time.Time)
	// integrationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	integrationhistoryDescUpdatedAt := integrationhistoryFields[4].Descriptor()
	// integrationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	integrationhistory.DefaultUpdatedAt = integrationhistoryDescUpdatedAt.Default.(func() time.Time)
	// integrationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	integrationhistory.UpdateDefaultUpdatedAt = integrationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// integrationhistoryDescTags is the schema descriptor for tags field.
	integrationhistoryDescTags := integrationhistoryFields[10].Descriptor()
	// integrationhistory.DefaultTags holds the default value on creation for the tags field.
	integrationhistory.DefaultTags = integrationhistoryDescTags.Default.([]string)
	// integrationhistoryDescID is the schema descriptor for id field.
	integrationhistoryDescID := integrationhistoryFields[9].Descriptor()
	// integrationhistory.DefaultID holds the default value on creation for the id field.
	integrationhistory.DefaultID = integrationhistoryDescID.Default.(func() string)
	internalpolicyMixin := schema.InternalPolicy{}.Mixin()
	internalpolicy.Policy = privacy.NewPolicies(schema.InternalPolicy{})
	internalpolicy.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := internalpolicy.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	internalpolicyMixinHooks0 := internalpolicyMixin[0].Hooks()
	internalpolicyMixinHooks1 := internalpolicyMixin[1].Hooks()
	internalpolicyMixinHooks2 := internalpolicyMixin[2].Hooks()
	internalpolicyMixinHooks3 := internalpolicyMixin[3].Hooks()
	internalpolicyMixinHooks5 := internalpolicyMixin[5].Hooks()
	internalpolicyMixinHooks7 := internalpolicyMixin[7].Hooks()
	internalpolicyMixinHooks8 := internalpolicyMixin[8].Hooks()
	internalpolicyMixinHooks9 := internalpolicyMixin[9].Hooks()
	internalpolicyHooks := schema.InternalPolicy{}.Hooks()

	internalpolicy.Hooks[1] = internalpolicyMixinHooks0[0]

	internalpolicy.Hooks[2] = internalpolicyMixinHooks1[0]

	internalpolicy.Hooks[3] = internalpolicyMixinHooks2[0]

	internalpolicy.Hooks[4] = internalpolicyMixinHooks3[0]

	internalpolicy.Hooks[5] = internalpolicyMixinHooks5[0]

	internalpolicy.Hooks[6] = internalpolicyMixinHooks7[0]

	internalpolicy.Hooks[7] = internalpolicyMixinHooks8[0]

	internalpolicy.Hooks[8] = internalpolicyMixinHooks8[1]

	internalpolicy.Hooks[9] = internalpolicyMixinHooks9[0]

	internalpolicy.Hooks[10] = internalpolicyMixinHooks9[1]

	internalpolicy.Hooks[11] = internalpolicyMixinHooks9[2]

	internalpolicy.Hooks[12] = internalpolicyHooks[0]
	internalpolicyMixinInters1 := internalpolicyMixin[1].Interceptors()
	internalpolicyMixinInters2 := internalpolicyMixin[2].Interceptors()
	internalpolicyMixinInters7 := internalpolicyMixin[7].Interceptors()
	internalpolicyMixinInters8 := internalpolicyMixin[8].Interceptors()
	internalpolicyInters := schema.InternalPolicy{}.Interceptors()
	internalpolicy.Interceptors[0] = internalpolicyMixinInters1[0]
	internalpolicy.Interceptors[1] = internalpolicyMixinInters2[0]
	internalpolicy.Interceptors[2] = internalpolicyMixinInters7[0]
	internalpolicy.Interceptors[3] = internalpolicyMixinInters8[0]
	internalpolicy.Interceptors[4] = internalpolicyInters[0]
	internalpolicyMixinFields0 := internalpolicyMixin[0].Fields()
	_ = internalpolicyMixinFields0
	internalpolicyMixinFields3 := internalpolicyMixin[3].Fields()
	_ = internalpolicyMixinFields3
	internalpolicyMixinFields4 := internalpolicyMixin[4].Fields()
	_ = internalpolicyMixinFields4
	internalpolicyMixinFields5 := internalpolicyMixin[5].Fields()
	_ = internalpolicyMixinFields5
	internalpolicyMixinFields9 := internalpolicyMixin[9].Fields()
	_ = internalpolicyMixinFields9
	internalpolicyFields := schema.InternalPolicy{}.Fields()
	_ = internalpolicyFields
	// internalpolicyDescCreatedAt is the schema descriptor for created_at field.
	internalpolicyDescCreatedAt := internalpolicyMixinFields0[0].Descriptor()
	// internalpolicy.DefaultCreatedAt holds the default value on creation for the created_at field.
	internalpolicy.DefaultCreatedAt = internalpolicyDescCreatedAt.Default.(func() time.Time)
	// internalpolicyDescUpdatedAt is the schema descriptor for updated_at field.
	internalpolicyDescUpdatedAt := internalpolicyMixinFields0[1].Descriptor()
	// internalpolicy.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	internalpolicy.DefaultUpdatedAt = internalpolicyDescUpdatedAt.Default.(func() time.Time)
	// internalpolicy.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	internalpolicy.UpdateDefaultUpdatedAt = internalpolicyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// internalpolicyDescDisplayID is the schema descriptor for display_id field.
	internalpolicyDescDisplayID := internalpolicyMixinFields3[1].Descriptor()
	// internalpolicy.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	internalpolicy.DisplayIDValidator = internalpolicyDescDisplayID.Validators[0].(func(string) error)
	// internalpolicyDescTags is the schema descriptor for tags field.
	internalpolicyDescTags := internalpolicyMixinFields4[0].Descriptor()
	// internalpolicy.DefaultTags holds the default value on creation for the tags field.
	internalpolicy.DefaultTags = internalpolicyDescTags.Default.([]string)
	// internalpolicyDescRevision is the schema descriptor for revision field.
	internalpolicyDescRevision := internalpolicyMixinFields5[0].Descriptor()
	// internalpolicy.DefaultRevision holds the default value on creation for the revision field.
	internalpolicy.DefaultRevision = internalpolicyDescRevision.Default.(string)
	// internalpolicy.RevisionValidator is a validator for the "revision" field. It is called by the builders before save.
	internalpolicy.RevisionValidator = internalpolicyDescRevision.Validators[0].(func(string) error)
	// internalpolicyDescName is the schema descriptor for name field.
	internalpolicyDescName := internalpolicyMixinFields9[0].Descriptor()
	// internalpolicy.NameValidator is a validator for the "name" field. It is called by the builders before save.
	internalpolicy.NameValidator = internalpolicyDescName.Validators[0].(func(string) error)
	// internalpolicyDescApprovalRequired is the schema descriptor for approval_required field.
	internalpolicyDescApprovalRequired := internalpolicyMixinFields9[4].Descriptor()
	// internalpolicy.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	internalpolicy.DefaultApprovalRequired = internalpolicyDescApprovalRequired.Default.(bool)
	// internalpolicyDescReviewDue is the schema descriptor for review_due field.
	internalpolicyDescReviewDue := internalpolicyMixinFields9[5].Descriptor()
	// internalpolicy.DefaultReviewDue holds the default value on creation for the review_due field.
	internalpolicy.DefaultReviewDue = internalpolicyDescReviewDue.Default.(time.Time)
	// internalpolicyDescTagSuggestions is the schema descriptor for tag_suggestions field.
	internalpolicyDescTagSuggestions := internalpolicyMixinFields9[10].Descriptor()
	// internalpolicy.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	internalpolicy.DefaultTagSuggestions = internalpolicyDescTagSuggestions.Default.([]string)
	// internalpolicyDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	internalpolicyDescDismissedTagSuggestions := internalpolicyMixinFields9[11].Descriptor()
	// internalpolicy.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	internalpolicy.DefaultDismissedTagSuggestions = internalpolicyDescDismissedTagSuggestions.Default.([]string)
	// internalpolicyDescControlSuggestions is the schema descriptor for control_suggestions field.
	internalpolicyDescControlSuggestions := internalpolicyMixinFields9[12].Descriptor()
	// internalpolicy.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	internalpolicy.DefaultControlSuggestions = internalpolicyDescControlSuggestions.Default.([]string)
	// internalpolicyDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	internalpolicyDescDismissedControlSuggestions := internalpolicyMixinFields9[13].Descriptor()
	// internalpolicy.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	internalpolicy.DefaultDismissedControlSuggestions = internalpolicyDescDismissedControlSuggestions.Default.([]string)
	// internalpolicyDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	internalpolicyDescImprovementSuggestions := internalpolicyMixinFields9[14].Descriptor()
	// internalpolicy.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	internalpolicy.DefaultImprovementSuggestions = internalpolicyDescImprovementSuggestions.Default.([]string)
	// internalpolicyDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	internalpolicyDescDismissedImprovementSuggestions := internalpolicyMixinFields9[15].Descriptor()
	// internalpolicy.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	internalpolicy.DefaultDismissedImprovementSuggestions = internalpolicyDescDismissedImprovementSuggestions.Default.([]string)
	// internalpolicyDescID is the schema descriptor for id field.
	internalpolicyDescID := internalpolicyMixinFields3[0].Descriptor()
	// internalpolicy.DefaultID holds the default value on creation for the id field.
	internalpolicy.DefaultID = internalpolicyDescID.Default.(func() string)
	internalpolicyhistory.Policy = privacy.NewPolicies(schema.InternalPolicyHistory{})
	internalpolicyhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := internalpolicyhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	internalpolicyhistoryInters := schema.InternalPolicyHistory{}.Interceptors()
	internalpolicyhistory.Interceptors[0] = internalpolicyhistoryInters[0]
	internalpolicyhistoryFields := schema.InternalPolicyHistory{}.Fields()
	_ = internalpolicyhistoryFields
	// internalpolicyhistoryDescHistoryTime is the schema descriptor for history_time field.
	internalpolicyhistoryDescHistoryTime := internalpolicyhistoryFields[0].Descriptor()
	// internalpolicyhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	internalpolicyhistory.DefaultHistoryTime = internalpolicyhistoryDescHistoryTime.Default.(func() time.Time)
	// internalpolicyhistoryDescCreatedAt is the schema descriptor for created_at field.
	internalpolicyhistoryDescCreatedAt := internalpolicyhistoryFields[3].Descriptor()
	// internalpolicyhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	internalpolicyhistory.DefaultCreatedAt = internalpolicyhistoryDescCreatedAt.Default.(func() time.Time)
	// internalpolicyhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	internalpolicyhistoryDescUpdatedAt := internalpolicyhistoryFields[4].Descriptor()
	// internalpolicyhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	internalpolicyhistory.DefaultUpdatedAt = internalpolicyhistoryDescUpdatedAt.Default.(func() time.Time)
	// internalpolicyhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	internalpolicyhistory.UpdateDefaultUpdatedAt = internalpolicyhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// internalpolicyhistoryDescTags is the schema descriptor for tags field.
	internalpolicyhistoryDescTags := internalpolicyhistoryFields[11].Descriptor()
	// internalpolicyhistory.DefaultTags holds the default value on creation for the tags field.
	internalpolicyhistory.DefaultTags = internalpolicyhistoryDescTags.Default.([]string)
	// internalpolicyhistoryDescRevision is the schema descriptor for revision field.
	internalpolicyhistoryDescRevision := internalpolicyhistoryFields[12].Descriptor()
	// internalpolicyhistory.DefaultRevision holds the default value on creation for the revision field.
	internalpolicyhistory.DefaultRevision = internalpolicyhistoryDescRevision.Default.(string)
	// internalpolicyhistoryDescApprovalRequired is the schema descriptor for approval_required field.
	internalpolicyhistoryDescApprovalRequired := internalpolicyhistoryFields[18].Descriptor()
	// internalpolicyhistory.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	internalpolicyhistory.DefaultApprovalRequired = internalpolicyhistoryDescApprovalRequired.Default.(bool)
	// internalpolicyhistoryDescReviewDue is the schema descriptor for review_due field.
	internalpolicyhistoryDescReviewDue := internalpolicyhistoryFields[19].Descriptor()
	// internalpolicyhistory.DefaultReviewDue holds the default value on creation for the review_due field.
	internalpolicyhistory.DefaultReviewDue = internalpolicyhistoryDescReviewDue.Default.(time.Time)
	// internalpolicyhistoryDescTagSuggestions is the schema descriptor for tag_suggestions field.
	internalpolicyhistoryDescTagSuggestions := internalpolicyhistoryFields[24].Descriptor()
	// internalpolicyhistory.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	internalpolicyhistory.DefaultTagSuggestions = internalpolicyhistoryDescTagSuggestions.Default.([]string)
	// internalpolicyhistoryDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	internalpolicyhistoryDescDismissedTagSuggestions := internalpolicyhistoryFields[25].Descriptor()
	// internalpolicyhistory.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	internalpolicyhistory.DefaultDismissedTagSuggestions = internalpolicyhistoryDescDismissedTagSuggestions.Default.([]string)
	// internalpolicyhistoryDescControlSuggestions is the schema descriptor for control_suggestions field.
	internalpolicyhistoryDescControlSuggestions := internalpolicyhistoryFields[26].Descriptor()
	// internalpolicyhistory.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	internalpolicyhistory.DefaultControlSuggestions = internalpolicyhistoryDescControlSuggestions.Default.([]string)
	// internalpolicyhistoryDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	internalpolicyhistoryDescDismissedControlSuggestions := internalpolicyhistoryFields[27].Descriptor()
	// internalpolicyhistory.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	internalpolicyhistory.DefaultDismissedControlSuggestions = internalpolicyhistoryDescDismissedControlSuggestions.Default.([]string)
	// internalpolicyhistoryDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	internalpolicyhistoryDescImprovementSuggestions := internalpolicyhistoryFields[28].Descriptor()
	// internalpolicyhistory.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	internalpolicyhistory.DefaultImprovementSuggestions = internalpolicyhistoryDescImprovementSuggestions.Default.([]string)
	// internalpolicyhistoryDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	internalpolicyhistoryDescDismissedImprovementSuggestions := internalpolicyhistoryFields[29].Descriptor()
	// internalpolicyhistory.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	internalpolicyhistory.DefaultDismissedImprovementSuggestions = internalpolicyhistoryDescDismissedImprovementSuggestions.Default.([]string)
	// internalpolicyhistoryDescID is the schema descriptor for id field.
	internalpolicyhistoryDescID := internalpolicyhistoryFields[9].Descriptor()
	// internalpolicyhistory.DefaultID holds the default value on creation for the id field.
	internalpolicyhistory.DefaultID = internalpolicyhistoryDescID.Default.(func() string)
	inviteMixin := schema.Invite{}.Mixin()
	invite.Policy = privacy.NewPolicies(schema.Invite{})
	invite.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := invite.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	inviteMixinHooks0 := inviteMixin[0].Hooks()
	inviteMixinHooks1 := inviteMixin[1].Hooks()
	inviteMixinHooks2 := inviteMixin[2].Hooks()
	inviteMixinHooks5 := inviteMixin[5].Hooks()
	inviteHooks := schema.Invite{}.Hooks()

	invite.Hooks[1] = inviteMixinHooks0[0]

	invite.Hooks[2] = inviteMixinHooks1[0]

	invite.Hooks[3] = inviteMixinHooks2[0]

	invite.Hooks[4] = inviteMixinHooks5[0]

	invite.Hooks[5] = inviteHooks[0]

	invite.Hooks[6] = inviteHooks[1]

	invite.Hooks[7] = inviteHooks[2]
	inviteMixinInters1 := inviteMixin[1].Interceptors()
	inviteMixinInters2 := inviteMixin[2].Interceptors()
	inviteMixinInters5 := inviteMixin[5].Interceptors()
	invite.Interceptors[0] = inviteMixinInters1[0]
	invite.Interceptors[1] = inviteMixinInters2[0]
	invite.Interceptors[2] = inviteMixinInters5[0]
	inviteMixinFields0 := inviteMixin[0].Fields()
	_ = inviteMixinFields0
	inviteMixinFields3 := inviteMixin[3].Fields()
	_ = inviteMixinFields3
	inviteMixinFields5 := inviteMixin[5].Fields()
	_ = inviteMixinFields5
	inviteFields := schema.Invite{}.Fields()
	_ = inviteFields
	// inviteDescCreatedAt is the schema descriptor for created_at field.
	inviteDescCreatedAt := inviteMixinFields0[0].Descriptor()
	// invite.DefaultCreatedAt holds the default value on creation for the created_at field.
	invite.DefaultCreatedAt = inviteDescCreatedAt.Default.(func() time.Time)
	// inviteDescUpdatedAt is the schema descriptor for updated_at field.
	inviteDescUpdatedAt := inviteMixinFields0[1].Descriptor()
	// invite.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	invite.DefaultUpdatedAt = inviteDescUpdatedAt.Default.(func() time.Time)
	// invite.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	invite.UpdateDefaultUpdatedAt = inviteDescUpdatedAt.UpdateDefault.(func() time.Time)
	// inviteDescOwnerID is the schema descriptor for owner_id field.
	inviteDescOwnerID := inviteMixinFields5[0].Descriptor()
	// invite.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	invite.OwnerIDValidator = inviteDescOwnerID.Validators[0].(func(string) error)
	// inviteDescToken is the schema descriptor for token field.
	inviteDescToken := inviteFields[0].Descriptor()
	// invite.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	invite.TokenValidator = inviteDescToken.Validators[0].(func(string) error)
	// inviteDescExpires is the schema descriptor for expires field.
	inviteDescExpires := inviteFields[1].Descriptor()
	// invite.DefaultExpires holds the default value on creation for the expires field.
	invite.DefaultExpires = inviteDescExpires.Default.(func() time.Time)
	// inviteDescRecipient is the schema descriptor for recipient field.
	inviteDescRecipient := inviteFields[2].Descriptor()
	// invite.RecipientValidator is a validator for the "recipient" field. It is called by the builders before save.
	invite.RecipientValidator = func() func(string) error {
		validators := inviteDescRecipient.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(recipient string) error {
			for _, fn := range fns {
				if err := fn(recipient); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// inviteDescSendAttempts is the schema descriptor for send_attempts field.
	inviteDescSendAttempts := inviteFields[5].Descriptor()
	// invite.DefaultSendAttempts holds the default value on creation for the send_attempts field.
	invite.DefaultSendAttempts = inviteDescSendAttempts.Default.(int)
	// inviteDescRequestorID is the schema descriptor for requestor_id field.
	inviteDescRequestorID := inviteFields[6].Descriptor()
	// invite.RequestorIDValidator is a validator for the "requestor_id" field. It is called by the builders before save.
	invite.RequestorIDValidator = inviteDescRequestorID.Validators[0].(func(string) error)
	// inviteDescSecret is the schema descriptor for secret field.
	inviteDescSecret := inviteFields[7].Descriptor()
	// invite.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	invite.SecretValidator = inviteDescSecret.Validators[0].(func([]byte) error)
	// inviteDescID is the schema descriptor for id field.
	inviteDescID := inviteMixinFields3[0].Descriptor()
	// invite.DefaultID holds the default value on creation for the id field.
	invite.DefaultID = inviteDescID.Default.(func() string)
	jobresultMixin := schema.JobResult{}.Mixin()
	jobresult.Policy = privacy.NewPolicies(schema.JobResult{})
	jobresult.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobresult.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobresultMixinHooks0 := jobresultMixin[0].Hooks()
	jobresultMixinHooks1 := jobresultMixin[1].Hooks()
	jobresultMixinHooks2 := jobresultMixin[2].Hooks()
	jobresultMixinHooks5 := jobresultMixin[5].Hooks()

	jobresult.Hooks[1] = jobresultMixinHooks0[0]

	jobresult.Hooks[2] = jobresultMixinHooks1[0]

	jobresult.Hooks[3] = jobresultMixinHooks2[0]

	jobresult.Hooks[4] = jobresultMixinHooks5[0]
	jobresultMixinInters1 := jobresultMixin[1].Interceptors()
	jobresultMixinInters2 := jobresultMixin[2].Interceptors()
	jobresultMixinInters5 := jobresultMixin[5].Interceptors()
	jobresult.Interceptors[0] = jobresultMixinInters1[0]
	jobresult.Interceptors[1] = jobresultMixinInters2[0]
	jobresult.Interceptors[2] = jobresultMixinInters5[0]
	jobresultMixinFields0 := jobresultMixin[0].Fields()
	_ = jobresultMixinFields0
	jobresultMixinFields3 := jobresultMixin[3].Fields()
	_ = jobresultMixinFields3
	jobresultMixinFields5 := jobresultMixin[5].Fields()
	_ = jobresultMixinFields5
	jobresultFields := schema.JobResult{}.Fields()
	_ = jobresultFields
	// jobresultDescCreatedAt is the schema descriptor for created_at field.
	jobresultDescCreatedAt := jobresultMixinFields0[0].Descriptor()
	// jobresult.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobresult.DefaultCreatedAt = jobresultDescCreatedAt.Default.(func() time.Time)
	// jobresultDescUpdatedAt is the schema descriptor for updated_at field.
	jobresultDescUpdatedAt := jobresultMixinFields0[1].Descriptor()
	// jobresult.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobresult.DefaultUpdatedAt = jobresultDescUpdatedAt.Default.(func() time.Time)
	// jobresult.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobresult.UpdateDefaultUpdatedAt = jobresultDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobresultDescOwnerID is the schema descriptor for owner_id field.
	jobresultDescOwnerID := jobresultMixinFields5[0].Descriptor()
	// jobresult.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	jobresult.OwnerIDValidator = jobresultDescOwnerID.Validators[0].(func(string) error)
	// jobresultDescExitCode is the schema descriptor for exit_code field.
	jobresultDescExitCode := jobresultFields[2].Descriptor()
	// jobresult.ExitCodeValidator is a validator for the "exit_code" field. It is called by the builders before save.
	jobresult.ExitCodeValidator = jobresultDescExitCode.Validators[0].(func(int) error)
	// jobresultDescFinishedAt is the schema descriptor for finished_at field.
	jobresultDescFinishedAt := jobresultFields[3].Descriptor()
	// jobresult.DefaultFinishedAt holds the default value on creation for the finished_at field.
	jobresult.DefaultFinishedAt = jobresultDescFinishedAt.Default.(func() time.Time)
	// jobresultDescStartedAt is the schema descriptor for started_at field.
	jobresultDescStartedAt := jobresultFields[4].Descriptor()
	// jobresult.DefaultStartedAt holds the default value on creation for the started_at field.
	jobresult.DefaultStartedAt = jobresultDescStartedAt.Default.(func() time.Time)
	// jobresultDescID is the schema descriptor for id field.
	jobresultDescID := jobresultMixinFields3[0].Descriptor()
	// jobresult.DefaultID holds the default value on creation for the id field.
	jobresult.DefaultID = jobresultDescID.Default.(func() string)
	jobrunnerMixin := schema.JobRunner{}.Mixin()
	jobrunner.Policy = privacy.NewPolicies(schema.JobRunner{})
	jobrunner.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobrunner.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobrunnerMixinHooks0 := jobrunnerMixin[0].Hooks()
	jobrunnerMixinHooks1 := jobrunnerMixin[1].Hooks()
	jobrunnerMixinHooks2 := jobrunnerMixin[2].Hooks()
	jobrunnerMixinHooks3 := jobrunnerMixin[3].Hooks()
	jobrunnerMixinHooks6 := jobrunnerMixin[6].Hooks()
	jobrunnerMixinHooks7 := jobrunnerMixin[7].Hooks()
	jobrunnerHooks := schema.JobRunner{}.Hooks()

	jobrunner.Hooks[1] = jobrunnerMixinHooks0[0]

	jobrunner.Hooks[2] = jobrunnerMixinHooks1[0]

	jobrunner.Hooks[3] = jobrunnerMixinHooks2[0]

	jobrunner.Hooks[4] = jobrunnerMixinHooks3[0]

	jobrunner.Hooks[5] = jobrunnerMixinHooks6[0]

	jobrunner.Hooks[6] = jobrunnerMixinHooks7[0]

	jobrunner.Hooks[7] = jobrunnerHooks[0]

	jobrunner.Hooks[8] = jobrunnerHooks[1]
	jobrunnerMixinInters1 := jobrunnerMixin[1].Interceptors()
	jobrunnerMixinInters2 := jobrunnerMixin[2].Interceptors()
	jobrunnerMixinInters6 := jobrunnerMixin[6].Interceptors()
	jobrunnerInters := schema.JobRunner{}.Interceptors()
	jobrunner.Interceptors[0] = jobrunnerMixinInters1[0]
	jobrunner.Interceptors[1] = jobrunnerMixinInters2[0]
	jobrunner.Interceptors[2] = jobrunnerMixinInters6[0]
	jobrunner.Interceptors[3] = jobrunnerInters[0]
	jobrunnerMixinFields0 := jobrunnerMixin[0].Fields()
	_ = jobrunnerMixinFields0
	jobrunnerMixinFields3 := jobrunnerMixin[3].Fields()
	_ = jobrunnerMixinFields3
	jobrunnerMixinFields4 := jobrunnerMixin[4].Fields()
	_ = jobrunnerMixinFields4
	jobrunnerMixinFields7 := jobrunnerMixin[7].Fields()
	_ = jobrunnerMixinFields7
	jobrunnerFields := schema.JobRunner{}.Fields()
	_ = jobrunnerFields
	// jobrunnerDescCreatedAt is the schema descriptor for created_at field.
	jobrunnerDescCreatedAt := jobrunnerMixinFields0[0].Descriptor()
	// jobrunner.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobrunner.DefaultCreatedAt = jobrunnerDescCreatedAt.Default.(func() time.Time)
	// jobrunnerDescUpdatedAt is the schema descriptor for updated_at field.
	jobrunnerDescUpdatedAt := jobrunnerMixinFields0[1].Descriptor()
	// jobrunner.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobrunner.DefaultUpdatedAt = jobrunnerDescUpdatedAt.Default.(func() time.Time)
	// jobrunner.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobrunner.UpdateDefaultUpdatedAt = jobrunnerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobrunnerDescDisplayID is the schema descriptor for display_id field.
	jobrunnerDescDisplayID := jobrunnerMixinFields3[1].Descriptor()
	// jobrunner.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	jobrunner.DisplayIDValidator = jobrunnerDescDisplayID.Validators[0].(func(string) error)
	// jobrunnerDescTags is the schema descriptor for tags field.
	jobrunnerDescTags := jobrunnerMixinFields4[0].Descriptor()
	// jobrunner.DefaultTags holds the default value on creation for the tags field.
	jobrunner.DefaultTags = jobrunnerDescTags.Default.([]string)
	// jobrunnerDescSystemOwned is the schema descriptor for system_owned field.
	jobrunnerDescSystemOwned := jobrunnerMixinFields7[0].Descriptor()
	// jobrunner.DefaultSystemOwned holds the default value on creation for the system_owned field.
	jobrunner.DefaultSystemOwned = jobrunnerDescSystemOwned.Default.(bool)
	// jobrunnerDescID is the schema descriptor for id field.
	jobrunnerDescID := jobrunnerMixinFields3[0].Descriptor()
	// jobrunner.DefaultID holds the default value on creation for the id field.
	jobrunner.DefaultID = jobrunnerDescID.Default.(func() string)
	jobrunnerregistrationtokenMixin := schema.JobRunnerRegistrationToken{}.Mixin()
	jobrunnerregistrationtoken.Policy = privacy.NewPolicies(schema.JobRunnerRegistrationToken{})
	jobrunnerregistrationtoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobrunnerregistrationtoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobrunnerregistrationtokenMixinHooks0 := jobrunnerregistrationtokenMixin[0].Hooks()
	jobrunnerregistrationtokenMixinHooks1 := jobrunnerregistrationtokenMixin[1].Hooks()
	jobrunnerregistrationtokenMixinHooks2 := jobrunnerregistrationtokenMixin[2].Hooks()
	jobrunnerregistrationtokenMixinHooks6 := jobrunnerregistrationtokenMixin[6].Hooks()
	jobrunnerregistrationtokenHooks := schema.JobRunnerRegistrationToken{}.Hooks()

	jobrunnerregistrationtoken.Hooks[1] = jobrunnerregistrationtokenMixinHooks0[0]

	jobrunnerregistrationtoken.Hooks[2] = jobrunnerregistrationtokenMixinHooks1[0]

	jobrunnerregistrationtoken.Hooks[3] = jobrunnerregistrationtokenMixinHooks2[0]

	jobrunnerregistrationtoken.Hooks[4] = jobrunnerregistrationtokenMixinHooks6[0]

	jobrunnerregistrationtoken.Hooks[5] = jobrunnerregistrationtokenHooks[0]
	jobrunnerregistrationtokenMixinInters1 := jobrunnerregistrationtokenMixin[1].Interceptors()
	jobrunnerregistrationtokenMixinInters2 := jobrunnerregistrationtokenMixin[2].Interceptors()
	jobrunnerregistrationtokenMixinInters6 := jobrunnerregistrationtokenMixin[6].Interceptors()
	jobrunnerregistrationtokenInters := schema.JobRunnerRegistrationToken{}.Interceptors()
	jobrunnerregistrationtoken.Interceptors[0] = jobrunnerregistrationtokenMixinInters1[0]
	jobrunnerregistrationtoken.Interceptors[1] = jobrunnerregistrationtokenMixinInters2[0]
	jobrunnerregistrationtoken.Interceptors[2] = jobrunnerregistrationtokenMixinInters6[0]
	jobrunnerregistrationtoken.Interceptors[3] = jobrunnerregistrationtokenInters[0]
	jobrunnerregistrationtokenMixinFields0 := jobrunnerregistrationtokenMixin[0].Fields()
	_ = jobrunnerregistrationtokenMixinFields0
	jobrunnerregistrationtokenMixinFields3 := jobrunnerregistrationtokenMixin[3].Fields()
	_ = jobrunnerregistrationtokenMixinFields3
	jobrunnerregistrationtokenMixinFields4 := jobrunnerregistrationtokenMixin[4].Fields()
	_ = jobrunnerregistrationtokenMixinFields4
	jobrunnerregistrationtokenMixinFields6 := jobrunnerregistrationtokenMixin[6].Fields()
	_ = jobrunnerregistrationtokenMixinFields6
	jobrunnerregistrationtokenFields := schema.JobRunnerRegistrationToken{}.Fields()
	_ = jobrunnerregistrationtokenFields
	// jobrunnerregistrationtokenDescCreatedAt is the schema descriptor for created_at field.
	jobrunnerregistrationtokenDescCreatedAt := jobrunnerregistrationtokenMixinFields0[0].Descriptor()
	// jobrunnerregistrationtoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobrunnerregistrationtoken.DefaultCreatedAt = jobrunnerregistrationtokenDescCreatedAt.Default.(func() time.Time)
	// jobrunnerregistrationtokenDescUpdatedAt is the schema descriptor for updated_at field.
	jobrunnerregistrationtokenDescUpdatedAt := jobrunnerregistrationtokenMixinFields0[1].Descriptor()
	// jobrunnerregistrationtoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobrunnerregistrationtoken.DefaultUpdatedAt = jobrunnerregistrationtokenDescUpdatedAt.Default.(func() time.Time)
	// jobrunnerregistrationtoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobrunnerregistrationtoken.UpdateDefaultUpdatedAt = jobrunnerregistrationtokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobrunnerregistrationtokenDescTags is the schema descriptor for tags field.
	jobrunnerregistrationtokenDescTags := jobrunnerregistrationtokenMixinFields4[0].Descriptor()
	// jobrunnerregistrationtoken.DefaultTags holds the default value on creation for the tags field.
	jobrunnerregistrationtoken.DefaultTags = jobrunnerregistrationtokenDescTags.Default.([]string)
	// jobrunnerregistrationtokenDescOwnerID is the schema descriptor for owner_id field.
	jobrunnerregistrationtokenDescOwnerID := jobrunnerregistrationtokenMixinFields6[0].Descriptor()
	// jobrunnerregistrationtoken.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	jobrunnerregistrationtoken.OwnerIDValidator = jobrunnerregistrationtokenDescOwnerID.Validators[0].(func(string) error)
	// jobrunnerregistrationtokenDescToken is the schema descriptor for token field.
	jobrunnerregistrationtokenDescToken := jobrunnerregistrationtokenFields[0].Descriptor()
	// jobrunnerregistrationtoken.DefaultToken holds the default value on creation for the token field.
	jobrunnerregistrationtoken.DefaultToken = jobrunnerregistrationtokenDescToken.Default.(func() string)
	// jobrunnerregistrationtokenDescExpiresAt is the schema descriptor for expires_at field.
	jobrunnerregistrationtokenDescExpiresAt := jobrunnerregistrationtokenFields[1].Descriptor()
	// jobrunnerregistrationtoken.DefaultExpiresAt holds the default value on creation for the expires_at field.
	jobrunnerregistrationtoken.DefaultExpiresAt = jobrunnerregistrationtokenDescExpiresAt.Default.(time.Time)
	// jobrunnerregistrationtokenDescID is the schema descriptor for id field.
	jobrunnerregistrationtokenDescID := jobrunnerregistrationtokenMixinFields3[0].Descriptor()
	// jobrunnerregistrationtoken.DefaultID holds the default value on creation for the id field.
	jobrunnerregistrationtoken.DefaultID = jobrunnerregistrationtokenDescID.Default.(func() string)
	jobrunnertokenMixin := schema.JobRunnerToken{}.Mixin()
	jobrunnertoken.Policy = privacy.NewPolicies(schema.JobRunnerToken{})
	jobrunnertoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobrunnertoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobrunnertokenMixinHooks0 := jobrunnertokenMixin[0].Hooks()
	jobrunnertokenMixinHooks1 := jobrunnertokenMixin[1].Hooks()
	jobrunnertokenMixinHooks2 := jobrunnertokenMixin[2].Hooks()
	jobrunnertokenMixinHooks6 := jobrunnertokenMixin[6].Hooks()

	jobrunnertoken.Hooks[1] = jobrunnertokenMixinHooks0[0]

	jobrunnertoken.Hooks[2] = jobrunnertokenMixinHooks1[0]

	jobrunnertoken.Hooks[3] = jobrunnertokenMixinHooks2[0]

	jobrunnertoken.Hooks[4] = jobrunnertokenMixinHooks6[0]
	jobrunnertokenMixinInters1 := jobrunnertokenMixin[1].Interceptors()
	jobrunnertokenMixinInters2 := jobrunnertokenMixin[2].Interceptors()
	jobrunnertokenMixinInters6 := jobrunnertokenMixin[6].Interceptors()
	jobrunnertoken.Interceptors[0] = jobrunnertokenMixinInters1[0]
	jobrunnertoken.Interceptors[1] = jobrunnertokenMixinInters2[0]
	jobrunnertoken.Interceptors[2] = jobrunnertokenMixinInters6[0]
	jobrunnertokenMixinFields0 := jobrunnertokenMixin[0].Fields()
	_ = jobrunnertokenMixinFields0
	jobrunnertokenMixinFields3 := jobrunnertokenMixin[3].Fields()
	_ = jobrunnertokenMixinFields3
	jobrunnertokenMixinFields4 := jobrunnertokenMixin[4].Fields()
	_ = jobrunnertokenMixinFields4
	jobrunnertokenMixinFields6 := jobrunnertokenMixin[6].Fields()
	_ = jobrunnertokenMixinFields6
	jobrunnertokenFields := schema.JobRunnerToken{}.Fields()
	_ = jobrunnertokenFields
	// jobrunnertokenDescCreatedAt is the schema descriptor for created_at field.
	jobrunnertokenDescCreatedAt := jobrunnertokenMixinFields0[0].Descriptor()
	// jobrunnertoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobrunnertoken.DefaultCreatedAt = jobrunnertokenDescCreatedAt.Default.(func() time.Time)
	// jobrunnertokenDescUpdatedAt is the schema descriptor for updated_at field.
	jobrunnertokenDescUpdatedAt := jobrunnertokenMixinFields0[1].Descriptor()
	// jobrunnertoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobrunnertoken.DefaultUpdatedAt = jobrunnertokenDescUpdatedAt.Default.(func() time.Time)
	// jobrunnertoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobrunnertoken.UpdateDefaultUpdatedAt = jobrunnertokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobrunnertokenDescTags is the schema descriptor for tags field.
	jobrunnertokenDescTags := jobrunnertokenMixinFields4[0].Descriptor()
	// jobrunnertoken.DefaultTags holds the default value on creation for the tags field.
	jobrunnertoken.DefaultTags = jobrunnertokenDescTags.Default.([]string)
	// jobrunnertokenDescOwnerID is the schema descriptor for owner_id field.
	jobrunnertokenDescOwnerID := jobrunnertokenMixinFields6[0].Descriptor()
	// jobrunnertoken.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	jobrunnertoken.OwnerIDValidator = jobrunnertokenDescOwnerID.Validators[0].(func(string) error)
	// jobrunnertokenDescToken is the schema descriptor for token field.
	jobrunnertokenDescToken := jobrunnertokenFields[0].Descriptor()
	// jobrunnertoken.DefaultToken holds the default value on creation for the token field.
	jobrunnertoken.DefaultToken = jobrunnertokenDescToken.Default.(func() string)
	// jobrunnertokenDescIsActive is the schema descriptor for is_active field.
	jobrunnertokenDescIsActive := jobrunnertokenFields[3].Descriptor()
	// jobrunnertoken.DefaultIsActive holds the default value on creation for the is_active field.
	jobrunnertoken.DefaultIsActive = jobrunnertokenDescIsActive.Default.(bool)
	// jobrunnertokenDescID is the schema descriptor for id field.
	jobrunnertokenDescID := jobrunnertokenMixinFields3[0].Descriptor()
	// jobrunnertoken.DefaultID holds the default value on creation for the id field.
	jobrunnertoken.DefaultID = jobrunnertokenDescID.Default.(func() string)
	jobtemplateMixin := schema.JobTemplate{}.Mixin()
	jobtemplate.Policy = privacy.NewPolicies(schema.JobTemplate{})
	jobtemplate.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobtemplate.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobtemplateMixinHooks0 := jobtemplateMixin[0].Hooks()
	jobtemplateMixinHooks1 := jobtemplateMixin[1].Hooks()
	jobtemplateMixinHooks2 := jobtemplateMixin[2].Hooks()
	jobtemplateMixinHooks3 := jobtemplateMixin[3].Hooks()
	jobtemplateMixinHooks6 := jobtemplateMixin[6].Hooks()
	jobtemplateMixinHooks7 := jobtemplateMixin[7].Hooks()
	jobtemplateHooks := schema.JobTemplate{}.Hooks()

	jobtemplate.Hooks[1] = jobtemplateMixinHooks0[0]

	jobtemplate.Hooks[2] = jobtemplateMixinHooks1[0]

	jobtemplate.Hooks[3] = jobtemplateMixinHooks2[0]

	jobtemplate.Hooks[4] = jobtemplateMixinHooks3[0]

	jobtemplate.Hooks[5] = jobtemplateMixinHooks6[0]

	jobtemplate.Hooks[6] = jobtemplateMixinHooks7[0]

	jobtemplate.Hooks[7] = jobtemplateHooks[0]

	jobtemplate.Hooks[8] = jobtemplateHooks[1]
	jobtemplateMixinInters1 := jobtemplateMixin[1].Interceptors()
	jobtemplateMixinInters2 := jobtemplateMixin[2].Interceptors()
	jobtemplateMixinInters6 := jobtemplateMixin[6].Interceptors()
	jobtemplate.Interceptors[0] = jobtemplateMixinInters1[0]
	jobtemplate.Interceptors[1] = jobtemplateMixinInters2[0]
	jobtemplate.Interceptors[2] = jobtemplateMixinInters6[0]
	jobtemplateMixinFields0 := jobtemplateMixin[0].Fields()
	_ = jobtemplateMixinFields0
	jobtemplateMixinFields3 := jobtemplateMixin[3].Fields()
	_ = jobtemplateMixinFields3
	jobtemplateMixinFields4 := jobtemplateMixin[4].Fields()
	_ = jobtemplateMixinFields4
	jobtemplateMixinFields7 := jobtemplateMixin[7].Fields()
	_ = jobtemplateMixinFields7
	jobtemplateFields := schema.JobTemplate{}.Fields()
	_ = jobtemplateFields
	// jobtemplateDescCreatedAt is the schema descriptor for created_at field.
	jobtemplateDescCreatedAt := jobtemplateMixinFields0[0].Descriptor()
	// jobtemplate.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobtemplate.DefaultCreatedAt = jobtemplateDescCreatedAt.Default.(func() time.Time)
	// jobtemplateDescUpdatedAt is the schema descriptor for updated_at field.
	jobtemplateDescUpdatedAt := jobtemplateMixinFields0[1].Descriptor()
	// jobtemplate.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobtemplate.DefaultUpdatedAt = jobtemplateDescUpdatedAt.Default.(func() time.Time)
	// jobtemplate.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobtemplate.UpdateDefaultUpdatedAt = jobtemplateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobtemplateDescDisplayID is the schema descriptor for display_id field.
	jobtemplateDescDisplayID := jobtemplateMixinFields3[1].Descriptor()
	// jobtemplate.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	jobtemplate.DisplayIDValidator = jobtemplateDescDisplayID.Validators[0].(func(string) error)
	// jobtemplateDescTags is the schema descriptor for tags field.
	jobtemplateDescTags := jobtemplateMixinFields4[0].Descriptor()
	// jobtemplate.DefaultTags holds the default value on creation for the tags field.
	jobtemplate.DefaultTags = jobtemplateDescTags.Default.([]string)
	// jobtemplateDescSystemOwned is the schema descriptor for system_owned field.
	jobtemplateDescSystemOwned := jobtemplateMixinFields7[0].Descriptor()
	// jobtemplate.DefaultSystemOwned holds the default value on creation for the system_owned field.
	jobtemplate.DefaultSystemOwned = jobtemplateDescSystemOwned.Default.(bool)
	// jobtemplateDescTitle is the schema descriptor for title field.
	jobtemplateDescTitle := jobtemplateFields[0].Descriptor()
	// jobtemplate.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	jobtemplate.TitleValidator = jobtemplateDescTitle.Validators[0].(func(string) error)
	// jobtemplateDescCron is the schema descriptor for cron field.
	jobtemplateDescCron := jobtemplateFields[6].Descriptor()
	// jobtemplate.CronValidator is a validator for the "cron" field. It is called by the builders before save.
	jobtemplate.CronValidator = jobtemplateDescCron.Validators[0].(func(string) error)
	// jobtemplateDescID is the schema descriptor for id field.
	jobtemplateDescID := jobtemplateMixinFields3[0].Descriptor()
	// jobtemplate.DefaultID holds the default value on creation for the id field.
	jobtemplate.DefaultID = jobtemplateDescID.Default.(func() string)
	jobtemplatehistory.Policy = privacy.NewPolicies(schema.JobTemplateHistory{})
	jobtemplatehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := jobtemplatehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	jobtemplatehistoryInters := schema.JobTemplateHistory{}.Interceptors()
	jobtemplatehistory.Interceptors[0] = jobtemplatehistoryInters[0]
	jobtemplatehistoryFields := schema.JobTemplateHistory{}.Fields()
	_ = jobtemplatehistoryFields
	// jobtemplatehistoryDescHistoryTime is the schema descriptor for history_time field.
	jobtemplatehistoryDescHistoryTime := jobtemplatehistoryFields[0].Descriptor()
	// jobtemplatehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	jobtemplatehistory.DefaultHistoryTime = jobtemplatehistoryDescHistoryTime.Default.(func() time.Time)
	// jobtemplatehistoryDescCreatedAt is the schema descriptor for created_at field.
	jobtemplatehistoryDescCreatedAt := jobtemplatehistoryFields[3].Descriptor()
	// jobtemplatehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	jobtemplatehistory.DefaultCreatedAt = jobtemplatehistoryDescCreatedAt.Default.(func() time.Time)
	// jobtemplatehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	jobtemplatehistoryDescUpdatedAt := jobtemplatehistoryFields[4].Descriptor()
	// jobtemplatehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	jobtemplatehistory.DefaultUpdatedAt = jobtemplatehistoryDescUpdatedAt.Default.(func() time.Time)
	// jobtemplatehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	jobtemplatehistory.UpdateDefaultUpdatedAt = jobtemplatehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// jobtemplatehistoryDescTags is the schema descriptor for tags field.
	jobtemplatehistoryDescTags := jobtemplatehistoryFields[11].Descriptor()
	// jobtemplatehistory.DefaultTags holds the default value on creation for the tags field.
	jobtemplatehistory.DefaultTags = jobtemplatehistoryDescTags.Default.([]string)
	// jobtemplatehistoryDescSystemOwned is the schema descriptor for system_owned field.
	jobtemplatehistoryDescSystemOwned := jobtemplatehistoryFields[13].Descriptor()
	// jobtemplatehistory.DefaultSystemOwned holds the default value on creation for the system_owned field.
	jobtemplatehistory.DefaultSystemOwned = jobtemplatehistoryDescSystemOwned.Default.(bool)
	// jobtemplatehistoryDescID is the schema descriptor for id field.
	jobtemplatehistoryDescID := jobtemplatehistoryFields[9].Descriptor()
	// jobtemplatehistory.DefaultID holds the default value on creation for the id field.
	jobtemplatehistory.DefaultID = jobtemplatehistoryDescID.Default.(func() string)
	mappabledomainMixin := schema.MappableDomain{}.Mixin()
	mappabledomain.Policy = privacy.NewPolicies(schema.MappableDomain{})
	mappabledomain.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := mappabledomain.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	mappabledomainMixinHooks0 := mappabledomainMixin[0].Hooks()
	mappabledomainMixinHooks1 := mappabledomainMixin[1].Hooks()
	mappabledomainMixinHooks2 := mappabledomainMixin[2].Hooks()

	mappabledomain.Hooks[1] = mappabledomainMixinHooks0[0]

	mappabledomain.Hooks[2] = mappabledomainMixinHooks1[0]

	mappabledomain.Hooks[3] = mappabledomainMixinHooks2[0]
	mappabledomainMixinInters1 := mappabledomainMixin[1].Interceptors()
	mappabledomainMixinInters2 := mappabledomainMixin[2].Interceptors()
	mappabledomain.Interceptors[0] = mappabledomainMixinInters1[0]
	mappabledomain.Interceptors[1] = mappabledomainMixinInters2[0]
	mappabledomainMixinFields0 := mappabledomainMixin[0].Fields()
	_ = mappabledomainMixinFields0
	mappabledomainMixinFields3 := mappabledomainMixin[3].Fields()
	_ = mappabledomainMixinFields3
	mappabledomainMixinFields4 := mappabledomainMixin[4].Fields()
	_ = mappabledomainMixinFields4
	mappabledomainFields := schema.MappableDomain{}.Fields()
	_ = mappabledomainFields
	// mappabledomainDescCreatedAt is the schema descriptor for created_at field.
	mappabledomainDescCreatedAt := mappabledomainMixinFields0[0].Descriptor()
	// mappabledomain.DefaultCreatedAt holds the default value on creation for the created_at field.
	mappabledomain.DefaultCreatedAt = mappabledomainDescCreatedAt.Default.(func() time.Time)
	// mappabledomainDescUpdatedAt is the schema descriptor for updated_at field.
	mappabledomainDescUpdatedAt := mappabledomainMixinFields0[1].Descriptor()
	// mappabledomain.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	mappabledomain.DefaultUpdatedAt = mappabledomainDescUpdatedAt.Default.(func() time.Time)
	// mappabledomain.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	mappabledomain.UpdateDefaultUpdatedAt = mappabledomainDescUpdatedAt.UpdateDefault.(func() time.Time)
	// mappabledomainDescTags is the schema descriptor for tags field.
	mappabledomainDescTags := mappabledomainMixinFields4[0].Descriptor()
	// mappabledomain.DefaultTags holds the default value on creation for the tags field.
	mappabledomain.DefaultTags = mappabledomainDescTags.Default.([]string)
	// mappabledomainDescName is the schema descriptor for name field.
	mappabledomainDescName := mappabledomainFields[0].Descriptor()
	// mappabledomain.NameValidator is a validator for the "name" field. It is called by the builders before save.
	mappabledomain.NameValidator = func() func(string) error {
		validators := mappabledomainDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// mappabledomainDescZoneID is the schema descriptor for zone_id field.
	mappabledomainDescZoneID := mappabledomainFields[1].Descriptor()
	// mappabledomain.ZoneIDValidator is a validator for the "zone_id" field. It is called by the builders before save.
	mappabledomain.ZoneIDValidator = mappabledomainDescZoneID.Validators[0].(func(string) error)
	// mappabledomainDescID is the schema descriptor for id field.
	mappabledomainDescID := mappabledomainMixinFields3[0].Descriptor()
	// mappabledomain.DefaultID holds the default value on creation for the id field.
	mappabledomain.DefaultID = mappabledomainDescID.Default.(func() string)
	mappabledomainhistory.Policy = privacy.NewPolicies(schema.MappableDomainHistory{})
	mappabledomainhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := mappabledomainhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	mappabledomainhistoryInters := schema.MappableDomainHistory{}.Interceptors()
	mappabledomainhistory.Interceptors[0] = mappabledomainhistoryInters[0]
	mappabledomainhistoryFields := schema.MappableDomainHistory{}.Fields()
	_ = mappabledomainhistoryFields
	// mappabledomainhistoryDescHistoryTime is the schema descriptor for history_time field.
	mappabledomainhistoryDescHistoryTime := mappabledomainhistoryFields[0].Descriptor()
	// mappabledomainhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	mappabledomainhistory.DefaultHistoryTime = mappabledomainhistoryDescHistoryTime.Default.(func() time.Time)
	// mappabledomainhistoryDescCreatedAt is the schema descriptor for created_at field.
	mappabledomainhistoryDescCreatedAt := mappabledomainhistoryFields[3].Descriptor()
	// mappabledomainhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	mappabledomainhistory.DefaultCreatedAt = mappabledomainhistoryDescCreatedAt.Default.(func() time.Time)
	// mappabledomainhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	mappabledomainhistoryDescUpdatedAt := mappabledomainhistoryFields[4].Descriptor()
	// mappabledomainhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	mappabledomainhistory.DefaultUpdatedAt = mappabledomainhistoryDescUpdatedAt.Default.(func() time.Time)
	// mappabledomainhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	mappabledomainhistory.UpdateDefaultUpdatedAt = mappabledomainhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// mappabledomainhistoryDescTags is the schema descriptor for tags field.
	mappabledomainhistoryDescTags := mappabledomainhistoryFields[10].Descriptor()
	// mappabledomainhistory.DefaultTags holds the default value on creation for the tags field.
	mappabledomainhistory.DefaultTags = mappabledomainhistoryDescTags.Default.([]string)
	// mappabledomainhistoryDescID is the schema descriptor for id field.
	mappabledomainhistoryDescID := mappabledomainhistoryFields[9].Descriptor()
	// mappabledomainhistory.DefaultID holds the default value on creation for the id field.
	mappabledomainhistory.DefaultID = mappabledomainhistoryDescID.Default.(func() string)
	mappedcontrolMixin := schema.MappedControl{}.Mixin()
	mappedcontrol.Policy = privacy.NewPolicies(schema.MappedControl{})
	mappedcontrol.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := mappedcontrol.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	mappedcontrolMixinHooks0 := mappedcontrolMixin[0].Hooks()
	mappedcontrolMixinHooks1 := mappedcontrolMixin[1].Hooks()
	mappedcontrolMixinHooks2 := mappedcontrolMixin[2].Hooks()
	mappedcontrolMixinHooks6 := mappedcontrolMixin[6].Hooks()
	mappedcontrolMixinHooks7 := mappedcontrolMixin[7].Hooks()
	mappedcontrolHooks := schema.MappedControl{}.Hooks()

	mappedcontrol.Hooks[1] = mappedcontrolMixinHooks0[0]

	mappedcontrol.Hooks[2] = mappedcontrolMixinHooks1[0]

	mappedcontrol.Hooks[3] = mappedcontrolMixinHooks2[0]

	mappedcontrol.Hooks[4] = mappedcontrolMixinHooks6[0]

	mappedcontrol.Hooks[5] = mappedcontrolMixinHooks7[0]

	mappedcontrol.Hooks[6] = mappedcontrolMixinHooks7[1]

	mappedcontrol.Hooks[7] = mappedcontrolHooks[0]
	mappedcontrolMixinInters1 := mappedcontrolMixin[1].Interceptors()
	mappedcontrolMixinInters2 := mappedcontrolMixin[2].Interceptors()
	mappedcontrolMixinInters6 := mappedcontrolMixin[6].Interceptors()
	mappedcontrolInters := schema.MappedControl{}.Interceptors()
	mappedcontrol.Interceptors[0] = mappedcontrolMixinInters1[0]
	mappedcontrol.Interceptors[1] = mappedcontrolMixinInters2[0]
	mappedcontrol.Interceptors[2] = mappedcontrolMixinInters6[0]
	mappedcontrol.Interceptors[3] = mappedcontrolInters[0]
	mappedcontrolMixinFields0 := mappedcontrolMixin[0].Fields()
	_ = mappedcontrolMixinFields0
	mappedcontrolMixinFields3 := mappedcontrolMixin[3].Fields()
	_ = mappedcontrolMixinFields3
	mappedcontrolMixinFields4 := mappedcontrolMixin[4].Fields()
	_ = mappedcontrolMixinFields4
	mappedcontrolMixinFields6 := mappedcontrolMixin[6].Fields()
	_ = mappedcontrolMixinFields6
	mappedcontrolFields := schema.MappedControl{}.Fields()
	_ = mappedcontrolFields
	// mappedcontrolDescCreatedAt is the schema descriptor for created_at field.
	mappedcontrolDescCreatedAt := mappedcontrolMixinFields0[0].Descriptor()
	// mappedcontrol.DefaultCreatedAt holds the default value on creation for the created_at field.
	mappedcontrol.DefaultCreatedAt = mappedcontrolDescCreatedAt.Default.(func() time.Time)
	// mappedcontrolDescUpdatedAt is the schema descriptor for updated_at field.
	mappedcontrolDescUpdatedAt := mappedcontrolMixinFields0[1].Descriptor()
	// mappedcontrol.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	mappedcontrol.DefaultUpdatedAt = mappedcontrolDescUpdatedAt.Default.(func() time.Time)
	// mappedcontrol.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	mappedcontrol.UpdateDefaultUpdatedAt = mappedcontrolDescUpdatedAt.UpdateDefault.(func() time.Time)
	// mappedcontrolDescTags is the schema descriptor for tags field.
	mappedcontrolDescTags := mappedcontrolMixinFields4[0].Descriptor()
	// mappedcontrol.DefaultTags holds the default value on creation for the tags field.
	mappedcontrol.DefaultTags = mappedcontrolDescTags.Default.([]string)
	// mappedcontrolDescOwnerID is the schema descriptor for owner_id field.
	mappedcontrolDescOwnerID := mappedcontrolMixinFields6[0].Descriptor()
	// mappedcontrol.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	mappedcontrol.OwnerIDValidator = mappedcontrolDescOwnerID.Validators[0].(func(string) error)
	// mappedcontrolDescConfidence is the schema descriptor for confidence field.
	mappedcontrolDescConfidence := mappedcontrolFields[2].Descriptor()
	// mappedcontrol.ConfidenceValidator is a validator for the "confidence" field. It is called by the builders before save.
	mappedcontrol.ConfidenceValidator = func() func(int) error {
		validators := mappedcontrolDescConfidence.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(confidence int) error {
			for _, fn := range fns {
				if err := fn(confidence); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// mappedcontrolDescID is the schema descriptor for id field.
	mappedcontrolDescID := mappedcontrolMixinFields3[0].Descriptor()
	// mappedcontrol.DefaultID holds the default value on creation for the id field.
	mappedcontrol.DefaultID = mappedcontrolDescID.Default.(func() string)
	mappedcontrolhistory.Policy = privacy.NewPolicies(schema.MappedControlHistory{})
	mappedcontrolhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := mappedcontrolhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	mappedcontrolhistoryInters := schema.MappedControlHistory{}.Interceptors()
	mappedcontrolhistory.Interceptors[0] = mappedcontrolhistoryInters[0]
	mappedcontrolhistoryFields := schema.MappedControlHistory{}.Fields()
	_ = mappedcontrolhistoryFields
	// mappedcontrolhistoryDescHistoryTime is the schema descriptor for history_time field.
	mappedcontrolhistoryDescHistoryTime := mappedcontrolhistoryFields[0].Descriptor()
	// mappedcontrolhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	mappedcontrolhistory.DefaultHistoryTime = mappedcontrolhistoryDescHistoryTime.Default.(func() time.Time)
	// mappedcontrolhistoryDescCreatedAt is the schema descriptor for created_at field.
	mappedcontrolhistoryDescCreatedAt := mappedcontrolhistoryFields[3].Descriptor()
	// mappedcontrolhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	mappedcontrolhistory.DefaultCreatedAt = mappedcontrolhistoryDescCreatedAt.Default.(func() time.Time)
	// mappedcontrolhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	mappedcontrolhistoryDescUpdatedAt := mappedcontrolhistoryFields[4].Descriptor()
	// mappedcontrolhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	mappedcontrolhistory.DefaultUpdatedAt = mappedcontrolhistoryDescUpdatedAt.Default.(func() time.Time)
	// mappedcontrolhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	mappedcontrolhistory.UpdateDefaultUpdatedAt = mappedcontrolhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// mappedcontrolhistoryDescTags is the schema descriptor for tags field.
	mappedcontrolhistoryDescTags := mappedcontrolhistoryFields[10].Descriptor()
	// mappedcontrolhistory.DefaultTags holds the default value on creation for the tags field.
	mappedcontrolhistory.DefaultTags = mappedcontrolhistoryDescTags.Default.([]string)
	// mappedcontrolhistoryDescID is the schema descriptor for id field.
	mappedcontrolhistoryDescID := mappedcontrolhistoryFields[9].Descriptor()
	// mappedcontrolhistory.DefaultID holds the default value on creation for the id field.
	mappedcontrolhistory.DefaultID = mappedcontrolhistoryDescID.Default.(func() string)
	narrativeMixin := schema.Narrative{}.Mixin()
	narrative.Policy = privacy.NewPolicies(schema.Narrative{})
	narrative.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := narrative.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	narrativeMixinHooks0 := narrativeMixin[0].Hooks()
	narrativeMixinHooks1 := narrativeMixin[1].Hooks()
	narrativeMixinHooks2 := narrativeMixin[2].Hooks()
	narrativeMixinHooks3 := narrativeMixin[3].Hooks()
	narrativeMixinHooks6 := narrativeMixin[6].Hooks()
	narrativeMixinHooks7 := narrativeMixin[7].Hooks()

	narrative.Hooks[1] = narrativeMixinHooks0[0]

	narrative.Hooks[2] = narrativeMixinHooks1[0]

	narrative.Hooks[3] = narrativeMixinHooks2[0]

	narrative.Hooks[4] = narrativeMixinHooks3[0]

	narrative.Hooks[5] = narrativeMixinHooks6[0]

	narrative.Hooks[6] = narrativeMixinHooks6[1]

	narrative.Hooks[7] = narrativeMixinHooks7[0]

	narrative.Hooks[8] = narrativeMixinHooks7[1]

	narrative.Hooks[9] = narrativeMixinHooks7[2]
	narrativeMixinInters1 := narrativeMixin[1].Interceptors()
	narrativeMixinInters2 := narrativeMixin[2].Interceptors()
	narrativeMixinInters6 := narrativeMixin[6].Interceptors()
	narrative.Interceptors[0] = narrativeMixinInters1[0]
	narrative.Interceptors[1] = narrativeMixinInters2[0]
	narrative.Interceptors[2] = narrativeMixinInters6[0]
	narrative.Interceptors[3] = narrativeMixinInters6[1]
	narrativeMixinFields0 := narrativeMixin[0].Fields()
	_ = narrativeMixinFields0
	narrativeMixinFields3 := narrativeMixin[3].Fields()
	_ = narrativeMixinFields3
	narrativeMixinFields4 := narrativeMixin[4].Fields()
	_ = narrativeMixinFields4
	narrativeMixinFields6 := narrativeMixin[6].Fields()
	_ = narrativeMixinFields6
	narrativeFields := schema.Narrative{}.Fields()
	_ = narrativeFields
	// narrativeDescCreatedAt is the schema descriptor for created_at field.
	narrativeDescCreatedAt := narrativeMixinFields0[0].Descriptor()
	// narrative.DefaultCreatedAt holds the default value on creation for the created_at field.
	narrative.DefaultCreatedAt = narrativeDescCreatedAt.Default.(func() time.Time)
	// narrativeDescUpdatedAt is the schema descriptor for updated_at field.
	narrativeDescUpdatedAt := narrativeMixinFields0[1].Descriptor()
	// narrative.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	narrative.DefaultUpdatedAt = narrativeDescUpdatedAt.Default.(func() time.Time)
	// narrative.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	narrative.UpdateDefaultUpdatedAt = narrativeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// narrativeDescDisplayID is the schema descriptor for display_id field.
	narrativeDescDisplayID := narrativeMixinFields3[1].Descriptor()
	// narrative.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	narrative.DisplayIDValidator = narrativeDescDisplayID.Validators[0].(func(string) error)
	// narrativeDescTags is the schema descriptor for tags field.
	narrativeDescTags := narrativeMixinFields4[0].Descriptor()
	// narrative.DefaultTags holds the default value on creation for the tags field.
	narrative.DefaultTags = narrativeDescTags.Default.([]string)
	// narrativeDescOwnerID is the schema descriptor for owner_id field.
	narrativeDescOwnerID := narrativeMixinFields6[0].Descriptor()
	// narrative.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	narrative.OwnerIDValidator = narrativeDescOwnerID.Validators[0].(func(string) error)
	// narrativeDescName is the schema descriptor for name field.
	narrativeDescName := narrativeFields[0].Descriptor()
	// narrative.NameValidator is a validator for the "name" field. It is called by the builders before save.
	narrative.NameValidator = narrativeDescName.Validators[0].(func(string) error)
	// narrativeDescID is the schema descriptor for id field.
	narrativeDescID := narrativeMixinFields3[0].Descriptor()
	// narrative.DefaultID holds the default value on creation for the id field.
	narrative.DefaultID = narrativeDescID.Default.(func() string)
	narrativehistory.Policy = privacy.NewPolicies(schema.NarrativeHistory{})
	narrativehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := narrativehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	narrativehistoryInters := schema.NarrativeHistory{}.Interceptors()
	narrativehistory.Interceptors[0] = narrativehistoryInters[0]
	narrativehistoryFields := schema.NarrativeHistory{}.Fields()
	_ = narrativehistoryFields
	// narrativehistoryDescHistoryTime is the schema descriptor for history_time field.
	narrativehistoryDescHistoryTime := narrativehistoryFields[0].Descriptor()
	// narrativehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	narrativehistory.DefaultHistoryTime = narrativehistoryDescHistoryTime.Default.(func() time.Time)
	// narrativehistoryDescCreatedAt is the schema descriptor for created_at field.
	narrativehistoryDescCreatedAt := narrativehistoryFields[3].Descriptor()
	// narrativehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	narrativehistory.DefaultCreatedAt = narrativehistoryDescCreatedAt.Default.(func() time.Time)
	// narrativehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	narrativehistoryDescUpdatedAt := narrativehistoryFields[4].Descriptor()
	// narrativehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	narrativehistory.DefaultUpdatedAt = narrativehistoryDescUpdatedAt.Default.(func() time.Time)
	// narrativehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	narrativehistory.UpdateDefaultUpdatedAt = narrativehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// narrativehistoryDescTags is the schema descriptor for tags field.
	narrativehistoryDescTags := narrativehistoryFields[11].Descriptor()
	// narrativehistory.DefaultTags holds the default value on creation for the tags field.
	narrativehistory.DefaultTags = narrativehistoryDescTags.Default.([]string)
	// narrativehistoryDescID is the schema descriptor for id field.
	narrativehistoryDescID := narrativehistoryFields[9].Descriptor()
	// narrativehistory.DefaultID holds the default value on creation for the id field.
	narrativehistory.DefaultID = narrativehistoryDescID.Default.(func() string)
	noteMixin := schema.Note{}.Mixin()
	note.Policy = privacy.NewPolicies(schema.Note{})
	note.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := note.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	noteMixinHooks0 := noteMixin[0].Hooks()
	noteMixinHooks1 := noteMixin[1].Hooks()
	noteMixinHooks2 := noteMixin[2].Hooks()
	noteMixinHooks3 := noteMixin[3].Hooks()
	noteMixinHooks5 := noteMixin[5].Hooks()
	noteHooks := schema.Note{}.Hooks()

	note.Hooks[1] = noteMixinHooks0[0]

	note.Hooks[2] = noteMixinHooks1[0]

	note.Hooks[3] = noteMixinHooks2[0]

	note.Hooks[4] = noteMixinHooks3[0]

	note.Hooks[5] = noteMixinHooks5[0]

	note.Hooks[6] = noteMixinHooks5[1]

	note.Hooks[7] = noteHooks[0]
	noteMixinInters1 := noteMixin[1].Interceptors()
	noteMixinInters2 := noteMixin[2].Interceptors()
	noteMixinInters5 := noteMixin[5].Interceptors()
	note.Interceptors[0] = noteMixinInters1[0]
	note.Interceptors[1] = noteMixinInters2[0]
	note.Interceptors[2] = noteMixinInters5[0]
	note.Interceptors[3] = noteMixinInters5[1]
	noteMixinFields0 := noteMixin[0].Fields()
	_ = noteMixinFields0
	noteMixinFields3 := noteMixin[3].Fields()
	_ = noteMixinFields3
	noteMixinFields5 := noteMixin[5].Fields()
	_ = noteMixinFields5
	noteFields := schema.Note{}.Fields()
	_ = noteFields
	// noteDescCreatedAt is the schema descriptor for created_at field.
	noteDescCreatedAt := noteMixinFields0[0].Descriptor()
	// note.DefaultCreatedAt holds the default value on creation for the created_at field.
	note.DefaultCreatedAt = noteDescCreatedAt.Default.(func() time.Time)
	// noteDescUpdatedAt is the schema descriptor for updated_at field.
	noteDescUpdatedAt := noteMixinFields0[1].Descriptor()
	// note.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	note.DefaultUpdatedAt = noteDescUpdatedAt.Default.(func() time.Time)
	// note.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	note.UpdateDefaultUpdatedAt = noteDescUpdatedAt.UpdateDefault.(func() time.Time)
	// noteDescDisplayID is the schema descriptor for display_id field.
	noteDescDisplayID := noteMixinFields3[1].Descriptor()
	// note.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	note.DisplayIDValidator = noteDescDisplayID.Validators[0].(func(string) error)
	// noteDescOwnerID is the schema descriptor for owner_id field.
	noteDescOwnerID := noteMixinFields5[0].Descriptor()
	// note.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	note.OwnerIDValidator = noteDescOwnerID.Validators[0].(func(string) error)
	// noteDescText is the schema descriptor for text field.
	noteDescText := noteFields[0].Descriptor()
	// note.TextValidator is a validator for the "text" field. It is called by the builders before save.
	note.TextValidator = noteDescText.Validators[0].(func(string) error)
	// noteDescID is the schema descriptor for id field.
	noteDescID := noteMixinFields3[0].Descriptor()
	// note.DefaultID holds the default value on creation for the id field.
	note.DefaultID = noteDescID.Default.(func() string)
	notehistory.Policy = privacy.NewPolicies(schema.NoteHistory{})
	notehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := notehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	notehistoryInters := schema.NoteHistory{}.Interceptors()
	notehistory.Interceptors[0] = notehistoryInters[0]
	notehistoryFields := schema.NoteHistory{}.Fields()
	_ = notehistoryFields
	// notehistoryDescHistoryTime is the schema descriptor for history_time field.
	notehistoryDescHistoryTime := notehistoryFields[0].Descriptor()
	// notehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	notehistory.DefaultHistoryTime = notehistoryDescHistoryTime.Default.(func() time.Time)
	// notehistoryDescCreatedAt is the schema descriptor for created_at field.
	notehistoryDescCreatedAt := notehistoryFields[3].Descriptor()
	// notehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	notehistory.DefaultCreatedAt = notehistoryDescCreatedAt.Default.(func() time.Time)
	// notehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	notehistoryDescUpdatedAt := notehistoryFields[4].Descriptor()
	// notehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	notehistory.DefaultUpdatedAt = notehistoryDescUpdatedAt.Default.(func() time.Time)
	// notehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	notehistory.UpdateDefaultUpdatedAt = notehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// notehistoryDescID is the schema descriptor for id field.
	notehistoryDescID := notehistoryFields[9].Descriptor()
	// notehistory.DefaultID holds the default value on creation for the id field.
	notehistory.DefaultID = notehistoryDescID.Default.(func() string)
	onboardingMixin := schema.Onboarding{}.Mixin()
	onboarding.Policy = privacy.NewPolicies(schema.Onboarding{})
	onboarding.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := onboarding.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	onboardingMixinHooks1 := onboardingMixin[1].Hooks()
	onboardingHooks := schema.Onboarding{}.Hooks()

	onboarding.Hooks[1] = onboardingMixinHooks1[0]

	onboarding.Hooks[2] = onboardingHooks[0]
	onboardingMixinInters1 := onboardingMixin[1].Interceptors()
	onboarding.Interceptors[0] = onboardingMixinInters1[0]
	onboardingMixinFields0 := onboardingMixin[0].Fields()
	_ = onboardingMixinFields0
	onboardingFields := schema.Onboarding{}.Fields()
	_ = onboardingFields
	// onboardingDescOrganizationID is the schema descriptor for organization_id field.
	onboardingDescOrganizationID := onboardingFields[0].Descriptor()
	// onboarding.OrganizationIDValidator is a validator for the "organization_id" field. It is called by the builders before save.
	onboarding.OrganizationIDValidator = onboardingDescOrganizationID.Validators[0].(func(string) error)
	// onboardingDescID is the schema descriptor for id field.
	onboardingDescID := onboardingMixinFields0[0].Descriptor()
	// onboarding.DefaultID holds the default value on creation for the id field.
	onboarding.DefaultID = onboardingDescID.Default.(func() string)
	orgmembershipMixin := schema.OrgMembership{}.Mixin()
	orgmembership.Policy = privacy.NewPolicies(schema.OrgMembership{})
	orgmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := orgmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orgmembershipMixinHooks0 := orgmembershipMixin[0].Hooks()
	orgmembershipMixinHooks1 := orgmembershipMixin[1].Hooks()
	orgmembershipHooks := schema.OrgMembership{}.Hooks()

	orgmembership.Hooks[1] = orgmembershipMixinHooks0[0]

	orgmembership.Hooks[2] = orgmembershipMixinHooks1[0]

	orgmembership.Hooks[3] = orgmembershipHooks[0]

	orgmembership.Hooks[4] = orgmembershipHooks[1]

	orgmembership.Hooks[5] = orgmembershipHooks[2]

	orgmembership.Hooks[6] = orgmembershipHooks[3]
	orgmembershipMixinInters1 := orgmembershipMixin[1].Interceptors()
	orgmembershipInters := schema.OrgMembership{}.Interceptors()
	orgmembership.Interceptors[0] = orgmembershipMixinInters1[0]
	orgmembership.Interceptors[1] = orgmembershipInters[0]
	orgmembership.Interceptors[2] = orgmembershipInters[1]
	orgmembershipMixinFields0 := orgmembershipMixin[0].Fields()
	_ = orgmembershipMixinFields0
	orgmembershipMixinFields2 := orgmembershipMixin[2].Fields()
	_ = orgmembershipMixinFields2
	orgmembershipFields := schema.OrgMembership{}.Fields()
	_ = orgmembershipFields
	// orgmembershipDescCreatedAt is the schema descriptor for created_at field.
	orgmembershipDescCreatedAt := orgmembershipMixinFields0[0].Descriptor()
	// orgmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembership.DefaultCreatedAt = orgmembershipDescCreatedAt.Default.(func() time.Time)
	// orgmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershipDescUpdatedAt := orgmembershipMixinFields0[1].Descriptor()
	// orgmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembership.DefaultUpdatedAt = orgmembershipDescUpdatedAt.Default.(func() time.Time)
	// orgmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmembership.UpdateDefaultUpdatedAt = orgmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmembershipDescID is the schema descriptor for id field.
	orgmembershipDescID := orgmembershipMixinFields2[0].Descriptor()
	// orgmembership.DefaultID holds the default value on creation for the id field.
	orgmembership.DefaultID = orgmembershipDescID.Default.(func() string)
	orgmembershiphistory.Policy = privacy.NewPolicies(schema.OrgMembershipHistory{})
	orgmembershiphistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := orgmembershiphistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	orgmembershiphistoryInters := schema.OrgMembershipHistory{}.Interceptors()
	orgmembershiphistory.Interceptors[0] = orgmembershiphistoryInters[0]
	orgmembershiphistoryFields := schema.OrgMembershipHistory{}.Fields()
	_ = orgmembershiphistoryFields
	// orgmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	orgmembershiphistoryDescHistoryTime := orgmembershiphistoryFields[0].Descriptor()
	// orgmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	orgmembershiphistory.DefaultHistoryTime = orgmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// orgmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	orgmembershiphistoryDescCreatedAt := orgmembershiphistoryFields[3].Descriptor()
	// orgmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmembershiphistory.DefaultCreatedAt = orgmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// orgmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	orgmembershiphistoryDescUpdatedAt := orgmembershiphistoryFields[4].Descriptor()
	// orgmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmembershiphistory.DefaultUpdatedAt = orgmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// orgmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmembershiphistory.UpdateDefaultUpdatedAt = orgmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmembershiphistoryDescID is the schema descriptor for id field.
	orgmembershiphistoryDescID := orgmembershiphistoryFields[7].Descriptor()
	// orgmembershiphistory.DefaultID holds the default value on creation for the id field.
	orgmembershiphistory.DefaultID = orgmembershiphistoryDescID.Default.(func() string)
	orgmoduleMixin := schema.OrgModule{}.Mixin()
	orgmoduleMixinHooks0 := orgmoduleMixin[0].Hooks()
	orgmoduleMixinHooks1 := orgmoduleMixin[1].Hooks()
	orgmoduleMixinHooks2 := orgmoduleMixin[2].Hooks()
	orgmoduleMixinHooks5 := orgmoduleMixin[5].Hooks()
	orgmodule.Hooks[0] = orgmoduleMixinHooks0[0]
	orgmodule.Hooks[1] = orgmoduleMixinHooks1[0]
	orgmodule.Hooks[2] = orgmoduleMixinHooks2[0]
	orgmodule.Hooks[3] = orgmoduleMixinHooks5[0]
	orgmoduleMixinInters1 := orgmoduleMixin[1].Interceptors()
	orgmoduleMixinInters2 := orgmoduleMixin[2].Interceptors()
	orgmoduleMixinInters5 := orgmoduleMixin[5].Interceptors()
	orgmodule.Interceptors[0] = orgmoduleMixinInters1[0]
	orgmodule.Interceptors[1] = orgmoduleMixinInters2[0]
	orgmodule.Interceptors[2] = orgmoduleMixinInters5[0]
	orgmoduleMixinFields0 := orgmoduleMixin[0].Fields()
	_ = orgmoduleMixinFields0
	orgmoduleMixinFields3 := orgmoduleMixin[3].Fields()
	_ = orgmoduleMixinFields3
	orgmoduleMixinFields4 := orgmoduleMixin[4].Fields()
	_ = orgmoduleMixinFields4
	orgmoduleMixinFields5 := orgmoduleMixin[5].Fields()
	_ = orgmoduleMixinFields5
	orgmoduleFields := schema.OrgModule{}.Fields()
	_ = orgmoduleFields
	// orgmoduleDescCreatedAt is the schema descriptor for created_at field.
	orgmoduleDescCreatedAt := orgmoduleMixinFields0[0].Descriptor()
	// orgmodule.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgmodule.DefaultCreatedAt = orgmoduleDescCreatedAt.Default.(func() time.Time)
	// orgmoduleDescUpdatedAt is the schema descriptor for updated_at field.
	orgmoduleDescUpdatedAt := orgmoduleMixinFields0[1].Descriptor()
	// orgmodule.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgmodule.DefaultUpdatedAt = orgmoduleDescUpdatedAt.Default.(func() time.Time)
	// orgmodule.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgmodule.UpdateDefaultUpdatedAt = orgmoduleDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgmoduleDescTags is the schema descriptor for tags field.
	orgmoduleDescTags := orgmoduleMixinFields4[0].Descriptor()
	// orgmodule.DefaultTags holds the default value on creation for the tags field.
	orgmodule.DefaultTags = orgmoduleDescTags.Default.([]string)
	// orgmoduleDescOwnerID is the schema descriptor for owner_id field.
	orgmoduleDescOwnerID := orgmoduleMixinFields5[0].Descriptor()
	// orgmodule.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	orgmodule.OwnerIDValidator = orgmoduleDescOwnerID.Validators[0].(func(string) error)
	// orgmoduleDescActive is the schema descriptor for active field.
	orgmoduleDescActive := orgmoduleFields[5].Descriptor()
	// orgmodule.DefaultActive holds the default value on creation for the active field.
	orgmodule.DefaultActive = orgmoduleDescActive.Default.(bool)
	// orgmoduleDescID is the schema descriptor for id field.
	orgmoduleDescID := orgmoduleMixinFields3[0].Descriptor()
	// orgmodule.DefaultID holds the default value on creation for the id field.
	orgmodule.DefaultID = orgmoduleDescID.Default.(func() string)
	orgpriceMixin := schema.OrgPrice{}.Mixin()
	orgpriceMixinHooks0 := orgpriceMixin[0].Hooks()
	orgpriceMixinHooks1 := orgpriceMixin[1].Hooks()
	orgpriceMixinHooks2 := orgpriceMixin[2].Hooks()
	orgpriceMixinHooks5 := orgpriceMixin[5].Hooks()
	orgprice.Hooks[0] = orgpriceMixinHooks0[0]
	orgprice.Hooks[1] = orgpriceMixinHooks1[0]
	orgprice.Hooks[2] = orgpriceMixinHooks2[0]
	orgprice.Hooks[3] = orgpriceMixinHooks5[0]
	orgpriceMixinInters1 := orgpriceMixin[1].Interceptors()
	orgpriceMixinInters2 := orgpriceMixin[2].Interceptors()
	orgpriceMixinInters5 := orgpriceMixin[5].Interceptors()
	orgprice.Interceptors[0] = orgpriceMixinInters1[0]
	orgprice.Interceptors[1] = orgpriceMixinInters2[0]
	orgprice.Interceptors[2] = orgpriceMixinInters5[0]
	orgpriceMixinFields0 := orgpriceMixin[0].Fields()
	_ = orgpriceMixinFields0
	orgpriceMixinFields3 := orgpriceMixin[3].Fields()
	_ = orgpriceMixinFields3
	orgpriceMixinFields4 := orgpriceMixin[4].Fields()
	_ = orgpriceMixinFields4
	orgpriceMixinFields5 := orgpriceMixin[5].Fields()
	_ = orgpriceMixinFields5
	orgpriceFields := schema.OrgPrice{}.Fields()
	_ = orgpriceFields
	// orgpriceDescCreatedAt is the schema descriptor for created_at field.
	orgpriceDescCreatedAt := orgpriceMixinFields0[0].Descriptor()
	// orgprice.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgprice.DefaultCreatedAt = orgpriceDescCreatedAt.Default.(func() time.Time)
	// orgpriceDescUpdatedAt is the schema descriptor for updated_at field.
	orgpriceDescUpdatedAt := orgpriceMixinFields0[1].Descriptor()
	// orgprice.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgprice.DefaultUpdatedAt = orgpriceDescUpdatedAt.Default.(func() time.Time)
	// orgprice.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgprice.UpdateDefaultUpdatedAt = orgpriceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgpriceDescTags is the schema descriptor for tags field.
	orgpriceDescTags := orgpriceMixinFields4[0].Descriptor()
	// orgprice.DefaultTags holds the default value on creation for the tags field.
	orgprice.DefaultTags = orgpriceDescTags.Default.([]string)
	// orgpriceDescOwnerID is the schema descriptor for owner_id field.
	orgpriceDescOwnerID := orgpriceMixinFields5[0].Descriptor()
	// orgprice.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	orgprice.OwnerIDValidator = orgpriceDescOwnerID.Validators[0].(func(string) error)
	// orgpriceDescActive is the schema descriptor for active field.
	orgpriceDescActive := orgpriceFields[3].Descriptor()
	// orgprice.DefaultActive holds the default value on creation for the active field.
	orgprice.DefaultActive = orgpriceDescActive.Default.(bool)
	// orgpriceDescID is the schema descriptor for id field.
	orgpriceDescID := orgpriceMixinFields3[0].Descriptor()
	// orgprice.DefaultID holds the default value on creation for the id field.
	orgprice.DefaultID = orgpriceDescID.Default.(func() string)
	orgproductMixin := schema.OrgProduct{}.Mixin()
	orgproductMixinHooks0 := orgproductMixin[0].Hooks()
	orgproductMixinHooks1 := orgproductMixin[1].Hooks()
	orgproductMixinHooks2 := orgproductMixin[2].Hooks()
	orgproductMixinHooks5 := orgproductMixin[5].Hooks()
	orgproduct.Hooks[0] = orgproductMixinHooks0[0]
	orgproduct.Hooks[1] = orgproductMixinHooks1[0]
	orgproduct.Hooks[2] = orgproductMixinHooks2[0]
	orgproduct.Hooks[3] = orgproductMixinHooks5[0]
	orgproductMixinInters1 := orgproductMixin[1].Interceptors()
	orgproductMixinInters2 := orgproductMixin[2].Interceptors()
	orgproductMixinInters5 := orgproductMixin[5].Interceptors()
	orgproduct.Interceptors[0] = orgproductMixinInters1[0]
	orgproduct.Interceptors[1] = orgproductMixinInters2[0]
	orgproduct.Interceptors[2] = orgproductMixinInters5[0]
	orgproductMixinFields0 := orgproductMixin[0].Fields()
	_ = orgproductMixinFields0
	orgproductMixinFields3 := orgproductMixin[3].Fields()
	_ = orgproductMixinFields3
	orgproductMixinFields4 := orgproductMixin[4].Fields()
	_ = orgproductMixinFields4
	orgproductMixinFields5 := orgproductMixin[5].Fields()
	_ = orgproductMixinFields5
	orgproductFields := schema.OrgProduct{}.Fields()
	_ = orgproductFields
	// orgproductDescCreatedAt is the schema descriptor for created_at field.
	orgproductDescCreatedAt := orgproductMixinFields0[0].Descriptor()
	// orgproduct.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgproduct.DefaultCreatedAt = orgproductDescCreatedAt.Default.(func() time.Time)
	// orgproductDescUpdatedAt is the schema descriptor for updated_at field.
	orgproductDescUpdatedAt := orgproductMixinFields0[1].Descriptor()
	// orgproduct.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgproduct.DefaultUpdatedAt = orgproductDescUpdatedAt.Default.(func() time.Time)
	// orgproduct.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgproduct.UpdateDefaultUpdatedAt = orgproductDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgproductDescTags is the schema descriptor for tags field.
	orgproductDescTags := orgproductMixinFields4[0].Descriptor()
	// orgproduct.DefaultTags holds the default value on creation for the tags field.
	orgproduct.DefaultTags = orgproductDescTags.Default.([]string)
	// orgproductDescOwnerID is the schema descriptor for owner_id field.
	orgproductDescOwnerID := orgproductMixinFields5[0].Descriptor()
	// orgproduct.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	orgproduct.OwnerIDValidator = orgproductDescOwnerID.Validators[0].(func(string) error)
	// orgproductDescActive is the schema descriptor for active field.
	orgproductDescActive := orgproductFields[3].Descriptor()
	// orgproduct.DefaultActive holds the default value on creation for the active field.
	orgproduct.DefaultActive = orgproductDescActive.Default.(bool)
	// orgproductDescID is the schema descriptor for id field.
	orgproductDescID := orgproductMixinFields3[0].Descriptor()
	// orgproduct.DefaultID holds the default value on creation for the id field.
	orgproduct.DefaultID = orgproductDescID.Default.(func() string)
	orgsubscriptionMixin := schema.OrgSubscription{}.Mixin()
	orgsubscriptionMixinHooks0 := orgsubscriptionMixin[0].Hooks()
	orgsubscriptionMixinHooks1 := orgsubscriptionMixin[1].Hooks()
	orgsubscriptionMixinHooks2 := orgsubscriptionMixin[2].Hooks()
	orgsubscription.Hooks[0] = orgsubscriptionMixinHooks0[0]
	orgsubscription.Hooks[1] = orgsubscriptionMixinHooks1[0]
	orgsubscription.Hooks[2] = orgsubscriptionMixinHooks2[0]
	orgsubscriptionMixinInters1 := orgsubscriptionMixin[1].Interceptors()
	orgsubscriptionMixinInters2 := orgsubscriptionMixin[2].Interceptors()
	orgsubscriptionMixinInters5 := orgsubscriptionMixin[5].Interceptors()
	orgsubscriptionInters := schema.OrgSubscription{}.Interceptors()
	orgsubscription.Interceptors[0] = orgsubscriptionMixinInters1[0]
	orgsubscription.Interceptors[1] = orgsubscriptionMixinInters2[0]
	orgsubscription.Interceptors[2] = orgsubscriptionMixinInters5[0]
	orgsubscription.Interceptors[3] = orgsubscriptionInters[0]
	orgsubscriptionMixinFields0 := orgsubscriptionMixin[0].Fields()
	_ = orgsubscriptionMixinFields0
	orgsubscriptionMixinFields3 := orgsubscriptionMixin[3].Fields()
	_ = orgsubscriptionMixinFields3
	orgsubscriptionMixinFields4 := orgsubscriptionMixin[4].Fields()
	_ = orgsubscriptionMixinFields4
	orgsubscriptionMixinFields5 := orgsubscriptionMixin[5].Fields()
	_ = orgsubscriptionMixinFields5
	orgsubscriptionFields := schema.OrgSubscription{}.Fields()
	_ = orgsubscriptionFields
	// orgsubscriptionDescCreatedAt is the schema descriptor for created_at field.
	orgsubscriptionDescCreatedAt := orgsubscriptionMixinFields0[0].Descriptor()
	// orgsubscription.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgsubscription.DefaultCreatedAt = orgsubscriptionDescCreatedAt.Default.(func() time.Time)
	// orgsubscriptionDescUpdatedAt is the schema descriptor for updated_at field.
	orgsubscriptionDescUpdatedAt := orgsubscriptionMixinFields0[1].Descriptor()
	// orgsubscription.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgsubscription.DefaultUpdatedAt = orgsubscriptionDescUpdatedAt.Default.(func() time.Time)
	// orgsubscription.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgsubscription.UpdateDefaultUpdatedAt = orgsubscriptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgsubscriptionDescTags is the schema descriptor for tags field.
	orgsubscriptionDescTags := orgsubscriptionMixinFields4[0].Descriptor()
	// orgsubscription.DefaultTags holds the default value on creation for the tags field.
	orgsubscription.DefaultTags = orgsubscriptionDescTags.Default.([]string)
	// orgsubscriptionDescOwnerID is the schema descriptor for owner_id field.
	orgsubscriptionDescOwnerID := orgsubscriptionMixinFields5[0].Descriptor()
	// orgsubscription.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	orgsubscription.OwnerIDValidator = orgsubscriptionDescOwnerID.Validators[0].(func(string) error)
	// orgsubscriptionDescActive is the schema descriptor for active field.
	orgsubscriptionDescActive := orgsubscriptionFields[5].Descriptor()
	// orgsubscription.DefaultActive holds the default value on creation for the active field.
	orgsubscription.DefaultActive = orgsubscriptionDescActive.Default.(bool)
	// orgsubscriptionDescID is the schema descriptor for id field.
	orgsubscriptionDescID := orgsubscriptionMixinFields3[0].Descriptor()
	// orgsubscription.DefaultID holds the default value on creation for the id field.
	orgsubscription.DefaultID = orgsubscriptionDescID.Default.(func() string)
	orgsubscriptionhistoryFields := schema.OrgSubscriptionHistory{}.Fields()
	_ = orgsubscriptionhistoryFields
	// orgsubscriptionhistoryDescHistoryTime is the schema descriptor for history_time field.
	orgsubscriptionhistoryDescHistoryTime := orgsubscriptionhistoryFields[0].Descriptor()
	// orgsubscriptionhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	orgsubscriptionhistory.DefaultHistoryTime = orgsubscriptionhistoryDescHistoryTime.Default.(func() time.Time)
	// orgsubscriptionhistoryDescCreatedAt is the schema descriptor for created_at field.
	orgsubscriptionhistoryDescCreatedAt := orgsubscriptionhistoryFields[3].Descriptor()
	// orgsubscriptionhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	orgsubscriptionhistory.DefaultCreatedAt = orgsubscriptionhistoryDescCreatedAt.Default.(func() time.Time)
	// orgsubscriptionhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	orgsubscriptionhistoryDescUpdatedAt := orgsubscriptionhistoryFields[4].Descriptor()
	// orgsubscriptionhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orgsubscriptionhistory.DefaultUpdatedAt = orgsubscriptionhistoryDescUpdatedAt.Default.(func() time.Time)
	// orgsubscriptionhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orgsubscriptionhistory.UpdateDefaultUpdatedAt = orgsubscriptionhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// orgsubscriptionhistoryDescTags is the schema descriptor for tags field.
	orgsubscriptionhistoryDescTags := orgsubscriptionhistoryFields[10].Descriptor()
	// orgsubscriptionhistory.DefaultTags holds the default value on creation for the tags field.
	orgsubscriptionhistory.DefaultTags = orgsubscriptionhistoryDescTags.Default.([]string)
	// orgsubscriptionhistoryDescActive is the schema descriptor for active field.
	orgsubscriptionhistoryDescActive := orgsubscriptionhistoryFields[17].Descriptor()
	// orgsubscriptionhistory.DefaultActive holds the default value on creation for the active field.
	orgsubscriptionhistory.DefaultActive = orgsubscriptionhistoryDescActive.Default.(bool)
	// orgsubscriptionhistoryDescID is the schema descriptor for id field.
	orgsubscriptionhistoryDescID := orgsubscriptionhistoryFields[9].Descriptor()
	// orgsubscriptionhistory.DefaultID holds the default value on creation for the id field.
	orgsubscriptionhistory.DefaultID = orgsubscriptionhistoryDescID.Default.(func() string)
	organizationMixin := schema.Organization{}.Mixin()
	organization.Policy = privacy.NewPolicies(schema.Organization{})
	organization.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organization.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationMixinHooks0 := organizationMixin[0].Hooks()
	organizationMixinHooks1 := organizationMixin[1].Hooks()
	organizationMixinHooks2 := organizationMixin[2].Hooks()
	organizationMixinHooks6 := organizationMixin[6].Hooks()
	organizationHooks := schema.Organization{}.Hooks()

	organization.Hooks[1] = organizationMixinHooks0[0]

	organization.Hooks[2] = organizationMixinHooks1[0]

	organization.Hooks[3] = organizationMixinHooks2[0]

	organization.Hooks[4] = organizationMixinHooks6[0]

	organization.Hooks[5] = organizationMixinHooks6[1]

	organization.Hooks[6] = organizationMixinHooks6[2]

	organization.Hooks[7] = organizationMixinHooks6[3]

	organization.Hooks[8] = organizationMixinHooks6[4]

	organization.Hooks[9] = organizationMixinHooks6[5]

	organization.Hooks[10] = organizationMixinHooks6[6]

	organization.Hooks[11] = organizationMixinHooks6[7]

	organization.Hooks[12] = organizationMixinHooks6[8]

	organization.Hooks[13] = organizationMixinHooks6[9]

	organization.Hooks[14] = organizationMixinHooks6[10]

	organization.Hooks[15] = organizationMixinHooks6[11]

	organization.Hooks[16] = organizationMixinHooks6[12]

	organization.Hooks[17] = organizationMixinHooks6[13]

	organization.Hooks[18] = organizationHooks[0]

	organization.Hooks[19] = organizationHooks[1]

	organization.Hooks[20] = organizationHooks[2]
	organizationMixinInters1 := organizationMixin[1].Interceptors()
	organizationMixinInters2 := organizationMixin[2].Interceptors()
	organizationInters := schema.Organization{}.Interceptors()
	organization.Interceptors[0] = organizationMixinInters1[0]
	organization.Interceptors[1] = organizationMixinInters2[0]
	organization.Interceptors[2] = organizationInters[0]
	organizationMixinFields0 := organizationMixin[0].Fields()
	_ = organizationMixinFields0
	organizationMixinFields3 := organizationMixin[3].Fields()
	_ = organizationMixinFields3
	organizationMixinFields4 := organizationMixin[4].Fields()
	_ = organizationMixinFields4
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationMixinFields0[0].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationMixinFields0[1].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescTags is the schema descriptor for tags field.
	organizationDescTags := organizationMixinFields4[0].Descriptor()
	// organization.DefaultTags holds the default value on creation for the tags field.
	organization.DefaultTags = organizationDescTags.Default.([]string)
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[0].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = func() func(string) error {
		validators := organizationDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescDisplayName is the schema descriptor for display_name field.
	organizationDescDisplayName := organizationFields[1].Descriptor()
	// organization.DefaultDisplayName holds the default value on creation for the display_name field.
	organization.DefaultDisplayName = organizationDescDisplayName.Default.(string)
	// organization.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	organization.DisplayNameValidator = organizationDescDisplayName.Validators[0].(func(string) error)
	// organizationDescPersonalOrg is the schema descriptor for personal_org field.
	organizationDescPersonalOrg := organizationFields[4].Descriptor()
	// organization.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organization.DefaultPersonalOrg = organizationDescPersonalOrg.Default.(bool)
	// organizationDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	organizationDescAvatarRemoteURL := organizationFields[5].Descriptor()
	// organization.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	organization.AvatarRemoteURLValidator = func() func(string) error {
		validators := organizationDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// organizationDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	organizationDescAvatarUpdatedAt := organizationFields[7].Descriptor()
	// organization.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	organization.DefaultAvatarUpdatedAt = organizationDescAvatarUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	organization.UpdateDefaultAvatarUpdatedAt = organizationDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationDescDedicatedDb := organizationFields[8].Descriptor()
	// organization.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organization.DefaultDedicatedDb = organizationDescDedicatedDb.Default.(bool)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationMixinFields3[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() string)
	organizationhistory.Policy = privacy.NewPolicies(schema.OrganizationHistory{})
	organizationhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organizationhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationhistoryInters := schema.OrganizationHistory{}.Interceptors()
	organizationhistory.Interceptors[0] = organizationhistoryInters[0]
	organizationhistoryFields := schema.OrganizationHistory{}.Fields()
	_ = organizationhistoryFields
	// organizationhistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationhistoryDescHistoryTime := organizationhistoryFields[0].Descriptor()
	// organizationhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationhistory.DefaultHistoryTime = organizationhistoryDescHistoryTime.Default.(func() time.Time)
	// organizationhistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationhistoryDescCreatedAt := organizationhistoryFields[3].Descriptor()
	// organizationhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationhistory.DefaultCreatedAt = organizationhistoryDescCreatedAt.Default.(func() time.Time)
	// organizationhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationhistoryDescUpdatedAt := organizationhistoryFields[4].Descriptor()
	// organizationhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationhistory.DefaultUpdatedAt = organizationhistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationhistory.UpdateDefaultUpdatedAt = organizationhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationhistoryDescTags is the schema descriptor for tags field.
	organizationhistoryDescTags := organizationhistoryFields[10].Descriptor()
	// organizationhistory.DefaultTags holds the default value on creation for the tags field.
	organizationhistory.DefaultTags = organizationhistoryDescTags.Default.([]string)
	// organizationhistoryDescDisplayName is the schema descriptor for display_name field.
	organizationhistoryDescDisplayName := organizationhistoryFields[12].Descriptor()
	// organizationhistory.DefaultDisplayName holds the default value on creation for the display_name field.
	organizationhistory.DefaultDisplayName = organizationhistoryDescDisplayName.Default.(string)
	// organizationhistoryDescPersonalOrg is the schema descriptor for personal_org field.
	organizationhistoryDescPersonalOrg := organizationhistoryFields[15].Descriptor()
	// organizationhistory.DefaultPersonalOrg holds the default value on creation for the personal_org field.
	organizationhistory.DefaultPersonalOrg = organizationhistoryDescPersonalOrg.Default.(bool)
	// organizationhistoryDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	organizationhistoryDescAvatarUpdatedAt := organizationhistoryFields[18].Descriptor()
	// organizationhistory.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	organizationhistory.DefaultAvatarUpdatedAt = organizationhistoryDescAvatarUpdatedAt.Default.(func() time.Time)
	// organizationhistory.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	organizationhistory.UpdateDefaultAvatarUpdatedAt = organizationhistoryDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationhistoryDescDedicatedDb is the schema descriptor for dedicated_db field.
	organizationhistoryDescDedicatedDb := organizationhistoryFields[19].Descriptor()
	// organizationhistory.DefaultDedicatedDb holds the default value on creation for the dedicated_db field.
	organizationhistory.DefaultDedicatedDb = organizationhistoryDescDedicatedDb.Default.(bool)
	// organizationhistoryDescID is the schema descriptor for id field.
	organizationhistoryDescID := organizationhistoryFields[9].Descriptor()
	// organizationhistory.DefaultID holds the default value on creation for the id field.
	organizationhistory.DefaultID = organizationhistoryDescID.Default.(func() string)
	organizationsettingMixin := schema.OrganizationSetting{}.Mixin()
	organizationsetting.Policy = privacy.NewPolicies(schema.OrganizationSetting{})
	organizationsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organizationsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationsettingMixinHooks0 := organizationsettingMixin[0].Hooks()
	organizationsettingMixinHooks1 := organizationsettingMixin[1].Hooks()
	organizationsettingMixinHooks2 := organizationsettingMixin[2].Hooks()
	organizationsettingHooks := schema.OrganizationSetting{}.Hooks()

	organizationsetting.Hooks[1] = organizationsettingMixinHooks0[0]

	organizationsetting.Hooks[2] = organizationsettingMixinHooks1[0]

	organizationsetting.Hooks[3] = organizationsettingMixinHooks2[0]

	organizationsetting.Hooks[4] = organizationsettingHooks[0]

	organizationsetting.Hooks[5] = organizationsettingHooks[1]
	organizationsettingMixinInters1 := organizationsettingMixin[1].Interceptors()
	organizationsettingMixinInters2 := organizationsettingMixin[2].Interceptors()
	organizationsettingInters := schema.OrganizationSetting{}.Interceptors()
	organizationsetting.Interceptors[0] = organizationsettingMixinInters1[0]
	organizationsetting.Interceptors[1] = organizationsettingMixinInters2[0]
	organizationsetting.Interceptors[2] = organizationsettingInters[0]
	organizationsettingMixinFields0 := organizationsettingMixin[0].Fields()
	_ = organizationsettingMixinFields0
	organizationsettingMixinFields3 := organizationsettingMixin[3].Fields()
	_ = organizationsettingMixinFields3
	organizationsettingMixinFields4 := organizationsettingMixin[4].Fields()
	_ = organizationsettingMixinFields4
	organizationsettingFields := schema.OrganizationSetting{}.Fields()
	_ = organizationsettingFields
	// organizationsettingDescCreatedAt is the schema descriptor for created_at field.
	organizationsettingDescCreatedAt := organizationsettingMixinFields0[0].Descriptor()
	// organizationsetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsetting.DefaultCreatedAt = organizationsettingDescCreatedAt.Default.(func() time.Time)
	// organizationsettingDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettingDescUpdatedAt := organizationsettingMixinFields0[1].Descriptor()
	// organizationsetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsetting.DefaultUpdatedAt = organizationsettingDescUpdatedAt.Default.(func() time.Time)
	// organizationsetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsetting.UpdateDefaultUpdatedAt = organizationsettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettingDescTags is the schema descriptor for tags field.
	organizationsettingDescTags := organizationsettingMixinFields4[0].Descriptor()
	// organizationsetting.DefaultTags holds the default value on creation for the tags field.
	organizationsetting.DefaultTags = organizationsettingDescTags.Default.([]string)
	// organizationsettingDescDomains is the schema descriptor for domains field.
	organizationsettingDescDomains := organizationsettingFields[0].Descriptor()
	// organizationsetting.DomainsValidator is a validator for the "domains" field. It is called by the builders before save.
	organizationsetting.DomainsValidator = organizationsettingDescDomains.Validators[0].(func([]string) error)
	// organizationsettingDescBillingEmail is the schema descriptor for billing_email field.
	organizationsettingDescBillingEmail := organizationsettingFields[2].Descriptor()
	// organizationsetting.BillingEmailValidator is a validator for the "billing_email" field. It is called by the builders before save.
	organizationsetting.BillingEmailValidator = organizationsettingDescBillingEmail.Validators[0].(func(string) error)
	// organizationsettingDescBillingPhone is the schema descriptor for billing_phone field.
	organizationsettingDescBillingPhone := organizationsettingFields[3].Descriptor()
	// organizationsetting.BillingPhoneValidator is a validator for the "billing_phone" field. It is called by the builders before save.
	organizationsetting.BillingPhoneValidator = organizationsettingDescBillingPhone.Validators[0].(func(string) error)
	// organizationsettingDescBillingNotificationsEnabled is the schema descriptor for billing_notifications_enabled field.
	organizationsettingDescBillingNotificationsEnabled := organizationsettingFields[8].Descriptor()
	// organizationsetting.DefaultBillingNotificationsEnabled holds the default value on creation for the billing_notifications_enabled field.
	organizationsetting.DefaultBillingNotificationsEnabled = organizationsettingDescBillingNotificationsEnabled.Default.(bool)
	// organizationsettingDescAllowedEmailDomains is the schema descriptor for allowed_email_domains field.
	organizationsettingDescAllowedEmailDomains := organizationsettingFields[9].Descriptor()
	// organizationsetting.AllowedEmailDomainsValidator is a validator for the "allowed_email_domains" field. It is called by the builders before save.
	organizationsetting.AllowedEmailDomainsValidator = organizationsettingDescAllowedEmailDomains.Validators[0].(func([]string) error)
	// organizationsettingDescIdentityProviderLoginEnforced is the schema descriptor for identity_provider_login_enforced field.
	organizationsettingDescIdentityProviderLoginEnforced := organizationsettingFields[16].Descriptor()
	// organizationsetting.DefaultIdentityProviderLoginEnforced holds the default value on creation for the identity_provider_login_enforced field.
	organizationsetting.DefaultIdentityProviderLoginEnforced = organizationsettingDescIdentityProviderLoginEnforced.Default.(bool)
	// organizationsettingDescComplianceWebhookToken is the schema descriptor for compliance_webhook_token field.
	organizationsettingDescComplianceWebhookToken := organizationsettingFields[17].Descriptor()
	// organizationsetting.DefaultComplianceWebhookToken holds the default value on creation for the compliance_webhook_token field.
	organizationsetting.DefaultComplianceWebhookToken = organizationsettingDescComplianceWebhookToken.Default.(func() string)
	// organizationsettingDescID is the schema descriptor for id field.
	organizationsettingDescID := organizationsettingMixinFields3[0].Descriptor()
	// organizationsetting.DefaultID holds the default value on creation for the id field.
	organizationsetting.DefaultID = organizationsettingDescID.Default.(func() string)
	organizationsettinghistory.Policy = privacy.NewPolicies(schema.OrganizationSettingHistory{})
	organizationsettinghistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := organizationsettinghistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	organizationsettinghistoryInters := schema.OrganizationSettingHistory{}.Interceptors()
	organizationsettinghistory.Interceptors[0] = organizationsettinghistoryInters[0]
	organizationsettinghistoryFields := schema.OrganizationSettingHistory{}.Fields()
	_ = organizationsettinghistoryFields
	// organizationsettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	organizationsettinghistoryDescHistoryTime := organizationsettinghistoryFields[0].Descriptor()
	// organizationsettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	organizationsettinghistory.DefaultHistoryTime = organizationsettinghistoryDescHistoryTime.Default.(func() time.Time)
	// organizationsettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	organizationsettinghistoryDescCreatedAt := organizationsettinghistoryFields[3].Descriptor()
	// organizationsettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	organizationsettinghistory.DefaultCreatedAt = organizationsettinghistoryDescCreatedAt.Default.(func() time.Time)
	// organizationsettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	organizationsettinghistoryDescUpdatedAt := organizationsettinghistoryFields[4].Descriptor()
	// organizationsettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organizationsettinghistory.DefaultUpdatedAt = organizationsettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// organizationsettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organizationsettinghistory.UpdateDefaultUpdatedAt = organizationsettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationsettinghistoryDescTags is the schema descriptor for tags field.
	organizationsettinghistoryDescTags := organizationsettinghistoryFields[10].Descriptor()
	// organizationsettinghistory.DefaultTags holds the default value on creation for the tags field.
	organizationsettinghistory.DefaultTags = organizationsettinghistoryDescTags.Default.([]string)
	// organizationsettinghistoryDescBillingNotificationsEnabled is the schema descriptor for billing_notifications_enabled field.
	organizationsettinghistoryDescBillingNotificationsEnabled := organizationsettinghistoryFields[19].Descriptor()
	// organizationsettinghistory.DefaultBillingNotificationsEnabled holds the default value on creation for the billing_notifications_enabled field.
	organizationsettinghistory.DefaultBillingNotificationsEnabled = organizationsettinghistoryDescBillingNotificationsEnabled.Default.(bool)
	// organizationsettinghistoryDescIdentityProviderLoginEnforced is the schema descriptor for identity_provider_login_enforced field.
	organizationsettinghistoryDescIdentityProviderLoginEnforced := organizationsettinghistoryFields[27].Descriptor()
	// organizationsettinghistory.DefaultIdentityProviderLoginEnforced holds the default value on creation for the identity_provider_login_enforced field.
	organizationsettinghistory.DefaultIdentityProviderLoginEnforced = organizationsettinghistoryDescIdentityProviderLoginEnforced.Default.(bool)
	// organizationsettinghistoryDescComplianceWebhookToken is the schema descriptor for compliance_webhook_token field.
	organizationsettinghistoryDescComplianceWebhookToken := organizationsettinghistoryFields[28].Descriptor()
	// organizationsettinghistory.DefaultComplianceWebhookToken holds the default value on creation for the compliance_webhook_token field.
	organizationsettinghistory.DefaultComplianceWebhookToken = organizationsettinghistoryDescComplianceWebhookToken.Default.(func() string)
	// organizationsettinghistoryDescID is the schema descriptor for id field.
	organizationsettinghistoryDescID := organizationsettinghistoryFields[9].Descriptor()
	// organizationsettinghistory.DefaultID holds the default value on creation for the id field.
	organizationsettinghistory.DefaultID = organizationsettinghistoryDescID.Default.(func() string)
	passwordresettokenMixin := schema.PasswordResetToken{}.Mixin()
	passwordresettoken.Policy = privacy.NewPolicies(schema.PasswordResetToken{})
	passwordresettoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := passwordresettoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	passwordresettokenMixinHooks0 := passwordresettokenMixin[0].Hooks()
	passwordresettokenMixinHooks2 := passwordresettokenMixin[2].Hooks()
	passwordresettokenMixinHooks3 := passwordresettokenMixin[3].Hooks()
	passwordresettokenHooks := schema.PasswordResetToken{}.Hooks()

	passwordresettoken.Hooks[1] = passwordresettokenMixinHooks0[0]

	passwordresettoken.Hooks[2] = passwordresettokenMixinHooks2[0]

	passwordresettoken.Hooks[3] = passwordresettokenMixinHooks3[0]

	passwordresettoken.Hooks[4] = passwordresettokenHooks[0]
	passwordresettokenMixinInters2 := passwordresettokenMixin[2].Interceptors()
	passwordresettokenMixinInters3 := passwordresettokenMixin[3].Interceptors()
	passwordresettoken.Interceptors[0] = passwordresettokenMixinInters2[0]
	passwordresettoken.Interceptors[1] = passwordresettokenMixinInters3[0]
	passwordresettokenMixinFields0 := passwordresettokenMixin[0].Fields()
	_ = passwordresettokenMixinFields0
	passwordresettokenMixinFields1 := passwordresettokenMixin[1].Fields()
	_ = passwordresettokenMixinFields1
	passwordresettokenFields := schema.PasswordResetToken{}.Fields()
	_ = passwordresettokenFields
	// passwordresettokenDescCreatedAt is the schema descriptor for created_at field.
	passwordresettokenDescCreatedAt := passwordresettokenMixinFields0[0].Descriptor()
	// passwordresettoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	passwordresettoken.DefaultCreatedAt = passwordresettokenDescCreatedAt.Default.(func() time.Time)
	// passwordresettokenDescUpdatedAt is the schema descriptor for updated_at field.
	passwordresettokenDescUpdatedAt := passwordresettokenMixinFields0[1].Descriptor()
	// passwordresettoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	passwordresettoken.DefaultUpdatedAt = passwordresettokenDescUpdatedAt.Default.(func() time.Time)
	// passwordresettoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	passwordresettoken.UpdateDefaultUpdatedAt = passwordresettokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// passwordresettokenDescToken is the schema descriptor for token field.
	passwordresettokenDescToken := passwordresettokenFields[0].Descriptor()
	// passwordresettoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	passwordresettoken.TokenValidator = passwordresettokenDescToken.Validators[0].(func(string) error)
	// passwordresettokenDescEmail is the schema descriptor for email field.
	passwordresettokenDescEmail := passwordresettokenFields[2].Descriptor()
	// passwordresettoken.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	passwordresettoken.EmailValidator = func() func(string) error {
		validators := passwordresettokenDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// passwordresettokenDescSecret is the schema descriptor for secret field.
	passwordresettokenDescSecret := passwordresettokenFields[3].Descriptor()
	// passwordresettoken.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	passwordresettoken.SecretValidator = passwordresettokenDescSecret.Validators[0].(func([]byte) error)
	// passwordresettokenDescID is the schema descriptor for id field.
	passwordresettokenDescID := passwordresettokenMixinFields1[0].Descriptor()
	// passwordresettoken.DefaultID holds the default value on creation for the id field.
	passwordresettoken.DefaultID = passwordresettokenDescID.Default.(func() string)
	personalaccesstokenMixin := schema.PersonalAccessToken{}.Mixin()
	personalaccesstoken.Policy = privacy.NewPolicies(schema.PersonalAccessToken{})
	personalaccesstoken.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := personalaccesstoken.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	personalaccesstokenMixinHooks0 := personalaccesstokenMixin[0].Hooks()
	personalaccesstokenMixinHooks1 := personalaccesstokenMixin[1].Hooks()
	personalaccesstokenMixinHooks2 := personalaccesstokenMixin[2].Hooks()
	personalaccesstokenMixinHooks6 := personalaccesstokenMixin[6].Hooks()
	personalaccesstokenHooks := schema.PersonalAccessToken{}.Hooks()

	personalaccesstoken.Hooks[1] = personalaccesstokenMixinHooks0[0]

	personalaccesstoken.Hooks[2] = personalaccesstokenMixinHooks1[0]

	personalaccesstoken.Hooks[3] = personalaccesstokenMixinHooks2[0]

	personalaccesstoken.Hooks[4] = personalaccesstokenMixinHooks6[0]

	personalaccesstoken.Hooks[5] = personalaccesstokenHooks[0]

	personalaccesstoken.Hooks[6] = personalaccesstokenHooks[1]
	personalaccesstokenMixinInters1 := personalaccesstokenMixin[1].Interceptors()
	personalaccesstokenMixinInters2 := personalaccesstokenMixin[2].Interceptors()
	personalaccesstokenMixinInters6 := personalaccesstokenMixin[6].Interceptors()
	personalaccesstokenInters := schema.PersonalAccessToken{}.Interceptors()
	personalaccesstoken.Interceptors[0] = personalaccesstokenMixinInters1[0]
	personalaccesstoken.Interceptors[1] = personalaccesstokenMixinInters2[0]
	personalaccesstoken.Interceptors[2] = personalaccesstokenMixinInters6[0]
	personalaccesstoken.Interceptors[3] = personalaccesstokenInters[0]
	personalaccesstokenMixinFields0 := personalaccesstokenMixin[0].Fields()
	_ = personalaccesstokenMixinFields0
	personalaccesstokenMixinFields3 := personalaccesstokenMixin[3].Fields()
	_ = personalaccesstokenMixinFields3
	personalaccesstokenMixinFields4 := personalaccesstokenMixin[4].Fields()
	_ = personalaccesstokenMixinFields4
	personalaccesstokenFields := schema.PersonalAccessToken{}.Fields()
	_ = personalaccesstokenFields
	// personalaccesstokenDescCreatedAt is the schema descriptor for created_at field.
	personalaccesstokenDescCreatedAt := personalaccesstokenMixinFields0[0].Descriptor()
	// personalaccesstoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	personalaccesstoken.DefaultCreatedAt = personalaccesstokenDescCreatedAt.Default.(func() time.Time)
	// personalaccesstokenDescUpdatedAt is the schema descriptor for updated_at field.
	personalaccesstokenDescUpdatedAt := personalaccesstokenMixinFields0[1].Descriptor()
	// personalaccesstoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	personalaccesstoken.DefaultUpdatedAt = personalaccesstokenDescUpdatedAt.Default.(func() time.Time)
	// personalaccesstoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	personalaccesstoken.UpdateDefaultUpdatedAt = personalaccesstokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	// personalaccesstokenDescTags is the schema descriptor for tags field.
	personalaccesstokenDescTags := personalaccesstokenMixinFields4[0].Descriptor()
	// personalaccesstoken.DefaultTags holds the default value on creation for the tags field.
	personalaccesstoken.DefaultTags = personalaccesstokenDescTags.Default.([]string)
	// personalaccesstokenDescName is the schema descriptor for name field.
	personalaccesstokenDescName := personalaccesstokenFields[0].Descriptor()
	// personalaccesstoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	personalaccesstoken.NameValidator = personalaccesstokenDescName.Validators[0].(func(string) error)
	// personalaccesstokenDescToken is the schema descriptor for token field.
	personalaccesstokenDescToken := personalaccesstokenFields[1].Descriptor()
	// personalaccesstoken.DefaultToken holds the default value on creation for the token field.
	personalaccesstoken.DefaultToken = personalaccesstokenDescToken.Default.(func() string)
	// personalaccesstokenDescIsActive is the schema descriptor for is_active field.
	personalaccesstokenDescIsActive := personalaccesstokenFields[7].Descriptor()
	// personalaccesstoken.DefaultIsActive holds the default value on creation for the is_active field.
	personalaccesstoken.DefaultIsActive = personalaccesstokenDescIsActive.Default.(bool)
	// personalaccesstokenDescID is the schema descriptor for id field.
	personalaccesstokenDescID := personalaccesstokenMixinFields3[0].Descriptor()
	// personalaccesstoken.DefaultID holds the default value on creation for the id field.
	personalaccesstoken.DefaultID = personalaccesstokenDescID.Default.(func() string)
	procedureMixin := schema.Procedure{}.Mixin()
	procedure.Policy = privacy.NewPolicies(schema.Procedure{})
	procedure.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := procedure.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	procedureMixinHooks0 := procedureMixin[0].Hooks()
	procedureMixinHooks1 := procedureMixin[1].Hooks()
	procedureMixinHooks2 := procedureMixin[2].Hooks()
	procedureMixinHooks3 := procedureMixin[3].Hooks()
	procedureMixinHooks5 := procedureMixin[5].Hooks()
	procedureMixinHooks7 := procedureMixin[7].Hooks()
	procedureMixinHooks8 := procedureMixin[8].Hooks()
	procedureMixinHooks9 := procedureMixin[9].Hooks()
	procedureHooks := schema.Procedure{}.Hooks()

	procedure.Hooks[1] = procedureMixinHooks0[0]

	procedure.Hooks[2] = procedureMixinHooks1[0]

	procedure.Hooks[3] = procedureMixinHooks2[0]

	procedure.Hooks[4] = procedureMixinHooks3[0]

	procedure.Hooks[5] = procedureMixinHooks5[0]

	procedure.Hooks[6] = procedureMixinHooks7[0]

	procedure.Hooks[7] = procedureMixinHooks8[0]

	procedure.Hooks[8] = procedureMixinHooks8[1]

	procedure.Hooks[9] = procedureMixinHooks9[0]

	procedure.Hooks[10] = procedureMixinHooks9[1]

	procedure.Hooks[11] = procedureMixinHooks9[2]

	procedure.Hooks[12] = procedureHooks[0]
	procedureMixinInters1 := procedureMixin[1].Interceptors()
	procedureMixinInters2 := procedureMixin[2].Interceptors()
	procedureMixinInters7 := procedureMixin[7].Interceptors()
	procedureMixinInters8 := procedureMixin[8].Interceptors()
	procedureInters := schema.Procedure{}.Interceptors()
	procedure.Interceptors[0] = procedureMixinInters1[0]
	procedure.Interceptors[1] = procedureMixinInters2[0]
	procedure.Interceptors[2] = procedureMixinInters7[0]
	procedure.Interceptors[3] = procedureMixinInters8[0]
	procedure.Interceptors[4] = procedureInters[0]
	procedureMixinFields0 := procedureMixin[0].Fields()
	_ = procedureMixinFields0
	procedureMixinFields3 := procedureMixin[3].Fields()
	_ = procedureMixinFields3
	procedureMixinFields4 := procedureMixin[4].Fields()
	_ = procedureMixinFields4
	procedureMixinFields5 := procedureMixin[5].Fields()
	_ = procedureMixinFields5
	procedureMixinFields9 := procedureMixin[9].Fields()
	_ = procedureMixinFields9
	procedureFields := schema.Procedure{}.Fields()
	_ = procedureFields
	// procedureDescCreatedAt is the schema descriptor for created_at field.
	procedureDescCreatedAt := procedureMixinFields0[0].Descriptor()
	// procedure.DefaultCreatedAt holds the default value on creation for the created_at field.
	procedure.DefaultCreatedAt = procedureDescCreatedAt.Default.(func() time.Time)
	// procedureDescUpdatedAt is the schema descriptor for updated_at field.
	procedureDescUpdatedAt := procedureMixinFields0[1].Descriptor()
	// procedure.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	procedure.DefaultUpdatedAt = procedureDescUpdatedAt.Default.(func() time.Time)
	// procedure.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	procedure.UpdateDefaultUpdatedAt = procedureDescUpdatedAt.UpdateDefault.(func() time.Time)
	// procedureDescDisplayID is the schema descriptor for display_id field.
	procedureDescDisplayID := procedureMixinFields3[1].Descriptor()
	// procedure.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	procedure.DisplayIDValidator = procedureDescDisplayID.Validators[0].(func(string) error)
	// procedureDescTags is the schema descriptor for tags field.
	procedureDescTags := procedureMixinFields4[0].Descriptor()
	// procedure.DefaultTags holds the default value on creation for the tags field.
	procedure.DefaultTags = procedureDescTags.Default.([]string)
	// procedureDescRevision is the schema descriptor for revision field.
	procedureDescRevision := procedureMixinFields5[0].Descriptor()
	// procedure.DefaultRevision holds the default value on creation for the revision field.
	procedure.DefaultRevision = procedureDescRevision.Default.(string)
	// procedure.RevisionValidator is a validator for the "revision" field. It is called by the builders before save.
	procedure.RevisionValidator = procedureDescRevision.Validators[0].(func(string) error)
	// procedureDescName is the schema descriptor for name field.
	procedureDescName := procedureMixinFields9[0].Descriptor()
	// procedure.NameValidator is a validator for the "name" field. It is called by the builders before save.
	procedure.NameValidator = procedureDescName.Validators[0].(func(string) error)
	// procedureDescApprovalRequired is the schema descriptor for approval_required field.
	procedureDescApprovalRequired := procedureMixinFields9[4].Descriptor()
	// procedure.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	procedure.DefaultApprovalRequired = procedureDescApprovalRequired.Default.(bool)
	// procedureDescReviewDue is the schema descriptor for review_due field.
	procedureDescReviewDue := procedureMixinFields9[5].Descriptor()
	// procedure.DefaultReviewDue holds the default value on creation for the review_due field.
	procedure.DefaultReviewDue = procedureDescReviewDue.Default.(time.Time)
	// procedureDescTagSuggestions is the schema descriptor for tag_suggestions field.
	procedureDescTagSuggestions := procedureMixinFields9[10].Descriptor()
	// procedure.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	procedure.DefaultTagSuggestions = procedureDescTagSuggestions.Default.([]string)
	// procedureDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	procedureDescDismissedTagSuggestions := procedureMixinFields9[11].Descriptor()
	// procedure.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	procedure.DefaultDismissedTagSuggestions = procedureDescDismissedTagSuggestions.Default.([]string)
	// procedureDescControlSuggestions is the schema descriptor for control_suggestions field.
	procedureDescControlSuggestions := procedureMixinFields9[12].Descriptor()
	// procedure.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	procedure.DefaultControlSuggestions = procedureDescControlSuggestions.Default.([]string)
	// procedureDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	procedureDescDismissedControlSuggestions := procedureMixinFields9[13].Descriptor()
	// procedure.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	procedure.DefaultDismissedControlSuggestions = procedureDescDismissedControlSuggestions.Default.([]string)
	// procedureDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	procedureDescImprovementSuggestions := procedureMixinFields9[14].Descriptor()
	// procedure.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	procedure.DefaultImprovementSuggestions = procedureDescImprovementSuggestions.Default.([]string)
	// procedureDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	procedureDescDismissedImprovementSuggestions := procedureMixinFields9[15].Descriptor()
	// procedure.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	procedure.DefaultDismissedImprovementSuggestions = procedureDescDismissedImprovementSuggestions.Default.([]string)
	// procedureDescID is the schema descriptor for id field.
	procedureDescID := procedureMixinFields3[0].Descriptor()
	// procedure.DefaultID holds the default value on creation for the id field.
	procedure.DefaultID = procedureDescID.Default.(func() string)
	procedurehistory.Policy = privacy.NewPolicies(schema.ProcedureHistory{})
	procedurehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := procedurehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	procedurehistoryInters := schema.ProcedureHistory{}.Interceptors()
	procedurehistory.Interceptors[0] = procedurehistoryInters[0]
	procedurehistoryFields := schema.ProcedureHistory{}.Fields()
	_ = procedurehistoryFields
	// procedurehistoryDescHistoryTime is the schema descriptor for history_time field.
	procedurehistoryDescHistoryTime := procedurehistoryFields[0].Descriptor()
	// procedurehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	procedurehistory.DefaultHistoryTime = procedurehistoryDescHistoryTime.Default.(func() time.Time)
	// procedurehistoryDescCreatedAt is the schema descriptor for created_at field.
	procedurehistoryDescCreatedAt := procedurehistoryFields[3].Descriptor()
	// procedurehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	procedurehistory.DefaultCreatedAt = procedurehistoryDescCreatedAt.Default.(func() time.Time)
	// procedurehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	procedurehistoryDescUpdatedAt := procedurehistoryFields[4].Descriptor()
	// procedurehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	procedurehistory.DefaultUpdatedAt = procedurehistoryDescUpdatedAt.Default.(func() time.Time)
	// procedurehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	procedurehistory.UpdateDefaultUpdatedAt = procedurehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// procedurehistoryDescTags is the schema descriptor for tags field.
	procedurehistoryDescTags := procedurehistoryFields[11].Descriptor()
	// procedurehistory.DefaultTags holds the default value on creation for the tags field.
	procedurehistory.DefaultTags = procedurehistoryDescTags.Default.([]string)
	// procedurehistoryDescRevision is the schema descriptor for revision field.
	procedurehistoryDescRevision := procedurehistoryFields[12].Descriptor()
	// procedurehistory.DefaultRevision holds the default value on creation for the revision field.
	procedurehistory.DefaultRevision = procedurehistoryDescRevision.Default.(string)
	// procedurehistoryDescApprovalRequired is the schema descriptor for approval_required field.
	procedurehistoryDescApprovalRequired := procedurehistoryFields[18].Descriptor()
	// procedurehistory.DefaultApprovalRequired holds the default value on creation for the approval_required field.
	procedurehistory.DefaultApprovalRequired = procedurehistoryDescApprovalRequired.Default.(bool)
	// procedurehistoryDescReviewDue is the schema descriptor for review_due field.
	procedurehistoryDescReviewDue := procedurehistoryFields[19].Descriptor()
	// procedurehistory.DefaultReviewDue holds the default value on creation for the review_due field.
	procedurehistory.DefaultReviewDue = procedurehistoryDescReviewDue.Default.(time.Time)
	// procedurehistoryDescTagSuggestions is the schema descriptor for tag_suggestions field.
	procedurehistoryDescTagSuggestions := procedurehistoryFields[24].Descriptor()
	// procedurehistory.DefaultTagSuggestions holds the default value on creation for the tag_suggestions field.
	procedurehistory.DefaultTagSuggestions = procedurehistoryDescTagSuggestions.Default.([]string)
	// procedurehistoryDescDismissedTagSuggestions is the schema descriptor for dismissed_tag_suggestions field.
	procedurehistoryDescDismissedTagSuggestions := procedurehistoryFields[25].Descriptor()
	// procedurehistory.DefaultDismissedTagSuggestions holds the default value on creation for the dismissed_tag_suggestions field.
	procedurehistory.DefaultDismissedTagSuggestions = procedurehistoryDescDismissedTagSuggestions.Default.([]string)
	// procedurehistoryDescControlSuggestions is the schema descriptor for control_suggestions field.
	procedurehistoryDescControlSuggestions := procedurehistoryFields[26].Descriptor()
	// procedurehistory.DefaultControlSuggestions holds the default value on creation for the control_suggestions field.
	procedurehistory.DefaultControlSuggestions = procedurehistoryDescControlSuggestions.Default.([]string)
	// procedurehistoryDescDismissedControlSuggestions is the schema descriptor for dismissed_control_suggestions field.
	procedurehistoryDescDismissedControlSuggestions := procedurehistoryFields[27].Descriptor()
	// procedurehistory.DefaultDismissedControlSuggestions holds the default value on creation for the dismissed_control_suggestions field.
	procedurehistory.DefaultDismissedControlSuggestions = procedurehistoryDescDismissedControlSuggestions.Default.([]string)
	// procedurehistoryDescImprovementSuggestions is the schema descriptor for improvement_suggestions field.
	procedurehistoryDescImprovementSuggestions := procedurehistoryFields[28].Descriptor()
	// procedurehistory.DefaultImprovementSuggestions holds the default value on creation for the improvement_suggestions field.
	procedurehistory.DefaultImprovementSuggestions = procedurehistoryDescImprovementSuggestions.Default.([]string)
	// procedurehistoryDescDismissedImprovementSuggestions is the schema descriptor for dismissed_improvement_suggestions field.
	procedurehistoryDescDismissedImprovementSuggestions := procedurehistoryFields[29].Descriptor()
	// procedurehistory.DefaultDismissedImprovementSuggestions holds the default value on creation for the dismissed_improvement_suggestions field.
	procedurehistory.DefaultDismissedImprovementSuggestions = procedurehistoryDescDismissedImprovementSuggestions.Default.([]string)
	// procedurehistoryDescID is the schema descriptor for id field.
	procedurehistoryDescID := procedurehistoryFields[9].Descriptor()
	// procedurehistory.DefaultID holds the default value on creation for the id field.
	procedurehistory.DefaultID = procedurehistoryDescID.Default.(func() string)
	programMixin := schema.Program{}.Mixin()
	program.Policy = privacy.NewPolicies(schema.Program{})
	program.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := program.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programMixinHooks0 := programMixin[0].Hooks()
	programMixinHooks1 := programMixin[1].Hooks()
	programMixinHooks2 := programMixin[2].Hooks()
	programMixinHooks3 := programMixin[3].Hooks()
	programMixinHooks6 := programMixin[6].Hooks()
	programMixinHooks7 := programMixin[7].Hooks()
	programHooks := schema.Program{}.Hooks()

	program.Hooks[1] = programMixinHooks0[0]

	program.Hooks[2] = programMixinHooks1[0]

	program.Hooks[3] = programMixinHooks2[0]

	program.Hooks[4] = programMixinHooks3[0]

	program.Hooks[5] = programMixinHooks6[0]

	program.Hooks[6] = programMixinHooks7[0]

	program.Hooks[7] = programMixinHooks7[1]

	program.Hooks[8] = programMixinHooks7[2]

	program.Hooks[9] = programHooks[0]
	programMixinInters1 := programMixin[1].Interceptors()
	programMixinInters2 := programMixin[2].Interceptors()
	programMixinInters6 := programMixin[6].Interceptors()
	programInters := schema.Program{}.Interceptors()
	program.Interceptors[0] = programMixinInters1[0]
	program.Interceptors[1] = programMixinInters2[0]
	program.Interceptors[2] = programMixinInters6[0]
	program.Interceptors[3] = programInters[0]
	programMixinFields0 := programMixin[0].Fields()
	_ = programMixinFields0
	programMixinFields3 := programMixin[3].Fields()
	_ = programMixinFields3
	programMixinFields4 := programMixin[4].Fields()
	_ = programMixinFields4
	programMixinFields6 := programMixin[6].Fields()
	_ = programMixinFields6
	programFields := schema.Program{}.Fields()
	_ = programFields
	// programDescCreatedAt is the schema descriptor for created_at field.
	programDescCreatedAt := programMixinFields0[0].Descriptor()
	// program.DefaultCreatedAt holds the default value on creation for the created_at field.
	program.DefaultCreatedAt = programDescCreatedAt.Default.(func() time.Time)
	// programDescUpdatedAt is the schema descriptor for updated_at field.
	programDescUpdatedAt := programMixinFields0[1].Descriptor()
	// program.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	program.DefaultUpdatedAt = programDescUpdatedAt.Default.(func() time.Time)
	// program.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	program.UpdateDefaultUpdatedAt = programDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programDescDisplayID is the schema descriptor for display_id field.
	programDescDisplayID := programMixinFields3[1].Descriptor()
	// program.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	program.DisplayIDValidator = programDescDisplayID.Validators[0].(func(string) error)
	// programDescTags is the schema descriptor for tags field.
	programDescTags := programMixinFields4[0].Descriptor()
	// program.DefaultTags holds the default value on creation for the tags field.
	program.DefaultTags = programDescTags.Default.([]string)
	// programDescOwnerID is the schema descriptor for owner_id field.
	programDescOwnerID := programMixinFields6[0].Descriptor()
	// program.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	program.OwnerIDValidator = programDescOwnerID.Validators[0].(func(string) error)
	// programDescName is the schema descriptor for name field.
	programDescName := programFields[0].Descriptor()
	// program.NameValidator is a validator for the "name" field. It is called by the builders before save.
	program.NameValidator = programDescName.Validators[0].(func(string) error)
	// programDescAuditorReady is the schema descriptor for auditor_ready field.
	programDescAuditorReady := programFields[7].Descriptor()
	// program.DefaultAuditorReady holds the default value on creation for the auditor_ready field.
	program.DefaultAuditorReady = programDescAuditorReady.Default.(bool)
	// programDescAuditorWriteComments is the schema descriptor for auditor_write_comments field.
	programDescAuditorWriteComments := programFields[8].Descriptor()
	// program.DefaultAuditorWriteComments holds the default value on creation for the auditor_write_comments field.
	program.DefaultAuditorWriteComments = programDescAuditorWriteComments.Default.(bool)
	// programDescAuditorReadComments is the schema descriptor for auditor_read_comments field.
	programDescAuditorReadComments := programFields[9].Descriptor()
	// program.DefaultAuditorReadComments holds the default value on creation for the auditor_read_comments field.
	program.DefaultAuditorReadComments = programDescAuditorReadComments.Default.(bool)
	// programDescAuditorEmail is the schema descriptor for auditor_email field.
	programDescAuditorEmail := programFields[12].Descriptor()
	// program.AuditorEmailValidator is a validator for the "auditor_email" field. It is called by the builders before save.
	program.AuditorEmailValidator = programDescAuditorEmail.Validators[0].(func(string) error)
	// programDescID is the schema descriptor for id field.
	programDescID := programMixinFields3[0].Descriptor()
	// program.DefaultID holds the default value on creation for the id field.
	program.DefaultID = programDescID.Default.(func() string)
	programhistory.Policy = privacy.NewPolicies(schema.ProgramHistory{})
	programhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := programhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programhistoryInters := schema.ProgramHistory{}.Interceptors()
	programhistory.Interceptors[0] = programhistoryInters[0]
	programhistoryFields := schema.ProgramHistory{}.Fields()
	_ = programhistoryFields
	// programhistoryDescHistoryTime is the schema descriptor for history_time field.
	programhistoryDescHistoryTime := programhistoryFields[0].Descriptor()
	// programhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	programhistory.DefaultHistoryTime = programhistoryDescHistoryTime.Default.(func() time.Time)
	// programhistoryDescCreatedAt is the schema descriptor for created_at field.
	programhistoryDescCreatedAt := programhistoryFields[3].Descriptor()
	// programhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	programhistory.DefaultCreatedAt = programhistoryDescCreatedAt.Default.(func() time.Time)
	// programhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	programhistoryDescUpdatedAt := programhistoryFields[4].Descriptor()
	// programhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programhistory.DefaultUpdatedAt = programhistoryDescUpdatedAt.Default.(func() time.Time)
	// programhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programhistory.UpdateDefaultUpdatedAt = programhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programhistoryDescTags is the schema descriptor for tags field.
	programhistoryDescTags := programhistoryFields[11].Descriptor()
	// programhistory.DefaultTags holds the default value on creation for the tags field.
	programhistory.DefaultTags = programhistoryDescTags.Default.([]string)
	// programhistoryDescAuditorReady is the schema descriptor for auditor_ready field.
	programhistoryDescAuditorReady := programhistoryFields[20].Descriptor()
	// programhistory.DefaultAuditorReady holds the default value on creation for the auditor_ready field.
	programhistory.DefaultAuditorReady = programhistoryDescAuditorReady.Default.(bool)
	// programhistoryDescAuditorWriteComments is the schema descriptor for auditor_write_comments field.
	programhistoryDescAuditorWriteComments := programhistoryFields[21].Descriptor()
	// programhistory.DefaultAuditorWriteComments holds the default value on creation for the auditor_write_comments field.
	programhistory.DefaultAuditorWriteComments = programhistoryDescAuditorWriteComments.Default.(bool)
	// programhistoryDescAuditorReadComments is the schema descriptor for auditor_read_comments field.
	programhistoryDescAuditorReadComments := programhistoryFields[22].Descriptor()
	// programhistory.DefaultAuditorReadComments holds the default value on creation for the auditor_read_comments field.
	programhistory.DefaultAuditorReadComments = programhistoryDescAuditorReadComments.Default.(bool)
	// programhistoryDescID is the schema descriptor for id field.
	programhistoryDescID := programhistoryFields[9].Descriptor()
	// programhistory.DefaultID holds the default value on creation for the id field.
	programhistory.DefaultID = programhistoryDescID.Default.(func() string)
	programmembershipMixin := schema.ProgramMembership{}.Mixin()
	programmembership.Policy = privacy.NewPolicies(schema.ProgramMembership{})
	programmembership.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := programmembership.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programmembershipMixinHooks0 := programmembershipMixin[0].Hooks()
	programmembershipMixinHooks1 := programmembershipMixin[1].Hooks()
	programmembershipHooks := schema.ProgramMembership{}.Hooks()

	programmembership.Hooks[1] = programmembershipMixinHooks0[0]

	programmembership.Hooks[2] = programmembershipMixinHooks1[0]

	programmembership.Hooks[3] = programmembershipHooks[0]

	programmembership.Hooks[4] = programmembershipHooks[1]
	programmembershipMixinInters1 := programmembershipMixin[1].Interceptors()
	programmembershipInters := schema.ProgramMembership{}.Interceptors()
	programmembership.Interceptors[0] = programmembershipMixinInters1[0]
	programmembership.Interceptors[1] = programmembershipInters[0]
	programmembershipMixinFields0 := programmembershipMixin[0].Fields()
	_ = programmembershipMixinFields0
	programmembershipMixinFields2 := programmembershipMixin[2].Fields()
	_ = programmembershipMixinFields2
	programmembershipFields := schema.ProgramMembership{}.Fields()
	_ = programmembershipFields
	// programmembershipDescCreatedAt is the schema descriptor for created_at field.
	programmembershipDescCreatedAt := programmembershipMixinFields0[0].Descriptor()
	// programmembership.DefaultCreatedAt holds the default value on creation for the created_at field.
	programmembership.DefaultCreatedAt = programmembershipDescCreatedAt.Default.(func() time.Time)
	// programmembershipDescUpdatedAt is the schema descriptor for updated_at field.
	programmembershipDescUpdatedAt := programmembershipMixinFields0[1].Descriptor()
	// programmembership.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programmembership.DefaultUpdatedAt = programmembershipDescUpdatedAt.Default.(func() time.Time)
	// programmembership.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programmembership.UpdateDefaultUpdatedAt = programmembershipDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programmembershipDescID is the schema descriptor for id field.
	programmembershipDescID := programmembershipMixinFields2[0].Descriptor()
	// programmembership.DefaultID holds the default value on creation for the id field.
	programmembership.DefaultID = programmembershipDescID.Default.(func() string)
	programmembershiphistory.Policy = privacy.NewPolicies(schema.ProgramMembershipHistory{})
	programmembershiphistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := programmembershiphistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	programmembershiphistoryInters := schema.ProgramMembershipHistory{}.Interceptors()
	programmembershiphistory.Interceptors[0] = programmembershiphistoryInters[0]
	programmembershiphistoryFields := schema.ProgramMembershipHistory{}.Fields()
	_ = programmembershiphistoryFields
	// programmembershiphistoryDescHistoryTime is the schema descriptor for history_time field.
	programmembershiphistoryDescHistoryTime := programmembershiphistoryFields[0].Descriptor()
	// programmembershiphistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	programmembershiphistory.DefaultHistoryTime = programmembershiphistoryDescHistoryTime.Default.(func() time.Time)
	// programmembershiphistoryDescCreatedAt is the schema descriptor for created_at field.
	programmembershiphistoryDescCreatedAt := programmembershiphistoryFields[3].Descriptor()
	// programmembershiphistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	programmembershiphistory.DefaultCreatedAt = programmembershiphistoryDescCreatedAt.Default.(func() time.Time)
	// programmembershiphistoryDescUpdatedAt is the schema descriptor for updated_at field.
	programmembershiphistoryDescUpdatedAt := programmembershiphistoryFields[4].Descriptor()
	// programmembershiphistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	programmembershiphistory.DefaultUpdatedAt = programmembershiphistoryDescUpdatedAt.Default.(func() time.Time)
	// programmembershiphistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	programmembershiphistory.UpdateDefaultUpdatedAt = programmembershiphistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// programmembershiphistoryDescID is the schema descriptor for id field.
	programmembershiphistoryDescID := programmembershiphistoryFields[7].Descriptor()
	// programmembershiphistory.DefaultID holds the default value on creation for the id field.
	programmembershiphistory.DefaultID = programmembershiphistoryDescID.Default.(func() string)
	riskMixin := schema.Risk{}.Mixin()
	risk.Policy = privacy.NewPolicies(schema.Risk{})
	risk.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := risk.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	riskMixinHooks0 := riskMixin[0].Hooks()
	riskMixinHooks1 := riskMixin[1].Hooks()
	riskMixinHooks2 := riskMixin[2].Hooks()
	riskMixinHooks3 := riskMixin[3].Hooks()
	riskMixinHooks6 := riskMixin[6].Hooks()
	riskMixinHooks7 := riskMixin[7].Hooks()
	riskHooks := schema.Risk{}.Hooks()

	risk.Hooks[1] = riskMixinHooks0[0]

	risk.Hooks[2] = riskMixinHooks1[0]

	risk.Hooks[3] = riskMixinHooks2[0]

	risk.Hooks[4] = riskMixinHooks3[0]

	risk.Hooks[5] = riskMixinHooks6[0]

	risk.Hooks[6] = riskMixinHooks6[1]

	risk.Hooks[7] = riskMixinHooks7[0]

	risk.Hooks[8] = riskMixinHooks7[1]

	risk.Hooks[9] = riskMixinHooks7[2]

	risk.Hooks[10] = riskHooks[0]

	risk.Hooks[11] = riskHooks[1]
	riskMixinInters1 := riskMixin[1].Interceptors()
	riskMixinInters2 := riskMixin[2].Interceptors()
	riskMixinInters6 := riskMixin[6].Interceptors()
	risk.Interceptors[0] = riskMixinInters1[0]
	risk.Interceptors[1] = riskMixinInters2[0]
	risk.Interceptors[2] = riskMixinInters6[0]
	risk.Interceptors[3] = riskMixinInters6[1]
	riskMixinFields0 := riskMixin[0].Fields()
	_ = riskMixinFields0
	riskMixinFields3 := riskMixin[3].Fields()
	_ = riskMixinFields3
	riskMixinFields4 := riskMixin[4].Fields()
	_ = riskMixinFields4
	riskMixinFields6 := riskMixin[6].Fields()
	_ = riskMixinFields6
	riskFields := schema.Risk{}.Fields()
	_ = riskFields
	// riskDescCreatedAt is the schema descriptor for created_at field.
	riskDescCreatedAt := riskMixinFields0[0].Descriptor()
	// risk.DefaultCreatedAt holds the default value on creation for the created_at field.
	risk.DefaultCreatedAt = riskDescCreatedAt.Default.(func() time.Time)
	// riskDescUpdatedAt is the schema descriptor for updated_at field.
	riskDescUpdatedAt := riskMixinFields0[1].Descriptor()
	// risk.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	risk.DefaultUpdatedAt = riskDescUpdatedAt.Default.(func() time.Time)
	// risk.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	risk.UpdateDefaultUpdatedAt = riskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskDescDisplayID is the schema descriptor for display_id field.
	riskDescDisplayID := riskMixinFields3[1].Descriptor()
	// risk.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	risk.DisplayIDValidator = riskDescDisplayID.Validators[0].(func(string) error)
	// riskDescTags is the schema descriptor for tags field.
	riskDescTags := riskMixinFields4[0].Descriptor()
	// risk.DefaultTags holds the default value on creation for the tags field.
	risk.DefaultTags = riskDescTags.Default.([]string)
	// riskDescOwnerID is the schema descriptor for owner_id field.
	riskDescOwnerID := riskMixinFields6[0].Descriptor()
	// risk.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	risk.OwnerIDValidator = riskDescOwnerID.Validators[0].(func(string) error)
	// riskDescName is the schema descriptor for name field.
	riskDescName := riskFields[0].Descriptor()
	// risk.NameValidator is a validator for the "name" field. It is called by the builders before save.
	risk.NameValidator = riskDescName.Validators[0].(func(string) error)
	// riskDescID is the schema descriptor for id field.
	riskDescID := riskMixinFields3[0].Descriptor()
	// risk.DefaultID holds the default value on creation for the id field.
	risk.DefaultID = riskDescID.Default.(func() string)
	riskhistory.Policy = privacy.NewPolicies(schema.RiskHistory{})
	riskhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := riskhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	riskhistoryInters := schema.RiskHistory{}.Interceptors()
	riskhistory.Interceptors[0] = riskhistoryInters[0]
	riskhistoryFields := schema.RiskHistory{}.Fields()
	_ = riskhistoryFields
	// riskhistoryDescHistoryTime is the schema descriptor for history_time field.
	riskhistoryDescHistoryTime := riskhistoryFields[0].Descriptor()
	// riskhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	riskhistory.DefaultHistoryTime = riskhistoryDescHistoryTime.Default.(func() time.Time)
	// riskhistoryDescCreatedAt is the schema descriptor for created_at field.
	riskhistoryDescCreatedAt := riskhistoryFields[3].Descriptor()
	// riskhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	riskhistory.DefaultCreatedAt = riskhistoryDescCreatedAt.Default.(func() time.Time)
	// riskhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	riskhistoryDescUpdatedAt := riskhistoryFields[4].Descriptor()
	// riskhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	riskhistory.DefaultUpdatedAt = riskhistoryDescUpdatedAt.Default.(func() time.Time)
	// riskhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	riskhistory.UpdateDefaultUpdatedAt = riskhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// riskhistoryDescTags is the schema descriptor for tags field.
	riskhistoryDescTags := riskhistoryFields[11].Descriptor()
	// riskhistory.DefaultTags holds the default value on creation for the tags field.
	riskhistory.DefaultTags = riskhistoryDescTags.Default.([]string)
	// riskhistoryDescID is the schema descriptor for id field.
	riskhistoryDescID := riskhistoryFields[9].Descriptor()
	// riskhistory.DefaultID holds the default value on creation for the id field.
	riskhistory.DefaultID = riskhistoryDescID.Default.(func() string)
	scanMixin := schema.Scan{}.Mixin()
	scan.Policy = privacy.NewPolicies(schema.Scan{})
	scan.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := scan.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scanMixinHooks0 := scanMixin[0].Hooks()
	scanMixinHooks1 := scanMixin[1].Hooks()
	scanMixinHooks2 := scanMixin[2].Hooks()
	scanMixinHooks6 := scanMixin[6].Hooks()
	scanMixinHooks7 := scanMixin[7].Hooks()

	scan.Hooks[1] = scanMixinHooks0[0]

	scan.Hooks[2] = scanMixinHooks1[0]

	scan.Hooks[3] = scanMixinHooks2[0]

	scan.Hooks[4] = scanMixinHooks6[0]

	scan.Hooks[5] = scanMixinHooks7[0]

	scan.Hooks[6] = scanMixinHooks7[1]

	scan.Hooks[7] = scanMixinHooks7[2]
	scanMixinInters1 := scanMixin[1].Interceptors()
	scanMixinInters2 := scanMixin[2].Interceptors()
	scanMixinInters6 := scanMixin[6].Interceptors()
	scan.Interceptors[0] = scanMixinInters1[0]
	scan.Interceptors[1] = scanMixinInters2[0]
	scan.Interceptors[2] = scanMixinInters6[0]
	scanMixinFields0 := scanMixin[0].Fields()
	_ = scanMixinFields0
	scanMixinFields3 := scanMixin[3].Fields()
	_ = scanMixinFields3
	scanMixinFields4 := scanMixin[4].Fields()
	_ = scanMixinFields4
	scanMixinFields6 := scanMixin[6].Fields()
	_ = scanMixinFields6
	scanFields := schema.Scan{}.Fields()
	_ = scanFields
	// scanDescCreatedAt is the schema descriptor for created_at field.
	scanDescCreatedAt := scanMixinFields0[0].Descriptor()
	// scan.DefaultCreatedAt holds the default value on creation for the created_at field.
	scan.DefaultCreatedAt = scanDescCreatedAt.Default.(func() time.Time)
	// scanDescUpdatedAt is the schema descriptor for updated_at field.
	scanDescUpdatedAt := scanMixinFields0[1].Descriptor()
	// scan.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scan.DefaultUpdatedAt = scanDescUpdatedAt.Default.(func() time.Time)
	// scan.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	scan.UpdateDefaultUpdatedAt = scanDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scanDescTags is the schema descriptor for tags field.
	scanDescTags := scanMixinFields4[0].Descriptor()
	// scan.DefaultTags holds the default value on creation for the tags field.
	scan.DefaultTags = scanDescTags.Default.([]string)
	// scanDescOwnerID is the schema descriptor for owner_id field.
	scanDescOwnerID := scanMixinFields6[0].Descriptor()
	// scan.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	scan.OwnerIDValidator = scanDescOwnerID.Validators[0].(func(string) error)
	// scanDescTarget is the schema descriptor for target field.
	scanDescTarget := scanFields[0].Descriptor()
	// scan.TargetValidator is a validator for the "target" field. It is called by the builders before save.
	scan.TargetValidator = scanDescTarget.Validators[0].(func(string) error)
	// scanDescID is the schema descriptor for id field.
	scanDescID := scanMixinFields3[0].Descriptor()
	// scan.DefaultID holds the default value on creation for the id field.
	scan.DefaultID = scanDescID.Default.(func() string)
	scanhistory.Policy = privacy.NewPolicies(schema.ScanHistory{})
	scanhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := scanhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scanhistoryInters := schema.ScanHistory{}.Interceptors()
	scanhistory.Interceptors[0] = scanhistoryInters[0]
	scanhistoryFields := schema.ScanHistory{}.Fields()
	_ = scanhistoryFields
	// scanhistoryDescHistoryTime is the schema descriptor for history_time field.
	scanhistoryDescHistoryTime := scanhistoryFields[0].Descriptor()
	// scanhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	scanhistory.DefaultHistoryTime = scanhistoryDescHistoryTime.Default.(func() time.Time)
	// scanhistoryDescCreatedAt is the schema descriptor for created_at field.
	scanhistoryDescCreatedAt := scanhistoryFields[3].Descriptor()
	// scanhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	scanhistory.DefaultCreatedAt = scanhistoryDescCreatedAt.Default.(func() time.Time)
	// scanhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	scanhistoryDescUpdatedAt := scanhistoryFields[4].Descriptor()
	// scanhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scanhistory.DefaultUpdatedAt = scanhistoryDescUpdatedAt.Default.(func() time.Time)
	// scanhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	scanhistory.UpdateDefaultUpdatedAt = scanhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scanhistoryDescTags is the schema descriptor for tags field.
	scanhistoryDescTags := scanhistoryFields[10].Descriptor()
	// scanhistory.DefaultTags holds the default value on creation for the tags field.
	scanhistory.DefaultTags = scanhistoryDescTags.Default.([]string)
	// scanhistoryDescID is the schema descriptor for id field.
	scanhistoryDescID := scanhistoryFields[9].Descriptor()
	// scanhistory.DefaultID holds the default value on creation for the id field.
	scanhistory.DefaultID = scanhistoryDescID.Default.(func() string)
	scheduledjobMixin := schema.ScheduledJob{}.Mixin()
	scheduledjob.Policy = privacy.NewPolicies(schema.ScheduledJob{})
	scheduledjob.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := scheduledjob.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scheduledjobMixinHooks0 := scheduledjobMixin[0].Hooks()
	scheduledjobMixinHooks1 := scheduledjobMixin[1].Hooks()
	scheduledjobMixinHooks2 := scheduledjobMixin[2].Hooks()
	scheduledjobMixinHooks3 := scheduledjobMixin[3].Hooks()
	scheduledjobMixinHooks5 := scheduledjobMixin[5].Hooks()
	scheduledjobHooks := schema.ScheduledJob{}.Hooks()

	scheduledjob.Hooks[1] = scheduledjobMixinHooks0[0]

	scheduledjob.Hooks[2] = scheduledjobMixinHooks1[0]

	scheduledjob.Hooks[3] = scheduledjobMixinHooks2[0]

	scheduledjob.Hooks[4] = scheduledjobMixinHooks3[0]

	scheduledjob.Hooks[5] = scheduledjobMixinHooks5[0]

	scheduledjob.Hooks[6] = scheduledjobMixinHooks5[1]

	scheduledjob.Hooks[7] = scheduledjobHooks[0]
	scheduledjobMixinInters1 := scheduledjobMixin[1].Interceptors()
	scheduledjobMixinInters2 := scheduledjobMixin[2].Interceptors()
	scheduledjobMixinInters5 := scheduledjobMixin[5].Interceptors()
	scheduledjob.Interceptors[0] = scheduledjobMixinInters1[0]
	scheduledjob.Interceptors[1] = scheduledjobMixinInters2[0]
	scheduledjob.Interceptors[2] = scheduledjobMixinInters5[0]
	scheduledjob.Interceptors[3] = scheduledjobMixinInters5[1]
	scheduledjobMixinFields0 := scheduledjobMixin[0].Fields()
	_ = scheduledjobMixinFields0
	scheduledjobMixinFields3 := scheduledjobMixin[3].Fields()
	_ = scheduledjobMixinFields3
	scheduledjobMixinFields5 := scheduledjobMixin[5].Fields()
	_ = scheduledjobMixinFields5
	scheduledjobFields := schema.ScheduledJob{}.Fields()
	_ = scheduledjobFields
	// scheduledjobDescCreatedAt is the schema descriptor for created_at field.
	scheduledjobDescCreatedAt := scheduledjobMixinFields0[0].Descriptor()
	// scheduledjob.DefaultCreatedAt holds the default value on creation for the created_at field.
	scheduledjob.DefaultCreatedAt = scheduledjobDescCreatedAt.Default.(func() time.Time)
	// scheduledjobDescUpdatedAt is the schema descriptor for updated_at field.
	scheduledjobDescUpdatedAt := scheduledjobMixinFields0[1].Descriptor()
	// scheduledjob.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scheduledjob.DefaultUpdatedAt = scheduledjobDescUpdatedAt.Default.(func() time.Time)
	// scheduledjob.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	scheduledjob.UpdateDefaultUpdatedAt = scheduledjobDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scheduledjobDescDisplayID is the schema descriptor for display_id field.
	scheduledjobDescDisplayID := scheduledjobMixinFields3[1].Descriptor()
	// scheduledjob.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	scheduledjob.DisplayIDValidator = scheduledjobDescDisplayID.Validators[0].(func(string) error)
	// scheduledjobDescOwnerID is the schema descriptor for owner_id field.
	scheduledjobDescOwnerID := scheduledjobMixinFields5[0].Descriptor()
	// scheduledjob.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	scheduledjob.OwnerIDValidator = scheduledjobDescOwnerID.Validators[0].(func(string) error)
	// scheduledjobDescJobID is the schema descriptor for job_id field.
	scheduledjobDescJobID := scheduledjobFields[0].Descriptor()
	// scheduledjob.JobIDValidator is a validator for the "job_id" field. It is called by the builders before save.
	scheduledjob.JobIDValidator = scheduledjobDescJobID.Validators[0].(func(string) error)
	// scheduledjobDescActive is the schema descriptor for active field.
	scheduledjobDescActive := scheduledjobFields[1].Descriptor()
	// scheduledjob.DefaultActive holds the default value on creation for the active field.
	scheduledjob.DefaultActive = scheduledjobDescActive.Default.(bool)
	// scheduledjobDescCron is the schema descriptor for cron field.
	scheduledjobDescCron := scheduledjobFields[3].Descriptor()
	// scheduledjob.CronValidator is a validator for the "cron" field. It is called by the builders before save.
	scheduledjob.CronValidator = scheduledjobDescCron.Validators[0].(func(string) error)
	// scheduledjobDescID is the schema descriptor for id field.
	scheduledjobDescID := scheduledjobMixinFields3[0].Descriptor()
	// scheduledjob.DefaultID holds the default value on creation for the id field.
	scheduledjob.DefaultID = scheduledjobDescID.Default.(func() string)
	scheduledjobhistory.Policy = privacy.NewPolicies(schema.ScheduledJobHistory{})
	scheduledjobhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := scheduledjobhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scheduledjobhistoryInters := schema.ScheduledJobHistory{}.Interceptors()
	scheduledjobhistory.Interceptors[0] = scheduledjobhistoryInters[0]
	scheduledjobhistoryFields := schema.ScheduledJobHistory{}.Fields()
	_ = scheduledjobhistoryFields
	// scheduledjobhistoryDescHistoryTime is the schema descriptor for history_time field.
	scheduledjobhistoryDescHistoryTime := scheduledjobhistoryFields[0].Descriptor()
	// scheduledjobhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	scheduledjobhistory.DefaultHistoryTime = scheduledjobhistoryDescHistoryTime.Default.(func() time.Time)
	// scheduledjobhistoryDescCreatedAt is the schema descriptor for created_at field.
	scheduledjobhistoryDescCreatedAt := scheduledjobhistoryFields[3].Descriptor()
	// scheduledjobhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	scheduledjobhistory.DefaultCreatedAt = scheduledjobhistoryDescCreatedAt.Default.(func() time.Time)
	// scheduledjobhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	scheduledjobhistoryDescUpdatedAt := scheduledjobhistoryFields[4].Descriptor()
	// scheduledjobhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scheduledjobhistory.DefaultUpdatedAt = scheduledjobhistoryDescUpdatedAt.Default.(func() time.Time)
	// scheduledjobhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	scheduledjobhistory.UpdateDefaultUpdatedAt = scheduledjobhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scheduledjobhistoryDescActive is the schema descriptor for active field.
	scheduledjobhistoryDescActive := scheduledjobhistoryFields[13].Descriptor()
	// scheduledjobhistory.DefaultActive holds the default value on creation for the active field.
	scheduledjobhistory.DefaultActive = scheduledjobhistoryDescActive.Default.(bool)
	// scheduledjobhistoryDescID is the schema descriptor for id field.
	scheduledjobhistoryDescID := scheduledjobhistoryFields[9].Descriptor()
	// scheduledjobhistory.DefaultID holds the default value on creation for the id field.
	scheduledjobhistory.DefaultID = scheduledjobhistoryDescID.Default.(func() string)
	scheduledjobrunMixin := schema.ScheduledJobRun{}.Mixin()
	scheduledjobrun.Policy = privacy.NewPolicies(schema.ScheduledJobRun{})
	scheduledjobrun.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := scheduledjobrun.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	scheduledjobrunMixinHooks0 := scheduledjobrunMixin[0].Hooks()
	scheduledjobrunMixinHooks1 := scheduledjobrunMixin[1].Hooks()
	scheduledjobrunMixinHooks2 := scheduledjobrunMixin[2].Hooks()
	scheduledjobrunMixinHooks5 := scheduledjobrunMixin[5].Hooks()

	scheduledjobrun.Hooks[1] = scheduledjobrunMixinHooks0[0]

	scheduledjobrun.Hooks[2] = scheduledjobrunMixinHooks1[0]

	scheduledjobrun.Hooks[3] = scheduledjobrunMixinHooks2[0]

	scheduledjobrun.Hooks[4] = scheduledjobrunMixinHooks5[0]
	scheduledjobrunMixinInters1 := scheduledjobrunMixin[1].Interceptors()
	scheduledjobrunMixinInters2 := scheduledjobrunMixin[2].Interceptors()
	scheduledjobrunMixinInters5 := scheduledjobrunMixin[5].Interceptors()
	scheduledjobrun.Interceptors[0] = scheduledjobrunMixinInters1[0]
	scheduledjobrun.Interceptors[1] = scheduledjobrunMixinInters2[0]
	scheduledjobrun.Interceptors[2] = scheduledjobrunMixinInters5[0]
	scheduledjobrunMixinFields0 := scheduledjobrunMixin[0].Fields()
	_ = scheduledjobrunMixinFields0
	scheduledjobrunMixinFields3 := scheduledjobrunMixin[3].Fields()
	_ = scheduledjobrunMixinFields3
	scheduledjobrunMixinFields5 := scheduledjobrunMixin[5].Fields()
	_ = scheduledjobrunMixinFields5
	scheduledjobrunFields := schema.ScheduledJobRun{}.Fields()
	_ = scheduledjobrunFields
	// scheduledjobrunDescCreatedAt is the schema descriptor for created_at field.
	scheduledjobrunDescCreatedAt := scheduledjobrunMixinFields0[0].Descriptor()
	// scheduledjobrun.DefaultCreatedAt holds the default value on creation for the created_at field.
	scheduledjobrun.DefaultCreatedAt = scheduledjobrunDescCreatedAt.Default.(func() time.Time)
	// scheduledjobrunDescUpdatedAt is the schema descriptor for updated_at field.
	scheduledjobrunDescUpdatedAt := scheduledjobrunMixinFields0[1].Descriptor()
	// scheduledjobrun.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	scheduledjobrun.DefaultUpdatedAt = scheduledjobrunDescUpdatedAt.Default.(func() time.Time)
	// scheduledjobrun.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	scheduledjobrun.UpdateDefaultUpdatedAt = scheduledjobrunDescUpdatedAt.UpdateDefault.(func() time.Time)
	// scheduledjobrunDescOwnerID is the schema descriptor for owner_id field.
	scheduledjobrunDescOwnerID := scheduledjobrunMixinFields5[0].Descriptor()
	// scheduledjobrun.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	scheduledjobrun.OwnerIDValidator = scheduledjobrunDescOwnerID.Validators[0].(func(string) error)
	// scheduledjobrunDescID is the schema descriptor for id field.
	scheduledjobrunDescID := scheduledjobrunMixinFields3[0].Descriptor()
	// scheduledjobrun.DefaultID holds the default value on creation for the id field.
	scheduledjobrun.DefaultID = scheduledjobrunDescID.Default.(func() string)
	standardMixin := schema.Standard{}.Mixin()
	standard.Policy = privacy.NewPolicies(schema.Standard{})
	standard.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := standard.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	standardMixinHooks0 := standardMixin[0].Hooks()
	standardMixinHooks1 := standardMixin[1].Hooks()
	standardMixinHooks2 := standardMixin[2].Hooks()
	standardMixinHooks5 := standardMixin[5].Hooks()
	standardMixinHooks7 := standardMixin[7].Hooks()
	standardMixinHooks8 := standardMixin[8].Hooks()
	standardHooks := schema.Standard{}.Hooks()

	standard.Hooks[1] = standardMixinHooks0[0]

	standard.Hooks[2] = standardMixinHooks1[0]

	standard.Hooks[3] = standardMixinHooks2[0]

	standard.Hooks[4] = standardMixinHooks5[0]

	standard.Hooks[5] = standardMixinHooks7[0]

	standard.Hooks[6] = standardMixinHooks8[0]

	standard.Hooks[7] = standardHooks[0]

	standard.Hooks[8] = standardHooks[1]

	standard.Hooks[9] = standardHooks[2]
	standardMixinInters1 := standardMixin[1].Interceptors()
	standardMixinInters2 := standardMixin[2].Interceptors()
	standardMixinInters7 := standardMixin[7].Interceptors()
	standardInters := schema.Standard{}.Interceptors()
	standard.Interceptors[0] = standardMixinInters1[0]
	standard.Interceptors[1] = standardMixinInters2[0]
	standard.Interceptors[2] = standardMixinInters7[0]
	standard.Interceptors[3] = standardInters[0]
	standardMixinFields0 := standardMixin[0].Fields()
	_ = standardMixinFields0
	standardMixinFields3 := standardMixin[3].Fields()
	_ = standardMixinFields3
	standardMixinFields4 := standardMixin[4].Fields()
	_ = standardMixinFields4
	standardMixinFields5 := standardMixin[5].Fields()
	_ = standardMixinFields5
	standardMixinFields8 := standardMixin[8].Fields()
	_ = standardMixinFields8
	standardFields := schema.Standard{}.Fields()
	_ = standardFields
	// standardDescCreatedAt is the schema descriptor for created_at field.
	standardDescCreatedAt := standardMixinFields0[0].Descriptor()
	// standard.DefaultCreatedAt holds the default value on creation for the created_at field.
	standard.DefaultCreatedAt = standardDescCreatedAt.Default.(func() time.Time)
	// standardDescUpdatedAt is the schema descriptor for updated_at field.
	standardDescUpdatedAt := standardMixinFields0[1].Descriptor()
	// standard.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	standard.DefaultUpdatedAt = standardDescUpdatedAt.Default.(func() time.Time)
	// standard.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	standard.UpdateDefaultUpdatedAt = standardDescUpdatedAt.UpdateDefault.(func() time.Time)
	// standardDescTags is the schema descriptor for tags field.
	standardDescTags := standardMixinFields4[0].Descriptor()
	// standard.DefaultTags holds the default value on creation for the tags field.
	standard.DefaultTags = standardDescTags.Default.([]string)
	// standardDescRevision is the schema descriptor for revision field.
	standardDescRevision := standardMixinFields5[0].Descriptor()
	// standard.DefaultRevision holds the default value on creation for the revision field.
	standard.DefaultRevision = standardDescRevision.Default.(string)
	// standard.RevisionValidator is a validator for the "revision" field. It is called by the builders before save.
	standard.RevisionValidator = standardDescRevision.Validators[0].(func(string) error)
	// standardDescSystemOwned is the schema descriptor for system_owned field.
	standardDescSystemOwned := standardMixinFields8[0].Descriptor()
	// standard.DefaultSystemOwned holds the default value on creation for the system_owned field.
	standard.DefaultSystemOwned = standardDescSystemOwned.Default.(bool)
	// standardDescName is the schema descriptor for name field.
	standardDescName := standardFields[0].Descriptor()
	// standard.NameValidator is a validator for the "name" field. It is called by the builders before save.
	standard.NameValidator = standardDescName.Validators[0].(func(string) error)
	// standardDescGoverningBodyLogoURL is the schema descriptor for governing_body_logo_url field.
	standardDescGoverningBodyLogoURL := standardFields[4].Descriptor()
	// standard.GoverningBodyLogoURLValidator is a validator for the "governing_body_logo_url" field. It is called by the builders before save.
	standard.GoverningBodyLogoURLValidator = func() func(string) error {
		validators := standardDescGoverningBodyLogoURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(governing_body_logo_url string) error {
			for _, fn := range fns {
				if err := fn(governing_body_logo_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// standardDescLink is the schema descriptor for link field.
	standardDescLink := standardFields[7].Descriptor()
	// standard.LinkValidator is a validator for the "link" field. It is called by the builders before save.
	standard.LinkValidator = func() func(string) error {
		validators := standardDescLink.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(link string) error {
			for _, fn := range fns {
				if err := fn(link); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// standardDescIsPublic is the schema descriptor for is_public field.
	standardDescIsPublic := standardFields[9].Descriptor()
	// standard.DefaultIsPublic holds the default value on creation for the is_public field.
	standard.DefaultIsPublic = standardDescIsPublic.Default.(bool)
	// standardDescFreeToUse is the schema descriptor for free_to_use field.
	standardDescFreeToUse := standardFields[10].Descriptor()
	// standard.DefaultFreeToUse holds the default value on creation for the free_to_use field.
	standard.DefaultFreeToUse = standardDescFreeToUse.Default.(bool)
	// standardDescID is the schema descriptor for id field.
	standardDescID := standardMixinFields3[0].Descriptor()
	// standard.DefaultID holds the default value on creation for the id field.
	standard.DefaultID = standardDescID.Default.(func() string)
	standardhistory.Policy = privacy.NewPolicies(schema.StandardHistory{})
	standardhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := standardhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	standardhistoryInters := schema.StandardHistory{}.Interceptors()
	standardhistory.Interceptors[0] = standardhistoryInters[0]
	standardhistoryFields := schema.StandardHistory{}.Fields()
	_ = standardhistoryFields
	// standardhistoryDescHistoryTime is the schema descriptor for history_time field.
	standardhistoryDescHistoryTime := standardhistoryFields[0].Descriptor()
	// standardhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	standardhistory.DefaultHistoryTime = standardhistoryDescHistoryTime.Default.(func() time.Time)
	// standardhistoryDescCreatedAt is the schema descriptor for created_at field.
	standardhistoryDescCreatedAt := standardhistoryFields[3].Descriptor()
	// standardhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	standardhistory.DefaultCreatedAt = standardhistoryDescCreatedAt.Default.(func() time.Time)
	// standardhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	standardhistoryDescUpdatedAt := standardhistoryFields[4].Descriptor()
	// standardhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	standardhistory.DefaultUpdatedAt = standardhistoryDescUpdatedAt.Default.(func() time.Time)
	// standardhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	standardhistory.UpdateDefaultUpdatedAt = standardhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// standardhistoryDescTags is the schema descriptor for tags field.
	standardhistoryDescTags := standardhistoryFields[10].Descriptor()
	// standardhistory.DefaultTags holds the default value on creation for the tags field.
	standardhistory.DefaultTags = standardhistoryDescTags.Default.([]string)
	// standardhistoryDescRevision is the schema descriptor for revision field.
	standardhistoryDescRevision := standardhistoryFields[11].Descriptor()
	// standardhistory.DefaultRevision holds the default value on creation for the revision field.
	standardhistory.DefaultRevision = standardhistoryDescRevision.Default.(string)
	// standardhistoryDescSystemOwned is the schema descriptor for system_owned field.
	standardhistoryDescSystemOwned := standardhistoryFields[13].Descriptor()
	// standardhistory.DefaultSystemOwned holds the default value on creation for the system_owned field.
	standardhistory.DefaultSystemOwned = standardhistoryDescSystemOwned.Default.(bool)
	// standardhistoryDescIsPublic is the schema descriptor for is_public field.
	standardhistoryDescIsPublic := standardhistoryFields[23].Descriptor()
	// standardhistory.DefaultIsPublic holds the default value on creation for the is_public field.
	standardhistory.DefaultIsPublic = standardhistoryDescIsPublic.Default.(bool)
	// standardhistoryDescFreeToUse is the schema descriptor for free_to_use field.
	standardhistoryDescFreeToUse := standardhistoryFields[24].Descriptor()
	// standardhistory.DefaultFreeToUse holds the default value on creation for the free_to_use field.
	standardhistory.DefaultFreeToUse = standardhistoryDescFreeToUse.Default.(bool)
	// standardhistoryDescID is the schema descriptor for id field.
	standardhistoryDescID := standardhistoryFields[9].Descriptor()
	// standardhistory.DefaultID holds the default value on creation for the id field.
	standardhistory.DefaultID = standardhistoryDescID.Default.(func() string)
	subcontrolMixin := schema.Subcontrol{}.Mixin()
	subcontrol.Policy = privacy.NewPolicies(schema.Subcontrol{})
	subcontrol.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subcontrol.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subcontrolMixinHooks0 := subcontrolMixin[0].Hooks()
	subcontrolMixinHooks1 := subcontrolMixin[1].Hooks()
	subcontrolMixinHooks2 := subcontrolMixin[2].Hooks()
	subcontrolMixinHooks3 := subcontrolMixin[3].Hooks()
	subcontrolMixinHooks6 := subcontrolMixin[6].Hooks()
	subcontrolMixinHooks7 := subcontrolMixin[7].Hooks()
	subcontrolHooks := schema.Subcontrol{}.Hooks()

	subcontrol.Hooks[1] = subcontrolMixinHooks0[0]

	subcontrol.Hooks[2] = subcontrolMixinHooks1[0]

	subcontrol.Hooks[3] = subcontrolMixinHooks2[0]

	subcontrol.Hooks[4] = subcontrolMixinHooks3[0]

	subcontrol.Hooks[5] = subcontrolMixinHooks6[0]

	subcontrol.Hooks[6] = subcontrolMixinHooks6[1]

	subcontrol.Hooks[7] = subcontrolMixinHooks7[0]

	subcontrol.Hooks[8] = subcontrolMixinHooks7[1]

	subcontrol.Hooks[9] = subcontrolHooks[0]

	subcontrol.Hooks[10] = subcontrolHooks[1]
	subcontrolMixinInters1 := subcontrolMixin[1].Interceptors()
	subcontrolMixinInters2 := subcontrolMixin[2].Interceptors()
	subcontrolMixinInters7 := subcontrolMixin[7].Interceptors()
	subcontrol.Interceptors[0] = subcontrolMixinInters1[0]
	subcontrol.Interceptors[1] = subcontrolMixinInters2[0]
	subcontrol.Interceptors[2] = subcontrolMixinInters7[0]
	subcontrol.Interceptors[3] = subcontrolMixinInters7[1]
	subcontrolMixinFields0 := subcontrolMixin[0].Fields()
	_ = subcontrolMixinFields0
	subcontrolMixinFields3 := subcontrolMixin[3].Fields()
	_ = subcontrolMixinFields3
	subcontrolMixinFields4 := subcontrolMixin[4].Fields()
	_ = subcontrolMixinFields4
	subcontrolMixinFields6 := subcontrolMixin[6].Fields()
	_ = subcontrolMixinFields6
	subcontrolMixinFields7 := subcontrolMixin[7].Fields()
	_ = subcontrolMixinFields7
	subcontrolFields := schema.Subcontrol{}.Fields()
	_ = subcontrolFields
	// subcontrolDescCreatedAt is the schema descriptor for created_at field.
	subcontrolDescCreatedAt := subcontrolMixinFields0[0].Descriptor()
	// subcontrol.DefaultCreatedAt holds the default value on creation for the created_at field.
	subcontrol.DefaultCreatedAt = subcontrolDescCreatedAt.Default.(func() time.Time)
	// subcontrolDescUpdatedAt is the schema descriptor for updated_at field.
	subcontrolDescUpdatedAt := subcontrolMixinFields0[1].Descriptor()
	// subcontrol.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subcontrol.DefaultUpdatedAt = subcontrolDescUpdatedAt.Default.(func() time.Time)
	// subcontrol.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subcontrol.UpdateDefaultUpdatedAt = subcontrolDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subcontrolDescDisplayID is the schema descriptor for display_id field.
	subcontrolDescDisplayID := subcontrolMixinFields3[1].Descriptor()
	// subcontrol.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	subcontrol.DisplayIDValidator = subcontrolDescDisplayID.Validators[0].(func(string) error)
	// subcontrolDescTags is the schema descriptor for tags field.
	subcontrolDescTags := subcontrolMixinFields4[0].Descriptor()
	// subcontrol.DefaultTags holds the default value on creation for the tags field.
	subcontrol.DefaultTags = subcontrolDescTags.Default.([]string)
	// subcontrolDescOwnerID is the schema descriptor for owner_id field.
	subcontrolDescOwnerID := subcontrolMixinFields7[0].Descriptor()
	// subcontrol.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	subcontrol.OwnerIDValidator = subcontrolDescOwnerID.Validators[0].(func(string) error)
	// subcontrolDescRefCode is the schema descriptor for ref_code field.
	subcontrolDescRefCode := subcontrolFields[0].Descriptor()
	// subcontrol.RefCodeValidator is a validator for the "ref_code" field. It is called by the builders before save.
	subcontrol.RefCodeValidator = subcontrolDescRefCode.Validators[0].(func(string) error)
	// subcontrolDescControlID is the schema descriptor for control_id field.
	subcontrolDescControlID := subcontrolFields[1].Descriptor()
	// subcontrol.ControlIDValidator is a validator for the "control_id" field. It is called by the builders before save.
	subcontrol.ControlIDValidator = subcontrolDescControlID.Validators[0].(func(string) error)
	// subcontrolDescID is the schema descriptor for id field.
	subcontrolDescID := subcontrolMixinFields3[0].Descriptor()
	// subcontrol.DefaultID holds the default value on creation for the id field.
	subcontrol.DefaultID = subcontrolDescID.Default.(func() string)
	subcontrolhistory.Policy = privacy.NewPolicies(schema.SubcontrolHistory{})
	subcontrolhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subcontrolhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subcontrolhistoryInters := schema.SubcontrolHistory{}.Interceptors()
	subcontrolhistory.Interceptors[0] = subcontrolhistoryInters[0]
	subcontrolhistoryFields := schema.SubcontrolHistory{}.Fields()
	_ = subcontrolhistoryFields
	// subcontrolhistoryDescHistoryTime is the schema descriptor for history_time field.
	subcontrolhistoryDescHistoryTime := subcontrolhistoryFields[0].Descriptor()
	// subcontrolhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	subcontrolhistory.DefaultHistoryTime = subcontrolhistoryDescHistoryTime.Default.(func() time.Time)
	// subcontrolhistoryDescCreatedAt is the schema descriptor for created_at field.
	subcontrolhistoryDescCreatedAt := subcontrolhistoryFields[3].Descriptor()
	// subcontrolhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	subcontrolhistory.DefaultCreatedAt = subcontrolhistoryDescCreatedAt.Default.(func() time.Time)
	// subcontrolhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	subcontrolhistoryDescUpdatedAt := subcontrolhistoryFields[4].Descriptor()
	// subcontrolhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subcontrolhistory.DefaultUpdatedAt = subcontrolhistoryDescUpdatedAt.Default.(func() time.Time)
	// subcontrolhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subcontrolhistory.UpdateDefaultUpdatedAt = subcontrolhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subcontrolhistoryDescTags is the schema descriptor for tags field.
	subcontrolhistoryDescTags := subcontrolhistoryFields[11].Descriptor()
	// subcontrolhistory.DefaultTags holds the default value on creation for the tags field.
	subcontrolhistory.DefaultTags = subcontrolhistoryDescTags.Default.([]string)
	// subcontrolhistoryDescID is the schema descriptor for id field.
	subcontrolhistoryDescID := subcontrolhistoryFields[9].Descriptor()
	// subcontrolhistory.DefaultID holds the default value on creation for the id field.
	subcontrolhistory.DefaultID = subcontrolhistoryDescID.Default.(func() string)
	subprocessorMixin := schema.Subprocessor{}.Mixin()
	subprocessor.Policy = privacy.NewPolicies(schema.Subprocessor{})
	subprocessor.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subprocessor.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subprocessorMixinHooks0 := subprocessorMixin[0].Hooks()
	subprocessorMixinHooks1 := subprocessorMixin[1].Hooks()
	subprocessorMixinHooks2 := subprocessorMixin[2].Hooks()
	subprocessorMixinHooks6 := subprocessorMixin[6].Hooks()
	subprocessorMixinHooks7 := subprocessorMixin[7].Hooks()
	subprocessorHooks := schema.Subprocessor{}.Hooks()

	subprocessor.Hooks[1] = subprocessorMixinHooks0[0]

	subprocessor.Hooks[2] = subprocessorMixinHooks1[0]

	subprocessor.Hooks[3] = subprocessorMixinHooks2[0]

	subprocessor.Hooks[4] = subprocessorMixinHooks6[0]

	subprocessor.Hooks[5] = subprocessorMixinHooks7[0]

	subprocessor.Hooks[6] = subprocessorHooks[0]
	subprocessorMixinInters1 := subprocessorMixin[1].Interceptors()
	subprocessorMixinInters2 := subprocessorMixin[2].Interceptors()
	subprocessorMixinInters6 := subprocessorMixin[6].Interceptors()
	subprocessorInters := schema.Subprocessor{}.Interceptors()
	subprocessor.Interceptors[0] = subprocessorMixinInters1[0]
	subprocessor.Interceptors[1] = subprocessorMixinInters2[0]
	subprocessor.Interceptors[2] = subprocessorMixinInters6[0]
	subprocessor.Interceptors[3] = subprocessorInters[0]
	subprocessorMixinFields0 := subprocessorMixin[0].Fields()
	_ = subprocessorMixinFields0
	subprocessorMixinFields3 := subprocessorMixin[3].Fields()
	_ = subprocessorMixinFields3
	subprocessorMixinFields4 := subprocessorMixin[4].Fields()
	_ = subprocessorMixinFields4
	subprocessorMixinFields7 := subprocessorMixin[7].Fields()
	_ = subprocessorMixinFields7
	subprocessorFields := schema.Subprocessor{}.Fields()
	_ = subprocessorFields
	// subprocessorDescCreatedAt is the schema descriptor for created_at field.
	subprocessorDescCreatedAt := subprocessorMixinFields0[0].Descriptor()
	// subprocessor.DefaultCreatedAt holds the default value on creation for the created_at field.
	subprocessor.DefaultCreatedAt = subprocessorDescCreatedAt.Default.(func() time.Time)
	// subprocessorDescUpdatedAt is the schema descriptor for updated_at field.
	subprocessorDescUpdatedAt := subprocessorMixinFields0[1].Descriptor()
	// subprocessor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subprocessor.DefaultUpdatedAt = subprocessorDescUpdatedAt.Default.(func() time.Time)
	// subprocessor.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subprocessor.UpdateDefaultUpdatedAt = subprocessorDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subprocessorDescTags is the schema descriptor for tags field.
	subprocessorDescTags := subprocessorMixinFields4[0].Descriptor()
	// subprocessor.DefaultTags holds the default value on creation for the tags field.
	subprocessor.DefaultTags = subprocessorDescTags.Default.([]string)
	// subprocessorDescSystemOwned is the schema descriptor for system_owned field.
	subprocessorDescSystemOwned := subprocessorMixinFields7[0].Descriptor()
	// subprocessor.DefaultSystemOwned holds the default value on creation for the system_owned field.
	subprocessor.DefaultSystemOwned = subprocessorDescSystemOwned.Default.(bool)
	// subprocessorDescName is the schema descriptor for name field.
	subprocessorDescName := subprocessorFields[0].Descriptor()
	// subprocessor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subprocessor.NameValidator = subprocessorDescName.Validators[0].(func(string) error)
	// subprocessorDescLogoRemoteURL is the schema descriptor for logo_remote_url field.
	subprocessorDescLogoRemoteURL := subprocessorFields[2].Descriptor()
	// subprocessor.LogoRemoteURLValidator is a validator for the "logo_remote_url" field. It is called by the builders before save.
	subprocessor.LogoRemoteURLValidator = func() func(string) error {
		validators := subprocessorDescLogoRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(logo_remote_url string) error {
			for _, fn := range fns {
				if err := fn(logo_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// subprocessorDescID is the schema descriptor for id field.
	subprocessorDescID := subprocessorMixinFields3[0].Descriptor()
	// subprocessor.DefaultID holds the default value on creation for the id field.
	subprocessor.DefaultID = subprocessorDescID.Default.(func() string)
	subprocessorhistory.Policy = privacy.NewPolicies(schema.SubprocessorHistory{})
	subprocessorhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subprocessorhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subprocessorhistoryInters := schema.SubprocessorHistory{}.Interceptors()
	subprocessorhistory.Interceptors[0] = subprocessorhistoryInters[0]
	subprocessorhistoryFields := schema.SubprocessorHistory{}.Fields()
	_ = subprocessorhistoryFields
	// subprocessorhistoryDescHistoryTime is the schema descriptor for history_time field.
	subprocessorhistoryDescHistoryTime := subprocessorhistoryFields[0].Descriptor()
	// subprocessorhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	subprocessorhistory.DefaultHistoryTime = subprocessorhistoryDescHistoryTime.Default.(func() time.Time)
	// subprocessorhistoryDescCreatedAt is the schema descriptor for created_at field.
	subprocessorhistoryDescCreatedAt := subprocessorhistoryFields[3].Descriptor()
	// subprocessorhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	subprocessorhistory.DefaultCreatedAt = subprocessorhistoryDescCreatedAt.Default.(func() time.Time)
	// subprocessorhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	subprocessorhistoryDescUpdatedAt := subprocessorhistoryFields[4].Descriptor()
	// subprocessorhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subprocessorhistory.DefaultUpdatedAt = subprocessorhistoryDescUpdatedAt.Default.(func() time.Time)
	// subprocessorhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subprocessorhistory.UpdateDefaultUpdatedAt = subprocessorhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subprocessorhistoryDescTags is the schema descriptor for tags field.
	subprocessorhistoryDescTags := subprocessorhistoryFields[10].Descriptor()
	// subprocessorhistory.DefaultTags holds the default value on creation for the tags field.
	subprocessorhistory.DefaultTags = subprocessorhistoryDescTags.Default.([]string)
	// subprocessorhistoryDescSystemOwned is the schema descriptor for system_owned field.
	subprocessorhistoryDescSystemOwned := subprocessorhistoryFields[12].Descriptor()
	// subprocessorhistory.DefaultSystemOwned holds the default value on creation for the system_owned field.
	subprocessorhistory.DefaultSystemOwned = subprocessorhistoryDescSystemOwned.Default.(bool)
	// subprocessorhistoryDescID is the schema descriptor for id field.
	subprocessorhistoryDescID := subprocessorhistoryFields[9].Descriptor()
	// subprocessorhistory.DefaultID holds the default value on creation for the id field.
	subprocessorhistory.DefaultID = subprocessorhistoryDescID.Default.(func() string)
	subscriberMixin := schema.Subscriber{}.Mixin()
	subscriber.Policy = privacy.NewPolicies(schema.Subscriber{})
	subscriber.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := subscriber.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	subscriberMixinHooks0 := subscriberMixin[0].Hooks()
	subscriberMixinHooks1 := subscriberMixin[1].Hooks()
	subscriberMixinHooks2 := subscriberMixin[2].Hooks()
	subscriberMixinHooks6 := subscriberMixin[6].Hooks()
	subscriberHooks := schema.Subscriber{}.Hooks()

	subscriber.Hooks[1] = subscriberMixinHooks0[0]

	subscriber.Hooks[2] = subscriberMixinHooks1[0]

	subscriber.Hooks[3] = subscriberMixinHooks2[0]

	subscriber.Hooks[4] = subscriberMixinHooks6[0]

	subscriber.Hooks[5] = subscriberHooks[0]

	subscriber.Hooks[6] = subscriberHooks[1]
	subscriberMixinInters1 := subscriberMixin[1].Interceptors()
	subscriberMixinInters2 := subscriberMixin[2].Interceptors()
	subscriberMixinInters6 := subscriberMixin[6].Interceptors()
	subscriber.Interceptors[0] = subscriberMixinInters1[0]
	subscriber.Interceptors[1] = subscriberMixinInters2[0]
	subscriber.Interceptors[2] = subscriberMixinInters6[0]
	subscriberMixinFields0 := subscriberMixin[0].Fields()
	_ = subscriberMixinFields0
	subscriberMixinFields3 := subscriberMixin[3].Fields()
	_ = subscriberMixinFields3
	subscriberMixinFields4 := subscriberMixin[4].Fields()
	_ = subscriberMixinFields4
	subscriberFields := schema.Subscriber{}.Fields()
	_ = subscriberFields
	// subscriberDescCreatedAt is the schema descriptor for created_at field.
	subscriberDescCreatedAt := subscriberMixinFields0[0].Descriptor()
	// subscriber.DefaultCreatedAt holds the default value on creation for the created_at field.
	subscriber.DefaultCreatedAt = subscriberDescCreatedAt.Default.(func() time.Time)
	// subscriberDescUpdatedAt is the schema descriptor for updated_at field.
	subscriberDescUpdatedAt := subscriberMixinFields0[1].Descriptor()
	// subscriber.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	subscriber.DefaultUpdatedAt = subscriberDescUpdatedAt.Default.(func() time.Time)
	// subscriber.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	subscriber.UpdateDefaultUpdatedAt = subscriberDescUpdatedAt.UpdateDefault.(func() time.Time)
	// subscriberDescTags is the schema descriptor for tags field.
	subscriberDescTags := subscriberMixinFields4[0].Descriptor()
	// subscriber.DefaultTags holds the default value on creation for the tags field.
	subscriber.DefaultTags = subscriberDescTags.Default.([]string)
	// subscriberDescEmail is the schema descriptor for email field.
	subscriberDescEmail := subscriberFields[0].Descriptor()
	// subscriber.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	subscriber.EmailValidator = subscriberDescEmail.Validators[0].(func(string) error)
	// subscriberDescPhoneNumber is the schema descriptor for phone_number field.
	subscriberDescPhoneNumber := subscriberFields[1].Descriptor()
	// subscriber.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	subscriber.PhoneNumberValidator = subscriberDescPhoneNumber.Validators[0].(func(string) error)
	// subscriberDescVerifiedEmail is the schema descriptor for verified_email field.
	subscriberDescVerifiedEmail := subscriberFields[2].Descriptor()
	// subscriber.DefaultVerifiedEmail holds the default value on creation for the verified_email field.
	subscriber.DefaultVerifiedEmail = subscriberDescVerifiedEmail.Default.(bool)
	// subscriberDescVerifiedPhone is the schema descriptor for verified_phone field.
	subscriberDescVerifiedPhone := subscriberFields[3].Descriptor()
	// subscriber.DefaultVerifiedPhone holds the default value on creation for the verified_phone field.
	subscriber.DefaultVerifiedPhone = subscriberDescVerifiedPhone.Default.(bool)
	// subscriberDescActive is the schema descriptor for active field.
	subscriberDescActive := subscriberFields[4].Descriptor()
	// subscriber.DefaultActive holds the default value on creation for the active field.
	subscriber.DefaultActive = subscriberDescActive.Default.(bool)
	// subscriberDescToken is the schema descriptor for token field.
	subscriberDescToken := subscriberFields[5].Descriptor()
	// subscriber.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	subscriber.TokenValidator = subscriberDescToken.Validators[0].(func(string) error)
	// subscriberDescSecret is the schema descriptor for secret field.
	subscriberDescSecret := subscriberFields[7].Descriptor()
	// subscriber.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	subscriber.SecretValidator = subscriberDescSecret.Validators[0].(func([]byte) error)
	// subscriberDescUnsubscribed is the schema descriptor for unsubscribed field.
	subscriberDescUnsubscribed := subscriberFields[8].Descriptor()
	// subscriber.DefaultUnsubscribed holds the default value on creation for the unsubscribed field.
	subscriber.DefaultUnsubscribed = subscriberDescUnsubscribed.Default.(bool)
	// subscriberDescSendAttempts is the schema descriptor for send_attempts field.
	subscriberDescSendAttempts := subscriberFields[9].Descriptor()
	// subscriber.DefaultSendAttempts holds the default value on creation for the send_attempts field.
	subscriber.DefaultSendAttempts = subscriberDescSendAttempts.Default.(int)
	// subscriberDescID is the schema descriptor for id field.
	subscriberDescID := subscriberMixinFields3[0].Descriptor()
	// subscriber.DefaultID holds the default value on creation for the id field.
	subscriber.DefaultID = subscriberDescID.Default.(func() string)
	tfasettingMixin := schema.TFASetting{}.Mixin()
	tfasetting.Policy = privacy.NewPolicies(schema.TFASetting{})
	tfasetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tfasetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	tfasettingMixinHooks0 := tfasettingMixin[0].Hooks()
	tfasettingMixinHooks1 := tfasettingMixin[1].Hooks()
	tfasettingMixinHooks2 := tfasettingMixin[2].Hooks()
	tfasettingMixinHooks5 := tfasettingMixin[5].Hooks()
	tfasettingHooks := schema.TFASetting{}.Hooks()

	tfasetting.Hooks[1] = tfasettingMixinHooks0[0]

	tfasetting.Hooks[2] = tfasettingMixinHooks1[0]

	tfasetting.Hooks[3] = tfasettingMixinHooks2[0]

	tfasetting.Hooks[4] = tfasettingMixinHooks5[0]

	tfasetting.Hooks[5] = tfasettingHooks[0]

	tfasetting.Hooks[6] = tfasettingHooks[1]
	tfasettingMixinInters1 := tfasettingMixin[1].Interceptors()
	tfasettingMixinInters2 := tfasettingMixin[2].Interceptors()
	tfasetting.Interceptors[0] = tfasettingMixinInters1[0]
	tfasetting.Interceptors[1] = tfasettingMixinInters2[0]
	tfasettingMixinFields0 := tfasettingMixin[0].Fields()
	_ = tfasettingMixinFields0
	tfasettingMixinFields3 := tfasettingMixin[3].Fields()
	_ = tfasettingMixinFields3
	tfasettingFields := schema.TFASetting{}.Fields()
	_ = tfasettingFields
	// tfasettingDescCreatedAt is the schema descriptor for created_at field.
	tfasettingDescCreatedAt := tfasettingMixinFields0[0].Descriptor()
	// tfasetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	tfasetting.DefaultCreatedAt = tfasettingDescCreatedAt.Default.(func() time.Time)
	// tfasettingDescUpdatedAt is the schema descriptor for updated_at field.
	tfasettingDescUpdatedAt := tfasettingMixinFields0[1].Descriptor()
	// tfasetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tfasetting.DefaultUpdatedAt = tfasettingDescUpdatedAt.Default.(func() time.Time)
	// tfasetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	tfasetting.UpdateDefaultUpdatedAt = tfasettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// tfasettingDescVerified is the schema descriptor for verified field.
	tfasettingDescVerified := tfasettingFields[1].Descriptor()
	// tfasetting.DefaultVerified holds the default value on creation for the verified field.
	tfasetting.DefaultVerified = tfasettingDescVerified.Default.(bool)
	// tfasettingDescPhoneOtpAllowed is the schema descriptor for phone_otp_allowed field.
	tfasettingDescPhoneOtpAllowed := tfasettingFields[3].Descriptor()
	// tfasetting.DefaultPhoneOtpAllowed holds the default value on creation for the phone_otp_allowed field.
	tfasetting.DefaultPhoneOtpAllowed = tfasettingDescPhoneOtpAllowed.Default.(bool)
	// tfasettingDescEmailOtpAllowed is the schema descriptor for email_otp_allowed field.
	tfasettingDescEmailOtpAllowed := tfasettingFields[4].Descriptor()
	// tfasetting.DefaultEmailOtpAllowed holds the default value on creation for the email_otp_allowed field.
	tfasetting.DefaultEmailOtpAllowed = tfasettingDescEmailOtpAllowed.Default.(bool)
	// tfasettingDescTotpAllowed is the schema descriptor for totp_allowed field.
	tfasettingDescTotpAllowed := tfasettingFields[5].Descriptor()
	// tfasetting.DefaultTotpAllowed holds the default value on creation for the totp_allowed field.
	tfasetting.DefaultTotpAllowed = tfasettingDescTotpAllowed.Default.(bool)
	// tfasettingDescID is the schema descriptor for id field.
	tfasettingDescID := tfasettingMixinFields3[0].Descriptor()
	// tfasetting.DefaultID holds the default value on creation for the id field.
	tfasetting.DefaultID = tfasettingDescID.Default.(func() string)
	taskMixin := schema.Task{}.Mixin()
	task.Policy = privacy.NewPolicies(schema.Task{})
	task.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := task.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	taskMixinHooks0 := taskMixin[0].Hooks()
	taskMixinHooks1 := taskMixin[1].Hooks()
	taskMixinHooks2 := taskMixin[2].Hooks()
	taskMixinHooks3 := taskMixin[3].Hooks()
	taskMixinHooks6 := taskMixin[6].Hooks()
	taskHooks := schema.Task{}.Hooks()

	task.Hooks[1] = taskMixinHooks0[0]

	task.Hooks[2] = taskMixinHooks1[0]

	task.Hooks[3] = taskMixinHooks2[0]

	task.Hooks[4] = taskMixinHooks3[0]

	task.Hooks[5] = taskMixinHooks6[0]

	task.Hooks[6] = taskMixinHooks6[1]

	task.Hooks[7] = taskHooks[0]

	task.Hooks[8] = taskHooks[1]
	taskMixinInters1 := taskMixin[1].Interceptors()
	taskMixinInters2 := taskMixin[2].Interceptors()
	taskMixinInters6 := taskMixin[6].Interceptors()
	task.Interceptors[0] = taskMixinInters1[0]
	task.Interceptors[1] = taskMixinInters2[0]
	task.Interceptors[2] = taskMixinInters6[0]
	task.Interceptors[3] = taskMixinInters6[1]
	taskMixinFields0 := taskMixin[0].Fields()
	_ = taskMixinFields0
	taskMixinFields3 := taskMixin[3].Fields()
	_ = taskMixinFields3
	taskMixinFields4 := taskMixin[4].Fields()
	_ = taskMixinFields4
	taskMixinFields6 := taskMixin[6].Fields()
	_ = taskMixinFields6
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskMixinFields0[0].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescUpdatedAt is the schema descriptor for updated_at field.
	taskDescUpdatedAt := taskMixinFields0[1].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
	// task.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	task.UpdateDefaultUpdatedAt = taskDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskDescDisplayID is the schema descriptor for display_id field.
	taskDescDisplayID := taskMixinFields3[1].Descriptor()
	// task.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	task.DisplayIDValidator = taskDescDisplayID.Validators[0].(func(string) error)
	// taskDescTags is the schema descriptor for tags field.
	taskDescTags := taskMixinFields4[0].Descriptor()
	// task.DefaultTags holds the default value on creation for the tags field.
	task.DefaultTags = taskDescTags.Default.([]string)
	// taskDescOwnerID is the schema descriptor for owner_id field.
	taskDescOwnerID := taskMixinFields6[0].Descriptor()
	// task.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	task.OwnerIDValidator = taskDescOwnerID.Validators[0].(func(string) error)
	// taskDescTitle is the schema descriptor for title field.
	taskDescTitle := taskFields[0].Descriptor()
	// task.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	task.TitleValidator = taskDescTitle.Validators[0].(func(string) error)
	// taskDescID is the schema descriptor for id field.
	taskDescID := taskMixinFields3[0].Descriptor()
	// task.DefaultID holds the default value on creation for the id field.
	task.DefaultID = taskDescID.Default.(func() string)
	taskhistory.Policy = privacy.NewPolicies(schema.TaskHistory{})
	taskhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := taskhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	taskhistoryInters := schema.TaskHistory{}.Interceptors()
	taskhistory.Interceptors[0] = taskhistoryInters[0]
	taskhistoryFields := schema.TaskHistory{}.Fields()
	_ = taskhistoryFields
	// taskhistoryDescHistoryTime is the schema descriptor for history_time field.
	taskhistoryDescHistoryTime := taskhistoryFields[0].Descriptor()
	// taskhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	taskhistory.DefaultHistoryTime = taskhistoryDescHistoryTime.Default.(func() time.Time)
	// taskhistoryDescCreatedAt is the schema descriptor for created_at field.
	taskhistoryDescCreatedAt := taskhistoryFields[3].Descriptor()
	// taskhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	taskhistory.DefaultCreatedAt = taskhistoryDescCreatedAt.Default.(func() time.Time)
	// taskhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	taskhistoryDescUpdatedAt := taskhistoryFields[4].Descriptor()
	// taskhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	taskhistory.DefaultUpdatedAt = taskhistoryDescUpdatedAt.Default.(func() time.Time)
	// taskhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	taskhistory.UpdateDefaultUpdatedAt = taskhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// taskhistoryDescTags is the schema descriptor for tags field.
	taskhistoryDescTags := taskhistoryFields[11].Descriptor()
	// taskhistory.DefaultTags holds the default value on creation for the tags field.
	taskhistory.DefaultTags = taskhistoryDescTags.Default.([]string)
	// taskhistoryDescID is the schema descriptor for id field.
	taskhistoryDescID := taskhistoryFields[9].Descriptor()
	// taskhistory.DefaultID holds the default value on creation for the id field.
	taskhistory.DefaultID = taskhistoryDescID.Default.(func() string)
	templateMixin := schema.Template{}.Mixin()
	template.Policy = privacy.NewPolicies(schema.Template{})
	template.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := template.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	templateMixinHooks0 := templateMixin[0].Hooks()
	templateMixinHooks1 := templateMixin[1].Hooks()
	templateMixinHooks2 := templateMixin[2].Hooks()
	templateMixinHooks6 := templateMixin[6].Hooks()

	template.Hooks[1] = templateMixinHooks0[0]

	template.Hooks[2] = templateMixinHooks1[0]

	template.Hooks[3] = templateMixinHooks2[0]

	template.Hooks[4] = templateMixinHooks6[0]
	templateMixinInters1 := templateMixin[1].Interceptors()
	templateMixinInters2 := templateMixin[2].Interceptors()
	templateMixinInters6 := templateMixin[6].Interceptors()
	template.Interceptors[0] = templateMixinInters1[0]
	template.Interceptors[1] = templateMixinInters2[0]
	template.Interceptors[2] = templateMixinInters6[0]
	templateMixinFields0 := templateMixin[0].Fields()
	_ = templateMixinFields0
	templateMixinFields3 := templateMixin[3].Fields()
	_ = templateMixinFields3
	templateMixinFields4 := templateMixin[4].Fields()
	_ = templateMixinFields4
	templateMixinFields6 := templateMixin[6].Fields()
	_ = templateMixinFields6
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreatedAt is the schema descriptor for created_at field.
	templateDescCreatedAt := templateMixinFields0[0].Descriptor()
	// template.DefaultCreatedAt holds the default value on creation for the created_at field.
	template.DefaultCreatedAt = templateDescCreatedAt.Default.(func() time.Time)
	// templateDescUpdatedAt is the schema descriptor for updated_at field.
	templateDescUpdatedAt := templateMixinFields0[1].Descriptor()
	// template.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	template.DefaultUpdatedAt = templateDescUpdatedAt.Default.(func() time.Time)
	// template.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	template.UpdateDefaultUpdatedAt = templateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templateDescTags is the schema descriptor for tags field.
	templateDescTags := templateMixinFields4[0].Descriptor()
	// template.DefaultTags holds the default value on creation for the tags field.
	template.DefaultTags = templateDescTags.Default.([]string)
	// templateDescOwnerID is the schema descriptor for owner_id field.
	templateDescOwnerID := templateMixinFields6[0].Descriptor()
	// template.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	template.OwnerIDValidator = templateDescOwnerID.Validators[0].(func(string) error)
	// templateDescName is the schema descriptor for name field.
	templateDescName := templateFields[0].Descriptor()
	// template.NameValidator is a validator for the "name" field. It is called by the builders before save.
	template.NameValidator = templateDescName.Validators[0].(func(string) error)
	// templateDescID is the schema descriptor for id field.
	templateDescID := templateMixinFields3[0].Descriptor()
	// template.DefaultID holds the default value on creation for the id field.
	template.DefaultID = templateDescID.Default.(func() string)
	templatehistory.Policy = privacy.NewPolicies(schema.TemplateHistory{})
	templatehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := templatehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	templatehistoryInters := schema.TemplateHistory{}.Interceptors()
	templatehistory.Interceptors[0] = templatehistoryInters[0]
	templatehistoryFields := schema.TemplateHistory{}.Fields()
	_ = templatehistoryFields
	// templatehistoryDescHistoryTime is the schema descriptor for history_time field.
	templatehistoryDescHistoryTime := templatehistoryFields[0].Descriptor()
	// templatehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	templatehistory.DefaultHistoryTime = templatehistoryDescHistoryTime.Default.(func() time.Time)
	// templatehistoryDescCreatedAt is the schema descriptor for created_at field.
	templatehistoryDescCreatedAt := templatehistoryFields[3].Descriptor()
	// templatehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	templatehistory.DefaultCreatedAt = templatehistoryDescCreatedAt.Default.(func() time.Time)
	// templatehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	templatehistoryDescUpdatedAt := templatehistoryFields[4].Descriptor()
	// templatehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	templatehistory.DefaultUpdatedAt = templatehistoryDescUpdatedAt.Default.(func() time.Time)
	// templatehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	templatehistory.UpdateDefaultUpdatedAt = templatehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templatehistoryDescTags is the schema descriptor for tags field.
	templatehistoryDescTags := templatehistoryFields[10].Descriptor()
	// templatehistory.DefaultTags holds the default value on creation for the tags field.
	templatehistory.DefaultTags = templatehistoryDescTags.Default.([]string)
	// templatehistoryDescID is the schema descriptor for id field.
	templatehistoryDescID := templatehistoryFields[9].Descriptor()
	// templatehistory.DefaultID holds the default value on creation for the id field.
	templatehistory.DefaultID = templatehistoryDescID.Default.(func() string)
	trustcenterMixin := schema.TrustCenter{}.Mixin()
	trustcenter.Policy = privacy.NewPolicies(schema.TrustCenter{})
	trustcenter.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcenter.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcenterMixinHooks0 := trustcenterMixin[0].Hooks()
	trustcenterMixinHooks1 := trustcenterMixin[1].Hooks()
	trustcenterMixinHooks2 := trustcenterMixin[2].Hooks()
	trustcenterMixinHooks6 := trustcenterMixin[6].Hooks()
	trustcenterHooks := schema.TrustCenter{}.Hooks()

	trustcenter.Hooks[1] = trustcenterMixinHooks0[0]

	trustcenter.Hooks[2] = trustcenterMixinHooks1[0]

	trustcenter.Hooks[3] = trustcenterMixinHooks2[0]

	trustcenter.Hooks[4] = trustcenterMixinHooks6[0]

	trustcenter.Hooks[5] = trustcenterHooks[0]

	trustcenter.Hooks[6] = trustcenterHooks[1]
	trustcenterMixinInters1 := trustcenterMixin[1].Interceptors()
	trustcenterMixinInters2 := trustcenterMixin[2].Interceptors()
	trustcenterMixinInters6 := trustcenterMixin[6].Interceptors()
	trustcenterInters := schema.TrustCenter{}.Interceptors()
	trustcenter.Interceptors[0] = trustcenterMixinInters1[0]
	trustcenter.Interceptors[1] = trustcenterMixinInters2[0]
	trustcenter.Interceptors[2] = trustcenterMixinInters6[0]
	trustcenter.Interceptors[3] = trustcenterInters[0]
	trustcenterMixinFields0 := trustcenterMixin[0].Fields()
	_ = trustcenterMixinFields0
	trustcenterMixinFields3 := trustcenterMixin[3].Fields()
	_ = trustcenterMixinFields3
	trustcenterMixinFields4 := trustcenterMixin[4].Fields()
	_ = trustcenterMixinFields4
	trustcenterMixinFields6 := trustcenterMixin[6].Fields()
	_ = trustcenterMixinFields6
	trustcenterFields := schema.TrustCenter{}.Fields()
	_ = trustcenterFields
	// trustcenterDescCreatedAt is the schema descriptor for created_at field.
	trustcenterDescCreatedAt := trustcenterMixinFields0[0].Descriptor()
	// trustcenter.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcenter.DefaultCreatedAt = trustcenterDescCreatedAt.Default.(func() time.Time)
	// trustcenterDescUpdatedAt is the schema descriptor for updated_at field.
	trustcenterDescUpdatedAt := trustcenterMixinFields0[1].Descriptor()
	// trustcenter.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcenter.DefaultUpdatedAt = trustcenterDescUpdatedAt.Default.(func() time.Time)
	// trustcenter.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcenter.UpdateDefaultUpdatedAt = trustcenterDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcenterDescTags is the schema descriptor for tags field.
	trustcenterDescTags := trustcenterMixinFields4[0].Descriptor()
	// trustcenter.DefaultTags holds the default value on creation for the tags field.
	trustcenter.DefaultTags = trustcenterDescTags.Default.([]string)
	// trustcenterDescOwnerID is the schema descriptor for owner_id field.
	trustcenterDescOwnerID := trustcenterMixinFields6[0].Descriptor()
	// trustcenter.OwnerIDValidator is a validator for the "owner_id" field. It is called by the builders before save.
	trustcenter.OwnerIDValidator = trustcenterDescOwnerID.Validators[0].(func(string) error)
	// trustcenterDescSlug is the schema descriptor for slug field.
	trustcenterDescSlug := trustcenterFields[0].Descriptor()
	// trustcenter.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	trustcenter.SlugValidator = trustcenterDescSlug.Validators[0].(func(string) error)
	// trustcenterDescID is the schema descriptor for id field.
	trustcenterDescID := trustcenterMixinFields3[0].Descriptor()
	// trustcenter.DefaultID holds the default value on creation for the id field.
	trustcenter.DefaultID = trustcenterDescID.Default.(func() string)
	trustcentercomplianceMixin := schema.TrustCenterCompliance{}.Mixin()
	trustcentercompliance.Policy = privacy.NewPolicies(schema.TrustCenterCompliance{})
	trustcentercompliance.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentercompliance.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentercomplianceMixinHooks0 := trustcentercomplianceMixin[0].Hooks()
	trustcentercomplianceMixinHooks1 := trustcentercomplianceMixin[1].Hooks()
	trustcentercomplianceMixinHooks2 := trustcentercomplianceMixin[2].Hooks()

	trustcentercompliance.Hooks[1] = trustcentercomplianceMixinHooks0[0]

	trustcentercompliance.Hooks[2] = trustcentercomplianceMixinHooks1[0]

	trustcentercompliance.Hooks[3] = trustcentercomplianceMixinHooks2[0]
	trustcentercomplianceMixinInters1 := trustcentercomplianceMixin[1].Interceptors()
	trustcentercomplianceMixinInters2 := trustcentercomplianceMixin[2].Interceptors()
	trustcentercompliance.Interceptors[0] = trustcentercomplianceMixinInters1[0]
	trustcentercompliance.Interceptors[1] = trustcentercomplianceMixinInters2[0]
	trustcentercomplianceMixinFields0 := trustcentercomplianceMixin[0].Fields()
	_ = trustcentercomplianceMixinFields0
	trustcentercomplianceMixinFields3 := trustcentercomplianceMixin[3].Fields()
	_ = trustcentercomplianceMixinFields3
	trustcentercomplianceMixinFields4 := trustcentercomplianceMixin[4].Fields()
	_ = trustcentercomplianceMixinFields4
	trustcentercomplianceFields := schema.TrustCenterCompliance{}.Fields()
	_ = trustcentercomplianceFields
	// trustcentercomplianceDescCreatedAt is the schema descriptor for created_at field.
	trustcentercomplianceDescCreatedAt := trustcentercomplianceMixinFields0[0].Descriptor()
	// trustcentercompliance.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentercompliance.DefaultCreatedAt = trustcentercomplianceDescCreatedAt.Default.(func() time.Time)
	// trustcentercomplianceDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentercomplianceDescUpdatedAt := trustcentercomplianceMixinFields0[1].Descriptor()
	// trustcentercompliance.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentercompliance.DefaultUpdatedAt = trustcentercomplianceDescUpdatedAt.Default.(func() time.Time)
	// trustcentercompliance.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentercompliance.UpdateDefaultUpdatedAt = trustcentercomplianceDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentercomplianceDescTags is the schema descriptor for tags field.
	trustcentercomplianceDescTags := trustcentercomplianceMixinFields4[0].Descriptor()
	// trustcentercompliance.DefaultTags holds the default value on creation for the tags field.
	trustcentercompliance.DefaultTags = trustcentercomplianceDescTags.Default.([]string)
	// trustcentercomplianceDescID is the schema descriptor for id field.
	trustcentercomplianceDescID := trustcentercomplianceMixinFields3[0].Descriptor()
	// trustcentercompliance.DefaultID holds the default value on creation for the id field.
	trustcentercompliance.DefaultID = trustcentercomplianceDescID.Default.(func() string)
	trustcentercompliancehistory.Policy = privacy.NewPolicies(schema.TrustCenterComplianceHistory{})
	trustcentercompliancehistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentercompliancehistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentercompliancehistoryInters := schema.TrustCenterComplianceHistory{}.Interceptors()
	trustcentercompliancehistory.Interceptors[0] = trustcentercompliancehistoryInters[0]
	trustcentercompliancehistoryFields := schema.TrustCenterComplianceHistory{}.Fields()
	_ = trustcentercompliancehistoryFields
	// trustcentercompliancehistoryDescHistoryTime is the schema descriptor for history_time field.
	trustcentercompliancehistoryDescHistoryTime := trustcentercompliancehistoryFields[0].Descriptor()
	// trustcentercompliancehistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	trustcentercompliancehistory.DefaultHistoryTime = trustcentercompliancehistoryDescHistoryTime.Default.(func() time.Time)
	// trustcentercompliancehistoryDescCreatedAt is the schema descriptor for created_at field.
	trustcentercompliancehistoryDescCreatedAt := trustcentercompliancehistoryFields[3].Descriptor()
	// trustcentercompliancehistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentercompliancehistory.DefaultCreatedAt = trustcentercompliancehistoryDescCreatedAt.Default.(func() time.Time)
	// trustcentercompliancehistoryDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentercompliancehistoryDescUpdatedAt := trustcentercompliancehistoryFields[4].Descriptor()
	// trustcentercompliancehistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentercompliancehistory.DefaultUpdatedAt = trustcentercompliancehistoryDescUpdatedAt.Default.(func() time.Time)
	// trustcentercompliancehistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentercompliancehistory.UpdateDefaultUpdatedAt = trustcentercompliancehistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentercompliancehistoryDescTags is the schema descriptor for tags field.
	trustcentercompliancehistoryDescTags := trustcentercompliancehistoryFields[10].Descriptor()
	// trustcentercompliancehistory.DefaultTags holds the default value on creation for the tags field.
	trustcentercompliancehistory.DefaultTags = trustcentercompliancehistoryDescTags.Default.([]string)
	// trustcentercompliancehistoryDescID is the schema descriptor for id field.
	trustcentercompliancehistoryDescID := trustcentercompliancehistoryFields[9].Descriptor()
	// trustcentercompliancehistory.DefaultID holds the default value on creation for the id field.
	trustcentercompliancehistory.DefaultID = trustcentercompliancehistoryDescID.Default.(func() string)
	trustcenterhistory.Policy = privacy.NewPolicies(schema.TrustCenterHistory{})
	trustcenterhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcenterhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcenterhistoryInters := schema.TrustCenterHistory{}.Interceptors()
	trustcenterhistory.Interceptors[0] = trustcenterhistoryInters[0]
	trustcenterhistoryFields := schema.TrustCenterHistory{}.Fields()
	_ = trustcenterhistoryFields
	// trustcenterhistoryDescHistoryTime is the schema descriptor for history_time field.
	trustcenterhistoryDescHistoryTime := trustcenterhistoryFields[0].Descriptor()
	// trustcenterhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	trustcenterhistory.DefaultHistoryTime = trustcenterhistoryDescHistoryTime.Default.(func() time.Time)
	// trustcenterhistoryDescCreatedAt is the schema descriptor for created_at field.
	trustcenterhistoryDescCreatedAt := trustcenterhistoryFields[3].Descriptor()
	// trustcenterhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcenterhistory.DefaultCreatedAt = trustcenterhistoryDescCreatedAt.Default.(func() time.Time)
	// trustcenterhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	trustcenterhistoryDescUpdatedAt := trustcenterhistoryFields[4].Descriptor()
	// trustcenterhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcenterhistory.DefaultUpdatedAt = trustcenterhistoryDescUpdatedAt.Default.(func() time.Time)
	// trustcenterhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcenterhistory.UpdateDefaultUpdatedAt = trustcenterhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcenterhistoryDescTags is the schema descriptor for tags field.
	trustcenterhistoryDescTags := trustcenterhistoryFields[10].Descriptor()
	// trustcenterhistory.DefaultTags holds the default value on creation for the tags field.
	trustcenterhistory.DefaultTags = trustcenterhistoryDescTags.Default.([]string)
	// trustcenterhistoryDescID is the schema descriptor for id field.
	trustcenterhistoryDescID := trustcenterhistoryFields[9].Descriptor()
	// trustcenterhistory.DefaultID holds the default value on creation for the id field.
	trustcenterhistory.DefaultID = trustcenterhistoryDescID.Default.(func() string)
	trustcentersettingMixin := schema.TrustCenterSetting{}.Mixin()
	trustcentersetting.Policy = privacy.NewPolicies(schema.TrustCenterSetting{})
	trustcentersetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentersetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentersettingMixinHooks0 := trustcentersettingMixin[0].Hooks()
	trustcentersettingMixinHooks1 := trustcentersettingMixin[1].Hooks()
	trustcentersettingMixinHooks2 := trustcentersettingMixin[2].Hooks()
	trustcentersettingHooks := schema.TrustCenterSetting{}.Hooks()

	trustcentersetting.Hooks[1] = trustcentersettingMixinHooks0[0]

	trustcentersetting.Hooks[2] = trustcentersettingMixinHooks1[0]

	trustcentersetting.Hooks[3] = trustcentersettingMixinHooks2[0]

	trustcentersetting.Hooks[4] = trustcentersettingHooks[0]

	trustcentersetting.Hooks[5] = trustcentersettingHooks[1]
	trustcentersettingMixinInters1 := trustcentersettingMixin[1].Interceptors()
	trustcentersettingMixinInters2 := trustcentersettingMixin[2].Interceptors()
	trustcentersettingInters := schema.TrustCenterSetting{}.Interceptors()
	trustcentersetting.Interceptors[0] = trustcentersettingMixinInters1[0]
	trustcentersetting.Interceptors[1] = trustcentersettingMixinInters2[0]
	trustcentersetting.Interceptors[2] = trustcentersettingInters[0]
	trustcentersettingMixinFields0 := trustcentersettingMixin[0].Fields()
	_ = trustcentersettingMixinFields0
	trustcentersettingMixinFields3 := trustcentersettingMixin[3].Fields()
	_ = trustcentersettingMixinFields3
	trustcentersettingFields := schema.TrustCenterSetting{}.Fields()
	_ = trustcentersettingFields
	// trustcentersettingDescCreatedAt is the schema descriptor for created_at field.
	trustcentersettingDescCreatedAt := trustcentersettingMixinFields0[0].Descriptor()
	// trustcentersetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentersetting.DefaultCreatedAt = trustcentersettingDescCreatedAt.Default.(func() time.Time)
	// trustcentersettingDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentersettingDescUpdatedAt := trustcentersettingMixinFields0[1].Descriptor()
	// trustcentersetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentersetting.DefaultUpdatedAt = trustcentersettingDescUpdatedAt.Default.(func() time.Time)
	// trustcentersetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentersetting.UpdateDefaultUpdatedAt = trustcentersettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentersettingDescTrustCenterID is the schema descriptor for trust_center_id field.
	trustcentersettingDescTrustCenterID := trustcentersettingFields[0].Descriptor()
	// trustcentersetting.TrustCenterIDValidator is a validator for the "trust_center_id" field. It is called by the builders before save.
	trustcentersetting.TrustCenterIDValidator = trustcentersettingDescTrustCenterID.Validators[0].(func(string) error)
	// trustcentersettingDescTitle is the schema descriptor for title field.
	trustcentersettingDescTitle := trustcentersettingFields[1].Descriptor()
	// trustcentersetting.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	trustcentersetting.TitleValidator = trustcentersettingDescTitle.Validators[0].(func(string) error)
	// trustcentersettingDescOverview is the schema descriptor for overview field.
	trustcentersettingDescOverview := trustcentersettingFields[2].Descriptor()
	// trustcentersetting.OverviewValidator is a validator for the "overview" field. It is called by the builders before save.
	trustcentersetting.OverviewValidator = trustcentersettingDescOverview.Validators[0].(func(string) error)
	// trustcentersettingDescLogoRemoteURL is the schema descriptor for logo_remote_url field.
	trustcentersettingDescLogoRemoteURL := trustcentersettingFields[3].Descriptor()
	// trustcentersetting.LogoRemoteURLValidator is a validator for the "logo_remote_url" field. It is called by the builders before save.
	trustcentersetting.LogoRemoteURLValidator = func() func(string) error {
		validators := trustcentersettingDescLogoRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(logo_remote_url string) error {
			for _, fn := range fns {
				if err := fn(logo_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// trustcentersettingDescFaviconRemoteURL is the schema descriptor for favicon_remote_url field.
	trustcentersettingDescFaviconRemoteURL := trustcentersettingFields[5].Descriptor()
	// trustcentersetting.FaviconRemoteURLValidator is a validator for the "favicon_remote_url" field. It is called by the builders before save.
	trustcentersetting.FaviconRemoteURLValidator = func() func(string) error {
		validators := trustcentersettingDescFaviconRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(favicon_remote_url string) error {
			for _, fn := range fns {
				if err := fn(favicon_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// trustcentersettingDescID is the schema descriptor for id field.
	trustcentersettingDescID := trustcentersettingMixinFields3[0].Descriptor()
	// trustcentersetting.DefaultID holds the default value on creation for the id field.
	trustcentersetting.DefaultID = trustcentersettingDescID.Default.(func() string)
	trustcentersettinghistory.Policy = privacy.NewPolicies(schema.TrustCenterSettingHistory{})
	trustcentersettinghistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentersettinghistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentersettinghistoryInters := schema.TrustCenterSettingHistory{}.Interceptors()
	trustcentersettinghistory.Interceptors[0] = trustcentersettinghistoryInters[0]
	trustcentersettinghistoryFields := schema.TrustCenterSettingHistory{}.Fields()
	_ = trustcentersettinghistoryFields
	// trustcentersettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	trustcentersettinghistoryDescHistoryTime := trustcentersettinghistoryFields[0].Descriptor()
	// trustcentersettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	trustcentersettinghistory.DefaultHistoryTime = trustcentersettinghistoryDescHistoryTime.Default.(func() time.Time)
	// trustcentersettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	trustcentersettinghistoryDescCreatedAt := trustcentersettinghistoryFields[3].Descriptor()
	// trustcentersettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentersettinghistory.DefaultCreatedAt = trustcentersettinghistoryDescCreatedAt.Default.(func() time.Time)
	// trustcentersettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentersettinghistoryDescUpdatedAt := trustcentersettinghistoryFields[4].Descriptor()
	// trustcentersettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentersettinghistory.DefaultUpdatedAt = trustcentersettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// trustcentersettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentersettinghistory.UpdateDefaultUpdatedAt = trustcentersettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentersettinghistoryDescID is the schema descriptor for id field.
	trustcentersettinghistoryDescID := trustcentersettinghistoryFields[9].Descriptor()
	// trustcentersettinghistory.DefaultID holds the default value on creation for the id field.
	trustcentersettinghistory.DefaultID = trustcentersettinghistoryDescID.Default.(func() string)
	trustcentersubprocessorMixin := schema.TrustCenterSubprocessor{}.Mixin()
	trustcentersubprocessor.Policy = privacy.NewPolicies(schema.TrustCenterSubprocessor{})
	trustcentersubprocessor.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentersubprocessor.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentersubprocessorMixinHooks0 := trustcentersubprocessorMixin[0].Hooks()
	trustcentersubprocessorMixinHooks1 := trustcentersubprocessorMixin[1].Hooks()
	trustcentersubprocessorMixinHooks2 := trustcentersubprocessorMixin[2].Hooks()

	trustcentersubprocessor.Hooks[1] = trustcentersubprocessorMixinHooks0[0]

	trustcentersubprocessor.Hooks[2] = trustcentersubprocessorMixinHooks1[0]

	trustcentersubprocessor.Hooks[3] = trustcentersubprocessorMixinHooks2[0]
	trustcentersubprocessorMixinInters1 := trustcentersubprocessorMixin[1].Interceptors()
	trustcentersubprocessorMixinInters2 := trustcentersubprocessorMixin[2].Interceptors()
	trustcentersubprocessorInters := schema.TrustCenterSubprocessor{}.Interceptors()
	trustcentersubprocessor.Interceptors[0] = trustcentersubprocessorMixinInters1[0]
	trustcentersubprocessor.Interceptors[1] = trustcentersubprocessorMixinInters2[0]
	trustcentersubprocessor.Interceptors[2] = trustcentersubprocessorInters[0]
	trustcentersubprocessorMixinFields0 := trustcentersubprocessorMixin[0].Fields()
	_ = trustcentersubprocessorMixinFields0
	trustcentersubprocessorMixinFields3 := trustcentersubprocessorMixin[3].Fields()
	_ = trustcentersubprocessorMixinFields3
	trustcentersubprocessorFields := schema.TrustCenterSubprocessor{}.Fields()
	_ = trustcentersubprocessorFields
	// trustcentersubprocessorDescCreatedAt is the schema descriptor for created_at field.
	trustcentersubprocessorDescCreatedAt := trustcentersubprocessorMixinFields0[0].Descriptor()
	// trustcentersubprocessor.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentersubprocessor.DefaultCreatedAt = trustcentersubprocessorDescCreatedAt.Default.(func() time.Time)
	// trustcentersubprocessorDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentersubprocessorDescUpdatedAt := trustcentersubprocessorMixinFields0[1].Descriptor()
	// trustcentersubprocessor.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentersubprocessor.DefaultUpdatedAt = trustcentersubprocessorDescUpdatedAt.Default.(func() time.Time)
	// trustcentersubprocessor.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentersubprocessor.UpdateDefaultUpdatedAt = trustcentersubprocessorDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentersubprocessorDescSubprocessorID is the schema descriptor for subprocessor_id field.
	trustcentersubprocessorDescSubprocessorID := trustcentersubprocessorFields[0].Descriptor()
	// trustcentersubprocessor.SubprocessorIDValidator is a validator for the "subprocessor_id" field. It is called by the builders before save.
	trustcentersubprocessor.SubprocessorIDValidator = trustcentersubprocessorDescSubprocessorID.Validators[0].(func(string) error)
	// trustcentersubprocessorDescTrustCenterID is the schema descriptor for trust_center_id field.
	trustcentersubprocessorDescTrustCenterID := trustcentersubprocessorFields[1].Descriptor()
	// trustcentersubprocessor.TrustCenterIDValidator is a validator for the "trust_center_id" field. It is called by the builders before save.
	trustcentersubprocessor.TrustCenterIDValidator = trustcentersubprocessorDescTrustCenterID.Validators[0].(func(string) error)
	// trustcentersubprocessorDescCategory is the schema descriptor for category field.
	trustcentersubprocessorDescCategory := trustcentersubprocessorFields[3].Descriptor()
	// trustcentersubprocessor.CategoryValidator is a validator for the "category" field. It is called by the builders before save.
	trustcentersubprocessor.CategoryValidator = func() func(string) error {
		validators := trustcentersubprocessorDescCategory.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(category string) error {
			for _, fn := range fns {
				if err := fn(category); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// trustcentersubprocessorDescID is the schema descriptor for id field.
	trustcentersubprocessorDescID := trustcentersubprocessorMixinFields3[0].Descriptor()
	// trustcentersubprocessor.DefaultID holds the default value on creation for the id field.
	trustcentersubprocessor.DefaultID = trustcentersubprocessorDescID.Default.(func() string)
	trustcentersubprocessorhistory.Policy = privacy.NewPolicies(schema.TrustCenterSubprocessorHistory{})
	trustcentersubprocessorhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := trustcentersubprocessorhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	trustcentersubprocessorhistoryInters := schema.TrustCenterSubprocessorHistory{}.Interceptors()
	trustcentersubprocessorhistory.Interceptors[0] = trustcentersubprocessorhistoryInters[0]
	trustcentersubprocessorhistoryFields := schema.TrustCenterSubprocessorHistory{}.Fields()
	_ = trustcentersubprocessorhistoryFields
	// trustcentersubprocessorhistoryDescHistoryTime is the schema descriptor for history_time field.
	trustcentersubprocessorhistoryDescHistoryTime := trustcentersubprocessorhistoryFields[0].Descriptor()
	// trustcentersubprocessorhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	trustcentersubprocessorhistory.DefaultHistoryTime = trustcentersubprocessorhistoryDescHistoryTime.Default.(func() time.Time)
	// trustcentersubprocessorhistoryDescCreatedAt is the schema descriptor for created_at field.
	trustcentersubprocessorhistoryDescCreatedAt := trustcentersubprocessorhistoryFields[3].Descriptor()
	// trustcentersubprocessorhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	trustcentersubprocessorhistory.DefaultCreatedAt = trustcentersubprocessorhistoryDescCreatedAt.Default.(func() time.Time)
	// trustcentersubprocessorhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	trustcentersubprocessorhistoryDescUpdatedAt := trustcentersubprocessorhistoryFields[4].Descriptor()
	// trustcentersubprocessorhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	trustcentersubprocessorhistory.DefaultUpdatedAt = trustcentersubprocessorhistoryDescUpdatedAt.Default.(func() time.Time)
	// trustcentersubprocessorhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	trustcentersubprocessorhistory.UpdateDefaultUpdatedAt = trustcentersubprocessorhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// trustcentersubprocessorhistoryDescID is the schema descriptor for id field.
	trustcentersubprocessorhistoryDescID := trustcentersubprocessorhistoryFields[9].Descriptor()
	// trustcentersubprocessorhistory.DefaultID holds the default value on creation for the id field.
	trustcentersubprocessorhistory.DefaultID = trustcentersubprocessorhistoryDescID.Default.(func() string)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks0 := userMixin[0].Hooks()
	userMixinHooks1 := userMixin[1].Hooks()
	userMixinHooks2 := userMixin[2].Hooks()
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userMixinHooks0[0]

	user.Hooks[2] = userMixinHooks1[0]

	user.Hooks[3] = userMixinHooks2[0]

	user.Hooks[4] = userHooks[0]

	user.Hooks[5] = userHooks[1]

	user.Hooks[6] = userHooks[2]
	userMixinInters1 := userMixin[1].Interceptors()
	userInters := schema.User{}.Interceptors()
	user.Interceptors[0] = userMixinInters1[0]
	user.Interceptors[1] = userInters[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields2 := userMixin[2].Fields()
	_ = userMixinFields2
	userMixinFields3 := userMixin[3].Fields()
	_ = userMixinFields3
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescDisplayID is the schema descriptor for display_id field.
	userDescDisplayID := userMixinFields2[1].Descriptor()
	// user.DisplayIDValidator is a validator for the "display_id" field. It is called by the builders before save.
	user.DisplayIDValidator = userDescDisplayID.Validators[0].(func(string) error)
	// userDescTags is the schema descriptor for tags field.
	userDescTags := userMixinFields3[0].Descriptor()
	// user.DefaultTags holds the default value on creation for the tags field.
	user.DefaultTags = userDescTags.Default.([]string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[1].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[2].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescDisplayName is the schema descriptor for display_name field.
	userDescDisplayName := userFields[3].Descriptor()
	// user.DisplayNameValidator is a validator for the "display_name" field. It is called by the builders before save.
	user.DisplayNameValidator = func() func(string) error {
		validators := userDescDisplayName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(display_name string) error {
			for _, fn := range fns {
				if err := fn(display_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarRemoteURL is the schema descriptor for avatar_remote_url field.
	userDescAvatarRemoteURL := userFields[4].Descriptor()
	// user.AvatarRemoteURLValidator is a validator for the "avatar_remote_url" field. It is called by the builders before save.
	user.AvatarRemoteURLValidator = func() func(string) error {
		validators := userDescAvatarRemoteURL.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(avatar_remote_url string) error {
			for _, fn := range fns {
				if err := fn(avatar_remote_url); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userDescAvatarUpdatedAt := userFields[6].Descriptor()
	// user.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	user.DefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	user.UpdateDefaultAvatarUpdatedAt = userDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescLastSeen is the schema descriptor for last_seen field.
	userDescLastSeen := userFields[7].Descriptor()
	// user.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	user.UpdateDefaultLastSeen = userDescLastSeen.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields2[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
	userhistory.Policy = privacy.NewPolicies(schema.UserHistory{})
	userhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := userhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userhistoryInters := schema.UserHistory{}.Interceptors()
	userhistory.Interceptors[0] = userhistoryInters[0]
	userhistoryFields := schema.UserHistory{}.Fields()
	_ = userhistoryFields
	// userhistoryDescHistoryTime is the schema descriptor for history_time field.
	userhistoryDescHistoryTime := userhistoryFields[0].Descriptor()
	// userhistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	userhistory.DefaultHistoryTime = userhistoryDescHistoryTime.Default.(func() time.Time)
	// userhistoryDescCreatedAt is the schema descriptor for created_at field.
	userhistoryDescCreatedAt := userhistoryFields[3].Descriptor()
	// userhistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	userhistory.DefaultCreatedAt = userhistoryDescCreatedAt.Default.(func() time.Time)
	// userhistoryDescUpdatedAt is the schema descriptor for updated_at field.
	userhistoryDescUpdatedAt := userhistoryFields[4].Descriptor()
	// userhistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userhistory.DefaultUpdatedAt = userhistoryDescUpdatedAt.Default.(func() time.Time)
	// userhistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	userhistory.UpdateDefaultUpdatedAt = userhistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userhistoryDescTags is the schema descriptor for tags field.
	userhistoryDescTags := userhistoryFields[11].Descriptor()
	// userhistory.DefaultTags holds the default value on creation for the tags field.
	userhistory.DefaultTags = userhistoryDescTags.Default.([]string)
	// userhistoryDescAvatarUpdatedAt is the schema descriptor for avatar_updated_at field.
	userhistoryDescAvatarUpdatedAt := userhistoryFields[18].Descriptor()
	// userhistory.DefaultAvatarUpdatedAt holds the default value on creation for the avatar_updated_at field.
	userhistory.DefaultAvatarUpdatedAt = userhistoryDescAvatarUpdatedAt.Default.(func() time.Time)
	// userhistory.UpdateDefaultAvatarUpdatedAt holds the default value on update for the avatar_updated_at field.
	userhistory.UpdateDefaultAvatarUpdatedAt = userhistoryDescAvatarUpdatedAt.UpdateDefault.(func() time.Time)
	// userhistoryDescLastSeen is the schema descriptor for last_seen field.
	userhistoryDescLastSeen := userhistoryFields[19].Descriptor()
	// userhistory.UpdateDefaultLastSeen holds the default value on update for the last_seen field.
	userhistory.UpdateDefaultLastSeen = userhistoryDescLastSeen.UpdateDefault.(func() time.Time)
	// userhistoryDescID is the schema descriptor for id field.
	userhistoryDescID := userhistoryFields[9].Descriptor()
	// userhistory.DefaultID holds the default value on creation for the id field.
	userhistory.DefaultID = userhistoryDescID.Default.(func() string)
	usersettingMixin := schema.UserSetting{}.Mixin()
	usersetting.Policy = privacy.NewPolicies(schema.UserSetting{})
	usersetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usersetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usersettingMixinHooks0 := usersettingMixin[0].Hooks()
	usersettingMixinHooks1 := usersettingMixin[1].Hooks()
	usersettingMixinHooks2 := usersettingMixin[2].Hooks()
	usersettingHooks := schema.UserSetting{}.Hooks()

	usersetting.Hooks[1] = usersettingMixinHooks0[0]

	usersetting.Hooks[2] = usersettingMixinHooks1[0]

	usersetting.Hooks[3] = usersettingMixinHooks2[0]

	usersetting.Hooks[4] = usersettingHooks[0]
	usersettingMixinInters1 := usersettingMixin[1].Interceptors()
	usersettingMixinInters2 := usersettingMixin[2].Interceptors()
	usersettingInters := schema.UserSetting{}.Interceptors()
	usersetting.Interceptors[0] = usersettingMixinInters1[0]
	usersetting.Interceptors[1] = usersettingMixinInters2[0]
	usersetting.Interceptors[2] = usersettingInters[0]
	usersettingMixinFields0 := usersettingMixin[0].Fields()
	_ = usersettingMixinFields0
	usersettingMixinFields3 := usersettingMixin[3].Fields()
	_ = usersettingMixinFields3
	usersettingMixinFields4 := usersettingMixin[4].Fields()
	_ = usersettingMixinFields4
	usersettingFields := schema.UserSetting{}.Fields()
	_ = usersettingFields
	// usersettingDescCreatedAt is the schema descriptor for created_at field.
	usersettingDescCreatedAt := usersettingMixinFields0[0].Descriptor()
	// usersetting.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersetting.DefaultCreatedAt = usersettingDescCreatedAt.Default.(func() time.Time)
	// usersettingDescUpdatedAt is the schema descriptor for updated_at field.
	usersettingDescUpdatedAt := usersettingMixinFields0[1].Descriptor()
	// usersetting.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersetting.DefaultUpdatedAt = usersettingDescUpdatedAt.Default.(func() time.Time)
	// usersetting.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersetting.UpdateDefaultUpdatedAt = usersettingDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettingDescTags is the schema descriptor for tags field.
	usersettingDescTags := usersettingMixinFields4[0].Descriptor()
	// usersetting.DefaultTags holds the default value on creation for the tags field.
	usersetting.DefaultTags = usersettingDescTags.Default.([]string)
	// usersettingDescLocked is the schema descriptor for locked field.
	usersettingDescLocked := usersettingFields[1].Descriptor()
	// usersetting.DefaultLocked holds the default value on creation for the locked field.
	usersetting.DefaultLocked = usersettingDescLocked.Default.(bool)
	// usersettingDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettingDescEmailConfirmed := usersettingFields[5].Descriptor()
	// usersetting.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersetting.DefaultEmailConfirmed = usersettingDescEmailConfirmed.Default.(bool)
	// usersettingDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettingDescIsWebauthnAllowed := usersettingFields[6].Descriptor()
	// usersetting.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersetting.DefaultIsWebauthnAllowed = usersettingDescIsWebauthnAllowed.Default.(bool)
	// usersettingDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettingDescIsTfaEnabled := usersettingFields[7].Descriptor()
	// usersetting.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersetting.DefaultIsTfaEnabled = usersettingDescIsTfaEnabled.Default.(bool)
	// usersettingDescID is the schema descriptor for id field.
	usersettingDescID := usersettingMixinFields3[0].Descriptor()
	// usersetting.DefaultID holds the default value on creation for the id field.
	usersetting.DefaultID = usersettingDescID.Default.(func() string)
	usersettinghistory.Policy = privacy.NewPolicies(schema.UserSettingHistory{})
	usersettinghistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usersettinghistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usersettinghistoryInters := schema.UserSettingHistory{}.Interceptors()
	usersettinghistory.Interceptors[0] = usersettinghistoryInters[0]
	usersettinghistoryFields := schema.UserSettingHistory{}.Fields()
	_ = usersettinghistoryFields
	// usersettinghistoryDescHistoryTime is the schema descriptor for history_time field.
	usersettinghistoryDescHistoryTime := usersettinghistoryFields[0].Descriptor()
	// usersettinghistory.DefaultHistoryTime holds the default value on creation for the history_time field.
	usersettinghistory.DefaultHistoryTime = usersettinghistoryDescHistoryTime.Default.(func() time.Time)
	// usersettinghistoryDescCreatedAt is the schema descriptor for created_at field.
	usersettinghistoryDescCreatedAt := usersettinghistoryFields[3].Descriptor()
	// usersettinghistory.DefaultCreatedAt holds the default value on creation for the created_at field.
	usersettinghistory.DefaultCreatedAt = usersettinghistoryDescCreatedAt.Default.(func() time.Time)
	// usersettinghistoryDescUpdatedAt is the schema descriptor for updated_at field.
	usersettinghistoryDescUpdatedAt := usersettinghistoryFields[4].Descriptor()
	// usersettinghistory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	usersettinghistory.DefaultUpdatedAt = usersettinghistoryDescUpdatedAt.Default.(func() time.Time)
	// usersettinghistory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	usersettinghistory.UpdateDefaultUpdatedAt = usersettinghistoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// usersettinghistoryDescTags is the schema descriptor for tags field.
	usersettinghistoryDescTags := usersettinghistoryFields[10].Descriptor()
	// usersettinghistory.DefaultTags holds the default value on creation for the tags field.
	usersettinghistory.DefaultTags = usersettinghistoryDescTags.Default.([]string)
	// usersettinghistoryDescLocked is the schema descriptor for locked field.
	usersettinghistoryDescLocked := usersettinghistoryFields[12].Descriptor()
	// usersettinghistory.DefaultLocked holds the default value on creation for the locked field.
	usersettinghistory.DefaultLocked = usersettinghistoryDescLocked.Default.(bool)
	// usersettinghistoryDescEmailConfirmed is the schema descriptor for email_confirmed field.
	usersettinghistoryDescEmailConfirmed := usersettinghistoryFields[16].Descriptor()
	// usersettinghistory.DefaultEmailConfirmed holds the default value on creation for the email_confirmed field.
	usersettinghistory.DefaultEmailConfirmed = usersettinghistoryDescEmailConfirmed.Default.(bool)
	// usersettinghistoryDescIsWebauthnAllowed is the schema descriptor for is_webauthn_allowed field.
	usersettinghistoryDescIsWebauthnAllowed := usersettinghistoryFields[17].Descriptor()
	// usersettinghistory.DefaultIsWebauthnAllowed holds the default value on creation for the is_webauthn_allowed field.
	usersettinghistory.DefaultIsWebauthnAllowed = usersettinghistoryDescIsWebauthnAllowed.Default.(bool)
	// usersettinghistoryDescIsTfaEnabled is the schema descriptor for is_tfa_enabled field.
	usersettinghistoryDescIsTfaEnabled := usersettinghistoryFields[18].Descriptor()
	// usersettinghistory.DefaultIsTfaEnabled holds the default value on creation for the is_tfa_enabled field.
	usersettinghistory.DefaultIsTfaEnabled = usersettinghistoryDescIsTfaEnabled.Default.(bool)
	// usersettinghistoryDescID is the schema descriptor for id field.
	usersettinghistoryDescID := usersettinghistoryFields[9].Descriptor()
	// usersettinghistory.DefaultID holds the default value on creation for the id field.
	usersettinghistory.DefaultID = usersettinghistoryDescID.Default.(func() string)
	webauthnMixin := schema.Webauthn{}.Mixin()
	webauthnMixinHooks0 := webauthnMixin[0].Hooks()
	webauthnMixinHooks3 := webauthnMixin[3].Hooks()
	webauthnHooks := schema.Webauthn{}.Hooks()
	webauthn.Hooks[0] = webauthnMixinHooks0[0]
	webauthn.Hooks[1] = webauthnMixinHooks3[0]
	webauthn.Hooks[2] = webauthnHooks[0]
	webauthnMixinInters3 := webauthnMixin[3].Interceptors()
	webauthn.Interceptors[0] = webauthnMixinInters3[0]
	webauthnMixinFields0 := webauthnMixin[0].Fields()
	_ = webauthnMixinFields0
	webauthnMixinFields1 := webauthnMixin[1].Fields()
	_ = webauthnMixinFields1
	webauthnMixinFields2 := webauthnMixin[2].Fields()
	_ = webauthnMixinFields2
	webauthnFields := schema.Webauthn{}.Fields()
	_ = webauthnFields
	// webauthnDescCreatedAt is the schema descriptor for created_at field.
	webauthnDescCreatedAt := webauthnMixinFields0[0].Descriptor()
	// webauthn.DefaultCreatedAt holds the default value on creation for the created_at field.
	webauthn.DefaultCreatedAt = webauthnDescCreatedAt.Default.(func() time.Time)
	// webauthnDescUpdatedAt is the schema descriptor for updated_at field.
	webauthnDescUpdatedAt := webauthnMixinFields0[1].Descriptor()
	// webauthn.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	webauthn.DefaultUpdatedAt = webauthnDescUpdatedAt.Default.(func() time.Time)
	// webauthn.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	webauthn.UpdateDefaultUpdatedAt = webauthnDescUpdatedAt.UpdateDefault.(func() time.Time)
	// webauthnDescTags is the schema descriptor for tags field.
	webauthnDescTags := webauthnMixinFields2[0].Descriptor()
	// webauthn.DefaultTags holds the default value on creation for the tags field.
	webauthn.DefaultTags = webauthnDescTags.Default.([]string)
	// webauthnDescBackupEligible is the schema descriptor for backup_eligible field.
	webauthnDescBackupEligible := webauthnFields[6].Descriptor()
	// webauthn.DefaultBackupEligible holds the default value on creation for the backup_eligible field.
	webauthn.DefaultBackupEligible = webauthnDescBackupEligible.Default.(bool)
	// webauthnDescBackupState is the schema descriptor for backup_state field.
	webauthnDescBackupState := webauthnFields[7].Descriptor()
	// webauthn.DefaultBackupState holds the default value on creation for the backup_state field.
	webauthn.DefaultBackupState = webauthnDescBackupState.Default.(bool)
	// webauthnDescUserPresent is the schema descriptor for user_present field.
	webauthnDescUserPresent := webauthnFields[8].Descriptor()
	// webauthn.DefaultUserPresent holds the default value on creation for the user_present field.
	webauthn.DefaultUserPresent = webauthnDescUserPresent.Default.(bool)
	// webauthnDescUserVerified is the schema descriptor for user_verified field.
	webauthnDescUserVerified := webauthnFields[9].Descriptor()
	// webauthn.DefaultUserVerified holds the default value on creation for the user_verified field.
	webauthn.DefaultUserVerified = webauthnDescUserVerified.Default.(bool)
	// webauthnDescID is the schema descriptor for id field.
	webauthnDescID := webauthnMixinFields1[0].Descriptor()
	// webauthn.DefaultID holds the default value on creation for the id field.
	webauthn.DefaultID = webauthnDescID.Default.(func() string)
}

const (
	Version = "v0.14.4"                                         // Version of ent codegen.
	Sum     = "h1:/DhDraSLXIkBhyiVoJeSshr4ZYi7femzhj6/TckzZuI=" // Sum of ent codegen.
)
