// Code generated by ent, DO NOT EDIT.

package organizationsettinghistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// BillingContact applies equality check predicate on the "billing_contact" field. It's identical to BillingContactEQ.
func BillingContact(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingContact, v))
}

// BillingEmail applies equality check predicate on the "billing_email" field. It's identical to BillingEmailEQ.
func BillingEmail(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingPhone applies equality check predicate on the "billing_phone" field. It's identical to BillingPhoneEQ.
func BillingPhone(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingPhone, v))
}

// TaxIdentifier applies equality check predicate on the "tax_identifier" field. It's identical to TaxIdentifierEQ.
func TaxIdentifier(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldTaxIdentifier, v))
}

// OrganizationID applies equality check predicate on the "organization_id" field. It's identical to OrganizationIDEQ.
func OrganizationID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOrganizationID, v))
}

// BillingNotificationsEnabled applies equality check predicate on the "billing_notifications_enabled" field. It's identical to BillingNotificationsEnabledEQ.
func BillingNotificationsEnabled(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingNotificationsEnabled, v))
}

// IdentityProviderClientID applies equality check predicate on the "identity_provider_client_id" field. It's identical to IdentityProviderClientIDEQ.
func IdentityProviderClientID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientSecret applies equality check predicate on the "identity_provider_client_secret" field. It's identical to IdentityProviderClientSecretEQ.
func IdentityProviderClientSecret(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderMetadataEndpoint applies equality check predicate on the "identity_provider_metadata_endpoint" field. It's identical to IdentityProviderMetadataEndpointEQ.
func IdentityProviderMetadataEndpoint(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderEntityID applies equality check predicate on the "identity_provider_entity_id" field. It's identical to IdentityProviderEntityIDEQ.
func IdentityProviderEntityID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderEntityID, v))
}

// OidcDiscoveryEndpoint applies equality check predicate on the "oidc_discovery_endpoint" field. It's identical to OidcDiscoveryEndpointEQ.
func OidcDiscoveryEndpoint(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOidcDiscoveryEndpoint, v))
}

// IdentityProviderLoginEnforced applies equality check predicate on the "identity_provider_login_enforced" field. It's identical to IdentityProviderLoginEnforcedEQ.
func IdentityProviderLoginEnforced(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderLoginEnforced, v))
}

// ComplianceWebhookToken applies equality check predicate on the "compliance_webhook_token" field. It's identical to ComplianceWebhookTokenEQ.
func ComplianceWebhookToken(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldComplianceWebhookToken, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldTags))
}

// DomainsIsNil applies the IsNil predicate on the "domains" field.
func DomainsIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDomains))
}

// DomainsNotNil applies the NotNil predicate on the "domains" field.
func DomainsNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDomains))
}

// BillingContactEQ applies the EQ predicate on the "billing_contact" field.
func BillingContactEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingContact, v))
}

// BillingContactNEQ applies the NEQ predicate on the "billing_contact" field.
func BillingContactNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingContact, v))
}

// BillingContactIn applies the In predicate on the "billing_contact" field.
func BillingContactIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingContact, vs...))
}

// BillingContactNotIn applies the NotIn predicate on the "billing_contact" field.
func BillingContactNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingContact, vs...))
}

// BillingContactGT applies the GT predicate on the "billing_contact" field.
func BillingContactGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingContact, v))
}

// BillingContactGTE applies the GTE predicate on the "billing_contact" field.
func BillingContactGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingContact, v))
}

// BillingContactLT applies the LT predicate on the "billing_contact" field.
func BillingContactLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingContact, v))
}

// BillingContactLTE applies the LTE predicate on the "billing_contact" field.
func BillingContactLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingContact, v))
}

// BillingContactContains applies the Contains predicate on the "billing_contact" field.
func BillingContactContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingContact, v))
}

// BillingContactHasPrefix applies the HasPrefix predicate on the "billing_contact" field.
func BillingContactHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingContact, v))
}

// BillingContactHasSuffix applies the HasSuffix predicate on the "billing_contact" field.
func BillingContactHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingContact, v))
}

// BillingContactIsNil applies the IsNil predicate on the "billing_contact" field.
func BillingContactIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingContact))
}

// BillingContactNotNil applies the NotNil predicate on the "billing_contact" field.
func BillingContactNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingContact))
}

// BillingContactEqualFold applies the EqualFold predicate on the "billing_contact" field.
func BillingContactEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingContact, v))
}

// BillingContactContainsFold applies the ContainsFold predicate on the "billing_contact" field.
func BillingContactContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingContact, v))
}

// BillingEmailEQ applies the EQ predicate on the "billing_email" field.
func BillingEmailEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingEmailNEQ applies the NEQ predicate on the "billing_email" field.
func BillingEmailNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingEmail, v))
}

// BillingEmailIn applies the In predicate on the "billing_email" field.
func BillingEmailIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingEmail, vs...))
}

// BillingEmailNotIn applies the NotIn predicate on the "billing_email" field.
func BillingEmailNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingEmail, vs...))
}

// BillingEmailGT applies the GT predicate on the "billing_email" field.
func BillingEmailGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingEmail, v))
}

// BillingEmailGTE applies the GTE predicate on the "billing_email" field.
func BillingEmailGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingEmail, v))
}

// BillingEmailLT applies the LT predicate on the "billing_email" field.
func BillingEmailLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingEmail, v))
}

// BillingEmailLTE applies the LTE predicate on the "billing_email" field.
func BillingEmailLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingEmail, v))
}

// BillingEmailContains applies the Contains predicate on the "billing_email" field.
func BillingEmailContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingEmail, v))
}

// BillingEmailHasPrefix applies the HasPrefix predicate on the "billing_email" field.
func BillingEmailHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingEmail, v))
}

// BillingEmailHasSuffix applies the HasSuffix predicate on the "billing_email" field.
func BillingEmailHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingEmail, v))
}

// BillingEmailIsNil applies the IsNil predicate on the "billing_email" field.
func BillingEmailIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingEmail))
}

// BillingEmailNotNil applies the NotNil predicate on the "billing_email" field.
func BillingEmailNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingEmail))
}

// BillingEmailEqualFold applies the EqualFold predicate on the "billing_email" field.
func BillingEmailEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingEmail, v))
}

// BillingEmailContainsFold applies the ContainsFold predicate on the "billing_email" field.
func BillingEmailContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingEmail, v))
}

// BillingPhoneEQ applies the EQ predicate on the "billing_phone" field.
func BillingPhoneEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingPhoneNEQ applies the NEQ predicate on the "billing_phone" field.
func BillingPhoneNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingPhone, v))
}

// BillingPhoneIn applies the In predicate on the "billing_phone" field.
func BillingPhoneIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingPhone, vs...))
}

// BillingPhoneNotIn applies the NotIn predicate on the "billing_phone" field.
func BillingPhoneNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingPhone, vs...))
}

// BillingPhoneGT applies the GT predicate on the "billing_phone" field.
func BillingPhoneGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingPhone, v))
}

// BillingPhoneGTE applies the GTE predicate on the "billing_phone" field.
func BillingPhoneGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingPhone, v))
}

// BillingPhoneLT applies the LT predicate on the "billing_phone" field.
func BillingPhoneLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingPhone, v))
}

// BillingPhoneLTE applies the LTE predicate on the "billing_phone" field.
func BillingPhoneLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingPhone, v))
}

// BillingPhoneContains applies the Contains predicate on the "billing_phone" field.
func BillingPhoneContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingPhone, v))
}

// BillingPhoneHasPrefix applies the HasPrefix predicate on the "billing_phone" field.
func BillingPhoneHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingPhone, v))
}

// BillingPhoneHasSuffix applies the HasSuffix predicate on the "billing_phone" field.
func BillingPhoneHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingPhone, v))
}

// BillingPhoneIsNil applies the IsNil predicate on the "billing_phone" field.
func BillingPhoneIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingPhone))
}

// BillingPhoneNotNil applies the NotNil predicate on the "billing_phone" field.
func BillingPhoneNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingPhone))
}

// BillingPhoneEqualFold applies the EqualFold predicate on the "billing_phone" field.
func BillingPhoneEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingPhone, v))
}

// BillingPhoneContainsFold applies the ContainsFold predicate on the "billing_phone" field.
func BillingPhoneContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingPhone, v))
}

// BillingAddressIsNil applies the IsNil predicate on the "billing_address" field.
func BillingAddressIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingAddress))
}

// BillingAddressNotNil applies the NotNil predicate on the "billing_address" field.
func BillingAddressNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingAddress))
}

// TaxIdentifierEQ applies the EQ predicate on the "tax_identifier" field.
func TaxIdentifierEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierNEQ applies the NEQ predicate on the "tax_identifier" field.
func TaxIdentifierNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierIn applies the In predicate on the "tax_identifier" field.
func TaxIdentifierIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierNotIn applies the NotIn predicate on the "tax_identifier" field.
func TaxIdentifierNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierGT applies the GT predicate on the "tax_identifier" field.
func TaxIdentifierGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldTaxIdentifier, v))
}

// TaxIdentifierGTE applies the GTE predicate on the "tax_identifier" field.
func TaxIdentifierGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldTaxIdentifier, v))
}

// TaxIdentifierLT applies the LT predicate on the "tax_identifier" field.
func TaxIdentifierLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldTaxIdentifier, v))
}

// TaxIdentifierLTE applies the LTE predicate on the "tax_identifier" field.
func TaxIdentifierLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldTaxIdentifier, v))
}

// TaxIdentifierContains applies the Contains predicate on the "tax_identifier" field.
func TaxIdentifierContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldTaxIdentifier, v))
}

// TaxIdentifierHasPrefix applies the HasPrefix predicate on the "tax_identifier" field.
func TaxIdentifierHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldTaxIdentifier, v))
}

// TaxIdentifierHasSuffix applies the HasSuffix predicate on the "tax_identifier" field.
func TaxIdentifierHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldTaxIdentifier, v))
}

// TaxIdentifierIsNil applies the IsNil predicate on the "tax_identifier" field.
func TaxIdentifierIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldTaxIdentifier))
}

// TaxIdentifierNotNil applies the NotNil predicate on the "tax_identifier" field.
func TaxIdentifierNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldTaxIdentifier))
}

// TaxIdentifierEqualFold applies the EqualFold predicate on the "tax_identifier" field.
func TaxIdentifierEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldTaxIdentifier, v))
}

// TaxIdentifierContainsFold applies the ContainsFold predicate on the "tax_identifier" field.
func TaxIdentifierContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldTaxIdentifier, v))
}

// GeoLocationEQ applies the EQ predicate on the "geo_location" field.
func GeoLocationEQ(v enums.Region) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldGeoLocation, vc))
}

// GeoLocationNEQ applies the NEQ predicate on the "geo_location" field.
func GeoLocationNEQ(v enums.Region) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldGeoLocation, vc))
}

// GeoLocationIn applies the In predicate on the "geo_location" field.
func GeoLocationIn(vs ...enums.Region) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldGeoLocation, v...))
}

// GeoLocationNotIn applies the NotIn predicate on the "geo_location" field.
func GeoLocationNotIn(vs ...enums.Region) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldGeoLocation, v...))
}

// GeoLocationIsNil applies the IsNil predicate on the "geo_location" field.
func GeoLocationIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldGeoLocation))
}

// GeoLocationNotNil applies the NotNil predicate on the "geo_location" field.
func GeoLocationNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldGeoLocation))
}

// OrganizationIDEQ applies the EQ predicate on the "organization_id" field.
func OrganizationIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOrganizationID, v))
}

// OrganizationIDNEQ applies the NEQ predicate on the "organization_id" field.
func OrganizationIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldOrganizationID, v))
}

// OrganizationIDIn applies the In predicate on the "organization_id" field.
func OrganizationIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldOrganizationID, vs...))
}

// OrganizationIDNotIn applies the NotIn predicate on the "organization_id" field.
func OrganizationIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldOrganizationID, vs...))
}

// OrganizationIDGT applies the GT predicate on the "organization_id" field.
func OrganizationIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldOrganizationID, v))
}

// OrganizationIDGTE applies the GTE predicate on the "organization_id" field.
func OrganizationIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldOrganizationID, v))
}

// OrganizationIDLT applies the LT predicate on the "organization_id" field.
func OrganizationIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldOrganizationID, v))
}

// OrganizationIDLTE applies the LTE predicate on the "organization_id" field.
func OrganizationIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldOrganizationID, v))
}

// OrganizationIDContains applies the Contains predicate on the "organization_id" field.
func OrganizationIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldOrganizationID, v))
}

// OrganizationIDHasPrefix applies the HasPrefix predicate on the "organization_id" field.
func OrganizationIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldOrganizationID, v))
}

// OrganizationIDHasSuffix applies the HasSuffix predicate on the "organization_id" field.
func OrganizationIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldOrganizationID, v))
}

// OrganizationIDIsNil applies the IsNil predicate on the "organization_id" field.
func OrganizationIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldOrganizationID))
}

// OrganizationIDNotNil applies the NotNil predicate on the "organization_id" field.
func OrganizationIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldOrganizationID))
}

// OrganizationIDEqualFold applies the EqualFold predicate on the "organization_id" field.
func OrganizationIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldOrganizationID, v))
}

// OrganizationIDContainsFold applies the ContainsFold predicate on the "organization_id" field.
func OrganizationIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldOrganizationID, v))
}

// BillingNotificationsEnabledEQ applies the EQ predicate on the "billing_notifications_enabled" field.
func BillingNotificationsEnabledEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingNotificationsEnabled, v))
}

// BillingNotificationsEnabledNEQ applies the NEQ predicate on the "billing_notifications_enabled" field.
func BillingNotificationsEnabledNEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingNotificationsEnabled, v))
}

// AllowedEmailDomainsIsNil applies the IsNil predicate on the "allowed_email_domains" field.
func AllowedEmailDomainsIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldAllowedEmailDomains))
}

// AllowedEmailDomainsNotNil applies the NotNil predicate on the "allowed_email_domains" field.
func AllowedEmailDomainsNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldAllowedEmailDomains))
}

// IdentityProviderEQ applies the EQ predicate on the "identity_provider" field.
func IdentityProviderEQ(v enums.SSOProvider) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProvider, vc))
}

// IdentityProviderNEQ applies the NEQ predicate on the "identity_provider" field.
func IdentityProviderNEQ(v enums.SSOProvider) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProvider, vc))
}

// IdentityProviderIn applies the In predicate on the "identity_provider" field.
func IdentityProviderIn(vs ...enums.SSOProvider) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldIdentityProvider, v...))
}

// IdentityProviderNotIn applies the NotIn predicate on the "identity_provider" field.
func IdentityProviderNotIn(vs ...enums.SSOProvider) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldIdentityProvider, v...))
}

// IdentityProviderIsNil applies the IsNil predicate on the "identity_provider" field.
func IdentityProviderIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldIdentityProvider))
}

// IdentityProviderNotNil applies the NotNil predicate on the "identity_provider" field.
func IdentityProviderNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldIdentityProvider))
}

// IdentityProviderClientIDEQ applies the EQ predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDNEQ applies the NEQ predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDIn applies the In predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldIdentityProviderClientID, vs...))
}

// IdentityProviderClientIDNotIn applies the NotIn predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldIdentityProviderClientID, vs...))
}

// IdentityProviderClientIDGT applies the GT predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDGTE applies the GTE predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDLT applies the LT predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDLTE applies the LTE predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDContains applies the Contains predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDHasPrefix applies the HasPrefix predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDHasSuffix applies the HasSuffix predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDIsNil applies the IsNil predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldIdentityProviderClientID))
}

// IdentityProviderClientIDNotNil applies the NotNil predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldIdentityProviderClientID))
}

// IdentityProviderClientIDEqualFold applies the EqualFold predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientIDContainsFold applies the ContainsFold predicate on the "identity_provider_client_id" field.
func IdentityProviderClientIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldIdentityProviderClientID, v))
}

// IdentityProviderClientSecretEQ applies the EQ predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretNEQ applies the NEQ predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretIn applies the In predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldIdentityProviderClientSecret, vs...))
}

// IdentityProviderClientSecretNotIn applies the NotIn predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldIdentityProviderClientSecret, vs...))
}

// IdentityProviderClientSecretGT applies the GT predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretGTE applies the GTE predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretLT applies the LT predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretLTE applies the LTE predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretContains applies the Contains predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretHasPrefix applies the HasPrefix predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretHasSuffix applies the HasSuffix predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretIsNil applies the IsNil predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldIdentityProviderClientSecret))
}

// IdentityProviderClientSecretNotNil applies the NotNil predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldIdentityProviderClientSecret))
}

// IdentityProviderClientSecretEqualFold applies the EqualFold predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderClientSecretContainsFold applies the ContainsFold predicate on the "identity_provider_client_secret" field.
func IdentityProviderClientSecretContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldIdentityProviderClientSecret, v))
}

// IdentityProviderMetadataEndpointEQ applies the EQ predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointNEQ applies the NEQ predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointIn applies the In predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldIdentityProviderMetadataEndpoint, vs...))
}

// IdentityProviderMetadataEndpointNotIn applies the NotIn predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldIdentityProviderMetadataEndpoint, vs...))
}

// IdentityProviderMetadataEndpointGT applies the GT predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointGTE applies the GTE predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointLT applies the LT predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointLTE applies the LTE predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointContains applies the Contains predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointHasPrefix applies the HasPrefix predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointHasSuffix applies the HasSuffix predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointIsNil applies the IsNil predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldIdentityProviderMetadataEndpoint))
}

// IdentityProviderMetadataEndpointNotNil applies the NotNil predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldIdentityProviderMetadataEndpoint))
}

// IdentityProviderMetadataEndpointEqualFold applies the EqualFold predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderMetadataEndpointContainsFold applies the ContainsFold predicate on the "identity_provider_metadata_endpoint" field.
func IdentityProviderMetadataEndpointContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldIdentityProviderMetadataEndpoint, v))
}

// IdentityProviderEntityIDEQ applies the EQ predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDNEQ applies the NEQ predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDIn applies the In predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldIdentityProviderEntityID, vs...))
}

// IdentityProviderEntityIDNotIn applies the NotIn predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldIdentityProviderEntityID, vs...))
}

// IdentityProviderEntityIDGT applies the GT predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDGTE applies the GTE predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDLT applies the LT predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDLTE applies the LTE predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDContains applies the Contains predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDHasPrefix applies the HasPrefix predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDHasSuffix applies the HasSuffix predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDIsNil applies the IsNil predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldIdentityProviderEntityID))
}

// IdentityProviderEntityIDNotNil applies the NotNil predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldIdentityProviderEntityID))
}

// IdentityProviderEntityIDEqualFold applies the EqualFold predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldIdentityProviderEntityID, v))
}

// IdentityProviderEntityIDContainsFold applies the ContainsFold predicate on the "identity_provider_entity_id" field.
func IdentityProviderEntityIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldIdentityProviderEntityID, v))
}

// OidcDiscoveryEndpointEQ applies the EQ predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointNEQ applies the NEQ predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointIn applies the In predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldOidcDiscoveryEndpoint, vs...))
}

// OidcDiscoveryEndpointNotIn applies the NotIn predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldOidcDiscoveryEndpoint, vs...))
}

// OidcDiscoveryEndpointGT applies the GT predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointGTE applies the GTE predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointLT applies the LT predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointLTE applies the LTE predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointContains applies the Contains predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointHasPrefix applies the HasPrefix predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointHasSuffix applies the HasSuffix predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointIsNil applies the IsNil predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldOidcDiscoveryEndpoint))
}

// OidcDiscoveryEndpointNotNil applies the NotNil predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldOidcDiscoveryEndpoint))
}

// OidcDiscoveryEndpointEqualFold applies the EqualFold predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldOidcDiscoveryEndpoint, v))
}

// OidcDiscoveryEndpointContainsFold applies the ContainsFold predicate on the "oidc_discovery_endpoint" field.
func OidcDiscoveryEndpointContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldOidcDiscoveryEndpoint, v))
}

// IdentityProviderLoginEnforcedEQ applies the EQ predicate on the "identity_provider_login_enforced" field.
func IdentityProviderLoginEnforcedEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldIdentityProviderLoginEnforced, v))
}

// IdentityProviderLoginEnforcedNEQ applies the NEQ predicate on the "identity_provider_login_enforced" field.
func IdentityProviderLoginEnforcedNEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldIdentityProviderLoginEnforced, v))
}

// ComplianceWebhookTokenEQ applies the EQ predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenNEQ applies the NEQ predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenIn applies the In predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldComplianceWebhookToken, vs...))
}

// ComplianceWebhookTokenNotIn applies the NotIn predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldComplianceWebhookToken, vs...))
}

// ComplianceWebhookTokenGT applies the GT predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenGTE applies the GTE predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenLT applies the LT predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenLTE applies the LTE predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenContains applies the Contains predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenHasPrefix applies the HasPrefix predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenHasSuffix applies the HasSuffix predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenEqualFold applies the EqualFold predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldComplianceWebhookToken, v))
}

// ComplianceWebhookTokenContainsFold applies the ContainsFold predicate on the "compliance_webhook_token" field.
func ComplianceWebhookTokenContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldComplianceWebhookToken, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.NotPredicates(p))
}
