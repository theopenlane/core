// Code generated by ent, DO NOT EDIT.

package organizationsettinghistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldRef, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedByID applies equality check predicate on the "created_by_id" field. It's identical to CreatedByIDEQ.
func CreatedByID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedByID, v))
}

// UpdatedByID applies equality check predicate on the "updated_by_id" field. It's identical to UpdatedByIDEQ.
func UpdatedByID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedByID, v))
}

// MappingID applies equality check predicate on the "mapping_id" field. It's identical to MappingIDEQ.
func MappingID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldMappingID, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedByID applies equality check predicate on the "deleted_by_id" field. It's identical to DeletedByIDEQ.
func DeletedByID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedByID, v))
}

// BillingContact applies equality check predicate on the "billing_contact" field. It's identical to BillingContactEQ.
func BillingContact(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingContact, v))
}

// BillingEmail applies equality check predicate on the "billing_email" field. It's identical to BillingEmailEQ.
func BillingEmail(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingPhone applies equality check predicate on the "billing_phone" field. It's identical to BillingPhoneEQ.
func BillingPhone(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingPhone, v))
}

// TaxIdentifier applies equality check predicate on the "tax_identifier" field. It's identical to TaxIdentifierEQ.
func TaxIdentifier(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldTaxIdentifier, v))
}

// OrganizationID applies equality check predicate on the "organization_id" field. It's identical to OrganizationIDEQ.
func OrganizationID(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOrganizationID, v))
}

// BillingNotificationsEnabled applies equality check predicate on the "billing_notifications_enabled" field. It's identical to BillingNotificationsEnabledEQ.
func BillingNotificationsEnabled(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingNotificationsEnabled, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByIDEQ applies the EQ predicate on the "created_by_id" field.
func CreatedByIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldCreatedByID, v))
}

// CreatedByIDNEQ applies the NEQ predicate on the "created_by_id" field.
func CreatedByIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldCreatedByID, v))
}

// CreatedByIDIn applies the In predicate on the "created_by_id" field.
func CreatedByIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldCreatedByID, vs...))
}

// CreatedByIDNotIn applies the NotIn predicate on the "created_by_id" field.
func CreatedByIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldCreatedByID, vs...))
}

// CreatedByIDGT applies the GT predicate on the "created_by_id" field.
func CreatedByIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldCreatedByID, v))
}

// CreatedByIDGTE applies the GTE predicate on the "created_by_id" field.
func CreatedByIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldCreatedByID, v))
}

// CreatedByIDLT applies the LT predicate on the "created_by_id" field.
func CreatedByIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldCreatedByID, v))
}

// CreatedByIDLTE applies the LTE predicate on the "created_by_id" field.
func CreatedByIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldCreatedByID, v))
}

// CreatedByIDContains applies the Contains predicate on the "created_by_id" field.
func CreatedByIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldCreatedByID, v))
}

// CreatedByIDHasPrefix applies the HasPrefix predicate on the "created_by_id" field.
func CreatedByIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldCreatedByID, v))
}

// CreatedByIDHasSuffix applies the HasSuffix predicate on the "created_by_id" field.
func CreatedByIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldCreatedByID, v))
}

// CreatedByIDIsNil applies the IsNil predicate on the "created_by_id" field.
func CreatedByIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldCreatedByID))
}

// CreatedByIDNotNil applies the NotNil predicate on the "created_by_id" field.
func CreatedByIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldCreatedByID))
}

// CreatedByIDEqualFold applies the EqualFold predicate on the "created_by_id" field.
func CreatedByIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldCreatedByID, v))
}

// CreatedByIDContainsFold applies the ContainsFold predicate on the "created_by_id" field.
func CreatedByIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldCreatedByID, v))
}

// UpdatedByIDEQ applies the EQ predicate on the "updated_by_id" field.
func UpdatedByIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldUpdatedByID, v))
}

// UpdatedByIDNEQ applies the NEQ predicate on the "updated_by_id" field.
func UpdatedByIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldUpdatedByID, v))
}

// UpdatedByIDIn applies the In predicate on the "updated_by_id" field.
func UpdatedByIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDNotIn applies the NotIn predicate on the "updated_by_id" field.
func UpdatedByIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldUpdatedByID, vs...))
}

// UpdatedByIDGT applies the GT predicate on the "updated_by_id" field.
func UpdatedByIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldUpdatedByID, v))
}

// UpdatedByIDGTE applies the GTE predicate on the "updated_by_id" field.
func UpdatedByIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldUpdatedByID, v))
}

// UpdatedByIDLT applies the LT predicate on the "updated_by_id" field.
func UpdatedByIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldUpdatedByID, v))
}

// UpdatedByIDLTE applies the LTE predicate on the "updated_by_id" field.
func UpdatedByIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldUpdatedByID, v))
}

// UpdatedByIDContains applies the Contains predicate on the "updated_by_id" field.
func UpdatedByIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldUpdatedByID, v))
}

// UpdatedByIDHasPrefix applies the HasPrefix predicate on the "updated_by_id" field.
func UpdatedByIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldUpdatedByID, v))
}

// UpdatedByIDHasSuffix applies the HasSuffix predicate on the "updated_by_id" field.
func UpdatedByIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldUpdatedByID, v))
}

// UpdatedByIDIsNil applies the IsNil predicate on the "updated_by_id" field.
func UpdatedByIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldUpdatedByID))
}

// UpdatedByIDNotNil applies the NotNil predicate on the "updated_by_id" field.
func UpdatedByIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldUpdatedByID))
}

// UpdatedByIDEqualFold applies the EqualFold predicate on the "updated_by_id" field.
func UpdatedByIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldUpdatedByID, v))
}

// UpdatedByIDContainsFold applies the ContainsFold predicate on the "updated_by_id" field.
func UpdatedByIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldUpdatedByID, v))
}

// MappingIDEQ applies the EQ predicate on the "mapping_id" field.
func MappingIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldMappingID, v))
}

// MappingIDNEQ applies the NEQ predicate on the "mapping_id" field.
func MappingIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldMappingID, v))
}

// MappingIDIn applies the In predicate on the "mapping_id" field.
func MappingIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldMappingID, vs...))
}

// MappingIDNotIn applies the NotIn predicate on the "mapping_id" field.
func MappingIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldMappingID, vs...))
}

// MappingIDGT applies the GT predicate on the "mapping_id" field.
func MappingIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldMappingID, v))
}

// MappingIDGTE applies the GTE predicate on the "mapping_id" field.
func MappingIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldMappingID, v))
}

// MappingIDLT applies the LT predicate on the "mapping_id" field.
func MappingIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldMappingID, v))
}

// MappingIDLTE applies the LTE predicate on the "mapping_id" field.
func MappingIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldMappingID, v))
}

// MappingIDContains applies the Contains predicate on the "mapping_id" field.
func MappingIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldMappingID, v))
}

// MappingIDHasPrefix applies the HasPrefix predicate on the "mapping_id" field.
func MappingIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldMappingID, v))
}

// MappingIDHasSuffix applies the HasSuffix predicate on the "mapping_id" field.
func MappingIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldMappingID, v))
}

// MappingIDEqualFold applies the EqualFold predicate on the "mapping_id" field.
func MappingIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldMappingID, v))
}

// MappingIDContainsFold applies the ContainsFold predicate on the "mapping_id" field.
func MappingIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldMappingID, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldTags))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByIDEQ applies the EQ predicate on the "deleted_by_id" field.
func DeletedByIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldDeletedByID, v))
}

// DeletedByIDNEQ applies the NEQ predicate on the "deleted_by_id" field.
func DeletedByIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldDeletedByID, v))
}

// DeletedByIDIn applies the In predicate on the "deleted_by_id" field.
func DeletedByIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldDeletedByID, vs...))
}

// DeletedByIDNotIn applies the NotIn predicate on the "deleted_by_id" field.
func DeletedByIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldDeletedByID, vs...))
}

// DeletedByIDGT applies the GT predicate on the "deleted_by_id" field.
func DeletedByIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldDeletedByID, v))
}

// DeletedByIDGTE applies the GTE predicate on the "deleted_by_id" field.
func DeletedByIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldDeletedByID, v))
}

// DeletedByIDLT applies the LT predicate on the "deleted_by_id" field.
func DeletedByIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldDeletedByID, v))
}

// DeletedByIDLTE applies the LTE predicate on the "deleted_by_id" field.
func DeletedByIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldDeletedByID, v))
}

// DeletedByIDContains applies the Contains predicate on the "deleted_by_id" field.
func DeletedByIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldDeletedByID, v))
}

// DeletedByIDHasPrefix applies the HasPrefix predicate on the "deleted_by_id" field.
func DeletedByIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldDeletedByID, v))
}

// DeletedByIDHasSuffix applies the HasSuffix predicate on the "deleted_by_id" field.
func DeletedByIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldDeletedByID, v))
}

// DeletedByIDIsNil applies the IsNil predicate on the "deleted_by_id" field.
func DeletedByIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDeletedByID))
}

// DeletedByIDNotNil applies the NotNil predicate on the "deleted_by_id" field.
func DeletedByIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDeletedByID))
}

// DeletedByIDEqualFold applies the EqualFold predicate on the "deleted_by_id" field.
func DeletedByIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldDeletedByID, v))
}

// DeletedByIDContainsFold applies the ContainsFold predicate on the "deleted_by_id" field.
func DeletedByIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldDeletedByID, v))
}

// DomainsIsNil applies the IsNil predicate on the "domains" field.
func DomainsIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldDomains))
}

// DomainsNotNil applies the NotNil predicate on the "domains" field.
func DomainsNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldDomains))
}

// BillingContactEQ applies the EQ predicate on the "billing_contact" field.
func BillingContactEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingContact, v))
}

// BillingContactNEQ applies the NEQ predicate on the "billing_contact" field.
func BillingContactNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingContact, v))
}

// BillingContactIn applies the In predicate on the "billing_contact" field.
func BillingContactIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingContact, vs...))
}

// BillingContactNotIn applies the NotIn predicate on the "billing_contact" field.
func BillingContactNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingContact, vs...))
}

// BillingContactGT applies the GT predicate on the "billing_contact" field.
func BillingContactGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingContact, v))
}

// BillingContactGTE applies the GTE predicate on the "billing_contact" field.
func BillingContactGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingContact, v))
}

// BillingContactLT applies the LT predicate on the "billing_contact" field.
func BillingContactLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingContact, v))
}

// BillingContactLTE applies the LTE predicate on the "billing_contact" field.
func BillingContactLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingContact, v))
}

// BillingContactContains applies the Contains predicate on the "billing_contact" field.
func BillingContactContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingContact, v))
}

// BillingContactHasPrefix applies the HasPrefix predicate on the "billing_contact" field.
func BillingContactHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingContact, v))
}

// BillingContactHasSuffix applies the HasSuffix predicate on the "billing_contact" field.
func BillingContactHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingContact, v))
}

// BillingContactIsNil applies the IsNil predicate on the "billing_contact" field.
func BillingContactIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingContact))
}

// BillingContactNotNil applies the NotNil predicate on the "billing_contact" field.
func BillingContactNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingContact))
}

// BillingContactEqualFold applies the EqualFold predicate on the "billing_contact" field.
func BillingContactEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingContact, v))
}

// BillingContactContainsFold applies the ContainsFold predicate on the "billing_contact" field.
func BillingContactContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingContact, v))
}

// BillingEmailEQ applies the EQ predicate on the "billing_email" field.
func BillingEmailEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingEmailNEQ applies the NEQ predicate on the "billing_email" field.
func BillingEmailNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingEmail, v))
}

// BillingEmailIn applies the In predicate on the "billing_email" field.
func BillingEmailIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingEmail, vs...))
}

// BillingEmailNotIn applies the NotIn predicate on the "billing_email" field.
func BillingEmailNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingEmail, vs...))
}

// BillingEmailGT applies the GT predicate on the "billing_email" field.
func BillingEmailGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingEmail, v))
}

// BillingEmailGTE applies the GTE predicate on the "billing_email" field.
func BillingEmailGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingEmail, v))
}

// BillingEmailLT applies the LT predicate on the "billing_email" field.
func BillingEmailLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingEmail, v))
}

// BillingEmailLTE applies the LTE predicate on the "billing_email" field.
func BillingEmailLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingEmail, v))
}

// BillingEmailContains applies the Contains predicate on the "billing_email" field.
func BillingEmailContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingEmail, v))
}

// BillingEmailHasPrefix applies the HasPrefix predicate on the "billing_email" field.
func BillingEmailHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingEmail, v))
}

// BillingEmailHasSuffix applies the HasSuffix predicate on the "billing_email" field.
func BillingEmailHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingEmail, v))
}

// BillingEmailIsNil applies the IsNil predicate on the "billing_email" field.
func BillingEmailIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingEmail))
}

// BillingEmailNotNil applies the NotNil predicate on the "billing_email" field.
func BillingEmailNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingEmail))
}

// BillingEmailEqualFold applies the EqualFold predicate on the "billing_email" field.
func BillingEmailEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingEmail, v))
}

// BillingEmailContainsFold applies the ContainsFold predicate on the "billing_email" field.
func BillingEmailContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingEmail, v))
}

// BillingPhoneEQ applies the EQ predicate on the "billing_phone" field.
func BillingPhoneEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingPhoneNEQ applies the NEQ predicate on the "billing_phone" field.
func BillingPhoneNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingPhone, v))
}

// BillingPhoneIn applies the In predicate on the "billing_phone" field.
func BillingPhoneIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldBillingPhone, vs...))
}

// BillingPhoneNotIn applies the NotIn predicate on the "billing_phone" field.
func BillingPhoneNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldBillingPhone, vs...))
}

// BillingPhoneGT applies the GT predicate on the "billing_phone" field.
func BillingPhoneGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldBillingPhone, v))
}

// BillingPhoneGTE applies the GTE predicate on the "billing_phone" field.
func BillingPhoneGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldBillingPhone, v))
}

// BillingPhoneLT applies the LT predicate on the "billing_phone" field.
func BillingPhoneLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldBillingPhone, v))
}

// BillingPhoneLTE applies the LTE predicate on the "billing_phone" field.
func BillingPhoneLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldBillingPhone, v))
}

// BillingPhoneContains applies the Contains predicate on the "billing_phone" field.
func BillingPhoneContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldBillingPhone, v))
}

// BillingPhoneHasPrefix applies the HasPrefix predicate on the "billing_phone" field.
func BillingPhoneHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldBillingPhone, v))
}

// BillingPhoneHasSuffix applies the HasSuffix predicate on the "billing_phone" field.
func BillingPhoneHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldBillingPhone, v))
}

// BillingPhoneIsNil applies the IsNil predicate on the "billing_phone" field.
func BillingPhoneIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingPhone))
}

// BillingPhoneNotNil applies the NotNil predicate on the "billing_phone" field.
func BillingPhoneNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingPhone))
}

// BillingPhoneEqualFold applies the EqualFold predicate on the "billing_phone" field.
func BillingPhoneEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldBillingPhone, v))
}

// BillingPhoneContainsFold applies the ContainsFold predicate on the "billing_phone" field.
func BillingPhoneContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldBillingPhone, v))
}

// BillingAddressIsNil applies the IsNil predicate on the "billing_address" field.
func BillingAddressIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldBillingAddress))
}

// BillingAddressNotNil applies the NotNil predicate on the "billing_address" field.
func BillingAddressNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldBillingAddress))
}

// TaxIdentifierEQ applies the EQ predicate on the "tax_identifier" field.
func TaxIdentifierEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierNEQ applies the NEQ predicate on the "tax_identifier" field.
func TaxIdentifierNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierIn applies the In predicate on the "tax_identifier" field.
func TaxIdentifierIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierNotIn applies the NotIn predicate on the "tax_identifier" field.
func TaxIdentifierNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierGT applies the GT predicate on the "tax_identifier" field.
func TaxIdentifierGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldTaxIdentifier, v))
}

// TaxIdentifierGTE applies the GTE predicate on the "tax_identifier" field.
func TaxIdentifierGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldTaxIdentifier, v))
}

// TaxIdentifierLT applies the LT predicate on the "tax_identifier" field.
func TaxIdentifierLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldTaxIdentifier, v))
}

// TaxIdentifierLTE applies the LTE predicate on the "tax_identifier" field.
func TaxIdentifierLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldTaxIdentifier, v))
}

// TaxIdentifierContains applies the Contains predicate on the "tax_identifier" field.
func TaxIdentifierContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldTaxIdentifier, v))
}

// TaxIdentifierHasPrefix applies the HasPrefix predicate on the "tax_identifier" field.
func TaxIdentifierHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldTaxIdentifier, v))
}

// TaxIdentifierHasSuffix applies the HasSuffix predicate on the "tax_identifier" field.
func TaxIdentifierHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldTaxIdentifier, v))
}

// TaxIdentifierIsNil applies the IsNil predicate on the "tax_identifier" field.
func TaxIdentifierIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldTaxIdentifier))
}

// TaxIdentifierNotNil applies the NotNil predicate on the "tax_identifier" field.
func TaxIdentifierNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldTaxIdentifier))
}

// TaxIdentifierEqualFold applies the EqualFold predicate on the "tax_identifier" field.
func TaxIdentifierEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldTaxIdentifier, v))
}

// TaxIdentifierContainsFold applies the ContainsFold predicate on the "tax_identifier" field.
func TaxIdentifierContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldTaxIdentifier, v))
}

// GeoLocationEQ applies the EQ predicate on the "geo_location" field.
func GeoLocationEQ(v enums.Region) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldGeoLocation, vc))
}

// GeoLocationNEQ applies the NEQ predicate on the "geo_location" field.
func GeoLocationNEQ(v enums.Region) predicate.OrganizationSettingHistory {
	vc := v
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldGeoLocation, vc))
}

// GeoLocationIn applies the In predicate on the "geo_location" field.
func GeoLocationIn(vs ...enums.Region) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldGeoLocation, v...))
}

// GeoLocationNotIn applies the NotIn predicate on the "geo_location" field.
func GeoLocationNotIn(vs ...enums.Region) predicate.OrganizationSettingHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldGeoLocation, v...))
}

// GeoLocationIsNil applies the IsNil predicate on the "geo_location" field.
func GeoLocationIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldGeoLocation))
}

// GeoLocationNotNil applies the NotNil predicate on the "geo_location" field.
func GeoLocationNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldGeoLocation))
}

// OrganizationIDEQ applies the EQ predicate on the "organization_id" field.
func OrganizationIDEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldOrganizationID, v))
}

// OrganizationIDNEQ applies the NEQ predicate on the "organization_id" field.
func OrganizationIDNEQ(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldOrganizationID, v))
}

// OrganizationIDIn applies the In predicate on the "organization_id" field.
func OrganizationIDIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIn(FieldOrganizationID, vs...))
}

// OrganizationIDNotIn applies the NotIn predicate on the "organization_id" field.
func OrganizationIDNotIn(vs ...string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotIn(FieldOrganizationID, vs...))
}

// OrganizationIDGT applies the GT predicate on the "organization_id" field.
func OrganizationIDGT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGT(FieldOrganizationID, v))
}

// OrganizationIDGTE applies the GTE predicate on the "organization_id" field.
func OrganizationIDGTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldGTE(FieldOrganizationID, v))
}

// OrganizationIDLT applies the LT predicate on the "organization_id" field.
func OrganizationIDLT(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLT(FieldOrganizationID, v))
}

// OrganizationIDLTE applies the LTE predicate on the "organization_id" field.
func OrganizationIDLTE(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldLTE(FieldOrganizationID, v))
}

// OrganizationIDContains applies the Contains predicate on the "organization_id" field.
func OrganizationIDContains(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContains(FieldOrganizationID, v))
}

// OrganizationIDHasPrefix applies the HasPrefix predicate on the "organization_id" field.
func OrganizationIDHasPrefix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasPrefix(FieldOrganizationID, v))
}

// OrganizationIDHasSuffix applies the HasSuffix predicate on the "organization_id" field.
func OrganizationIDHasSuffix(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldHasSuffix(FieldOrganizationID, v))
}

// OrganizationIDIsNil applies the IsNil predicate on the "organization_id" field.
func OrganizationIDIsNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldIsNull(FieldOrganizationID))
}

// OrganizationIDNotNil applies the NotNil predicate on the "organization_id" field.
func OrganizationIDNotNil() predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNotNull(FieldOrganizationID))
}

// OrganizationIDEqualFold applies the EqualFold predicate on the "organization_id" field.
func OrganizationIDEqualFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEqualFold(FieldOrganizationID, v))
}

// OrganizationIDContainsFold applies the ContainsFold predicate on the "organization_id" field.
func OrganizationIDContainsFold(v string) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldContainsFold(FieldOrganizationID, v))
}

// BillingNotificationsEnabledEQ applies the EQ predicate on the "billing_notifications_enabled" field.
func BillingNotificationsEnabledEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldEQ(FieldBillingNotificationsEnabled, v))
}

// BillingNotificationsEnabledNEQ applies the NEQ predicate on the "billing_notifications_enabled" field.
func BillingNotificationsEnabledNEQ(v bool) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.FieldNEQ(FieldBillingNotificationsEnabled, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrganizationSettingHistory) predicate.OrganizationSettingHistory {
	return predicate.OrganizationSettingHistory(sql.NotPredicates(p))
}
