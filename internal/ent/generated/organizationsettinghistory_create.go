// Code generated by ent, DO NOT EDIT.

package generated

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/theopenlane/core/internal/ent/generated/organizationsettinghistory"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/core/pkg/models"
	"github.com/theopenlane/entx/history"
)

// OrganizationSettingHistoryCreate is the builder for creating a OrganizationSettingHistory entity.
type OrganizationSettingHistoryCreate struct {
	config
	mutation *OrganizationSettingHistoryMutation
	hooks    []Hook
}

// SetHistoryTime sets the "history_time" field.
func (_c *OrganizationSettingHistoryCreate) SetHistoryTime(v time.Time) *OrganizationSettingHistoryCreate {
	_c.mutation.SetHistoryTime(v)
	return _c
}

// SetNillableHistoryTime sets the "history_time" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableHistoryTime(v *time.Time) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetHistoryTime(*v)
	}
	return _c
}

// SetRef sets the "ref" field.
func (_c *OrganizationSettingHistoryCreate) SetRef(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetRef(v)
	return _c
}

// SetNillableRef sets the "ref" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableRef(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetRef(*v)
	}
	return _c
}

// SetOperation sets the "operation" field.
func (_c *OrganizationSettingHistoryCreate) SetOperation(v history.OpType) *OrganizationSettingHistoryCreate {
	_c.mutation.SetOperation(v)
	return _c
}

// SetCreatedAt sets the "created_at" field.
func (_c *OrganizationSettingHistoryCreate) SetCreatedAt(v time.Time) *OrganizationSettingHistoryCreate {
	_c.mutation.SetCreatedAt(v)
	return _c
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableCreatedAt(v *time.Time) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetCreatedAt(*v)
	}
	return _c
}

// SetUpdatedAt sets the "updated_at" field.
func (_c *OrganizationSettingHistoryCreate) SetUpdatedAt(v time.Time) *OrganizationSettingHistoryCreate {
	_c.mutation.SetUpdatedAt(v)
	return _c
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableUpdatedAt(v *time.Time) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetUpdatedAt(*v)
	}
	return _c
}

// SetCreatedBy sets the "created_by" field.
func (_c *OrganizationSettingHistoryCreate) SetCreatedBy(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetCreatedBy(v)
	return _c
}

// SetNillableCreatedBy sets the "created_by" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableCreatedBy(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetCreatedBy(*v)
	}
	return _c
}

// SetUpdatedBy sets the "updated_by" field.
func (_c *OrganizationSettingHistoryCreate) SetUpdatedBy(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetUpdatedBy(v)
	return _c
}

// SetNillableUpdatedBy sets the "updated_by" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableUpdatedBy(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetUpdatedBy(*v)
	}
	return _c
}

// SetDeletedAt sets the "deleted_at" field.
func (_c *OrganizationSettingHistoryCreate) SetDeletedAt(v time.Time) *OrganizationSettingHistoryCreate {
	_c.mutation.SetDeletedAt(v)
	return _c
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableDeletedAt(v *time.Time) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetDeletedAt(*v)
	}
	return _c
}

// SetDeletedBy sets the "deleted_by" field.
func (_c *OrganizationSettingHistoryCreate) SetDeletedBy(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetDeletedBy(v)
	return _c
}

// SetNillableDeletedBy sets the "deleted_by" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableDeletedBy(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetDeletedBy(*v)
	}
	return _c
}

// SetTags sets the "tags" field.
func (_c *OrganizationSettingHistoryCreate) SetTags(v []string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetTags(v)
	return _c
}

// SetDomains sets the "domains" field.
func (_c *OrganizationSettingHistoryCreate) SetDomains(v []string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetDomains(v)
	return _c
}

// SetBillingContact sets the "billing_contact" field.
func (_c *OrganizationSettingHistoryCreate) SetBillingContact(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetBillingContact(v)
	return _c
}

// SetNillableBillingContact sets the "billing_contact" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableBillingContact(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetBillingContact(*v)
	}
	return _c
}

// SetBillingEmail sets the "billing_email" field.
func (_c *OrganizationSettingHistoryCreate) SetBillingEmail(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetBillingEmail(v)
	return _c
}

// SetNillableBillingEmail sets the "billing_email" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableBillingEmail(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetBillingEmail(*v)
	}
	return _c
}

// SetBillingPhone sets the "billing_phone" field.
func (_c *OrganizationSettingHistoryCreate) SetBillingPhone(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetBillingPhone(v)
	return _c
}

// SetNillableBillingPhone sets the "billing_phone" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableBillingPhone(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetBillingPhone(*v)
	}
	return _c
}

// SetBillingAddress sets the "billing_address" field.
func (_c *OrganizationSettingHistoryCreate) SetBillingAddress(v models.Address) *OrganizationSettingHistoryCreate {
	_c.mutation.SetBillingAddress(v)
	return _c
}

// SetNillableBillingAddress sets the "billing_address" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableBillingAddress(v *models.Address) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetBillingAddress(*v)
	}
	return _c
}

// SetTaxIdentifier sets the "tax_identifier" field.
func (_c *OrganizationSettingHistoryCreate) SetTaxIdentifier(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetTaxIdentifier(v)
	return _c
}

// SetNillableTaxIdentifier sets the "tax_identifier" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableTaxIdentifier(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetTaxIdentifier(*v)
	}
	return _c
}

// SetGeoLocation sets the "geo_location" field.
func (_c *OrganizationSettingHistoryCreate) SetGeoLocation(v enums.Region) *OrganizationSettingHistoryCreate {
	_c.mutation.SetGeoLocation(v)
	return _c
}

// SetNillableGeoLocation sets the "geo_location" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableGeoLocation(v *enums.Region) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetGeoLocation(*v)
	}
	return _c
}

// SetOrganizationID sets the "organization_id" field.
func (_c *OrganizationSettingHistoryCreate) SetOrganizationID(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetOrganizationID(v)
	return _c
}

// SetNillableOrganizationID sets the "organization_id" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableOrganizationID(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetOrganizationID(*v)
	}
	return _c
}

// SetBillingNotificationsEnabled sets the "billing_notifications_enabled" field.
func (_c *OrganizationSettingHistoryCreate) SetBillingNotificationsEnabled(v bool) *OrganizationSettingHistoryCreate {
	_c.mutation.SetBillingNotificationsEnabled(v)
	return _c
}

// SetNillableBillingNotificationsEnabled sets the "billing_notifications_enabled" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableBillingNotificationsEnabled(v *bool) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetBillingNotificationsEnabled(*v)
	}
	return _c
}

// SetAllowedEmailDomains sets the "allowed_email_domains" field.
func (_c *OrganizationSettingHistoryCreate) SetAllowedEmailDomains(v []string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetAllowedEmailDomains(v)
	return _c
}

// SetIdentityProvider sets the "identity_provider" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProvider(v enums.SSOProvider) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProvider(v)
	return _c
}

// SetNillableIdentityProvider sets the "identity_provider" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProvider(v *enums.SSOProvider) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProvider(*v)
	}
	return _c
}

// SetIdentityProviderClientID sets the "identity_provider_client_id" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderClientID(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderClientID(v)
	return _c
}

// SetNillableIdentityProviderClientID sets the "identity_provider_client_id" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderClientID(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderClientID(*v)
	}
	return _c
}

// SetIdentityProviderClientSecret sets the "identity_provider_client_secret" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderClientSecret(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderClientSecret(v)
	return _c
}

// SetNillableIdentityProviderClientSecret sets the "identity_provider_client_secret" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderClientSecret(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderClientSecret(*v)
	}
	return _c
}

// SetIdentityProviderMetadataEndpoint sets the "identity_provider_metadata_endpoint" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderMetadataEndpoint(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderMetadataEndpoint(v)
	return _c
}

// SetNillableIdentityProviderMetadataEndpoint sets the "identity_provider_metadata_endpoint" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderMetadataEndpoint(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderMetadataEndpoint(*v)
	}
	return _c
}

// SetIdentityProviderAuthTested sets the "identity_provider_auth_tested" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderAuthTested(v bool) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderAuthTested(v)
	return _c
}

// SetNillableIdentityProviderAuthTested sets the "identity_provider_auth_tested" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderAuthTested(v *bool) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderAuthTested(*v)
	}
	return _c
}

// SetIdentityProviderEntityID sets the "identity_provider_entity_id" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderEntityID(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderEntityID(v)
	return _c
}

// SetNillableIdentityProviderEntityID sets the "identity_provider_entity_id" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderEntityID(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderEntityID(*v)
	}
	return _c
}

// SetOidcDiscoveryEndpoint sets the "oidc_discovery_endpoint" field.
func (_c *OrganizationSettingHistoryCreate) SetOidcDiscoveryEndpoint(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetOidcDiscoveryEndpoint(v)
	return _c
}

// SetNillableOidcDiscoveryEndpoint sets the "oidc_discovery_endpoint" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableOidcDiscoveryEndpoint(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetOidcDiscoveryEndpoint(*v)
	}
	return _c
}

// SetIdentityProviderLoginEnforced sets the "identity_provider_login_enforced" field.
func (_c *OrganizationSettingHistoryCreate) SetIdentityProviderLoginEnforced(v bool) *OrganizationSettingHistoryCreate {
	_c.mutation.SetIdentityProviderLoginEnforced(v)
	return _c
}

// SetNillableIdentityProviderLoginEnforced sets the "identity_provider_login_enforced" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableIdentityProviderLoginEnforced(v *bool) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetIdentityProviderLoginEnforced(*v)
	}
	return _c
}

// SetComplianceWebhookToken sets the "compliance_webhook_token" field.
func (_c *OrganizationSettingHistoryCreate) SetComplianceWebhookToken(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetComplianceWebhookToken(v)
	return _c
}

// SetNillableComplianceWebhookToken sets the "compliance_webhook_token" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableComplianceWebhookToken(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetComplianceWebhookToken(*v)
	}
	return _c
}

// SetPaymentMethodAdded sets the "payment_method_added" field.
func (_c *OrganizationSettingHistoryCreate) SetPaymentMethodAdded(v bool) *OrganizationSettingHistoryCreate {
	_c.mutation.SetPaymentMethodAdded(v)
	return _c
}

// SetNillablePaymentMethodAdded sets the "payment_method_added" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillablePaymentMethodAdded(v *bool) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetPaymentMethodAdded(*v)
	}
	return _c
}

// SetID sets the "id" field.
func (_c *OrganizationSettingHistoryCreate) SetID(v string) *OrganizationSettingHistoryCreate {
	_c.mutation.SetID(v)
	return _c
}

// SetNillableID sets the "id" field if the given value is not nil.
func (_c *OrganizationSettingHistoryCreate) SetNillableID(v *string) *OrganizationSettingHistoryCreate {
	if v != nil {
		_c.SetID(*v)
	}
	return _c
}

// Mutation returns the OrganizationSettingHistoryMutation object of the builder.
func (_c *OrganizationSettingHistoryCreate) Mutation() *OrganizationSettingHistoryMutation {
	return _c.mutation
}

// Save creates the OrganizationSettingHistory in the database.
func (_c *OrganizationSettingHistoryCreate) Save(ctx context.Context) (*OrganizationSettingHistory, error) {
	if err := _c.defaults(); err != nil {
		return nil, err
	}
	return withHooks(ctx, _c.sqlSave, _c.mutation, _c.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (_c *OrganizationSettingHistoryCreate) SaveX(ctx context.Context) *OrganizationSettingHistory {
	v, err := _c.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (_c *OrganizationSettingHistoryCreate) Exec(ctx context.Context) error {
	_, err := _c.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_c *OrganizationSettingHistoryCreate) ExecX(ctx context.Context) {
	if err := _c.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (_c *OrganizationSettingHistoryCreate) defaults() error {
	if _, ok := _c.mutation.HistoryTime(); !ok {
		if organizationsettinghistory.DefaultHistoryTime == nil {
			return fmt.Errorf("generated: uninitialized organizationsettinghistory.DefaultHistoryTime (forgotten import generated/runtime?)")
		}
		v := organizationsettinghistory.DefaultHistoryTime()
		_c.mutation.SetHistoryTime(v)
	}
	if _, ok := _c.mutation.CreatedAt(); !ok {
		if organizationsettinghistory.DefaultCreatedAt == nil {
			return fmt.Errorf("generated: uninitialized organizationsettinghistory.DefaultCreatedAt (forgotten import generated/runtime?)")
		}
		v := organizationsettinghistory.DefaultCreatedAt()
		_c.mutation.SetCreatedAt(v)
	}
	if _, ok := _c.mutation.UpdatedAt(); !ok {
		if organizationsettinghistory.DefaultUpdatedAt == nil {
			return fmt.Errorf("generated: uninitialized organizationsettinghistory.DefaultUpdatedAt (forgotten import generated/runtime?)")
		}
		v := organizationsettinghistory.DefaultUpdatedAt()
		_c.mutation.SetUpdatedAt(v)
	}
	if _, ok := _c.mutation.Tags(); !ok {
		v := organizationsettinghistory.DefaultTags
		_c.mutation.SetTags(v)
	}
	if _, ok := _c.mutation.GeoLocation(); !ok {
		v := organizationsettinghistory.DefaultGeoLocation
		_c.mutation.SetGeoLocation(v)
	}
	if _, ok := _c.mutation.BillingNotificationsEnabled(); !ok {
		v := organizationsettinghistory.DefaultBillingNotificationsEnabled
		_c.mutation.SetBillingNotificationsEnabled(v)
	}
	if _, ok := _c.mutation.IdentityProvider(); !ok {
		v := organizationsettinghistory.DefaultIdentityProvider
		_c.mutation.SetIdentityProvider(v)
	}
	if _, ok := _c.mutation.IdentityProviderAuthTested(); !ok {
		v := organizationsettinghistory.DefaultIdentityProviderAuthTested
		_c.mutation.SetIdentityProviderAuthTested(v)
	}
	if _, ok := _c.mutation.IdentityProviderLoginEnforced(); !ok {
		v := organizationsettinghistory.DefaultIdentityProviderLoginEnforced
		_c.mutation.SetIdentityProviderLoginEnforced(v)
	}
	if _, ok := _c.mutation.ComplianceWebhookToken(); !ok {
		if organizationsettinghistory.DefaultComplianceWebhookToken == nil {
			return fmt.Errorf("generated: uninitialized organizationsettinghistory.DefaultComplianceWebhookToken (forgotten import generated/runtime?)")
		}
		v := organizationsettinghistory.DefaultComplianceWebhookToken()
		_c.mutation.SetComplianceWebhookToken(v)
	}
	if _, ok := _c.mutation.PaymentMethodAdded(); !ok {
		v := organizationsettinghistory.DefaultPaymentMethodAdded
		_c.mutation.SetPaymentMethodAdded(v)
	}
	if _, ok := _c.mutation.ID(); !ok {
		if organizationsettinghistory.DefaultID == nil {
			return fmt.Errorf("generated: uninitialized organizationsettinghistory.DefaultID (forgotten import generated/runtime?)")
		}
		v := organizationsettinghistory.DefaultID()
		_c.mutation.SetID(v)
	}
	return nil
}

// check runs all checks and user-defined validators on the builder.
func (_c *OrganizationSettingHistoryCreate) check() error {
	if _, ok := _c.mutation.HistoryTime(); !ok {
		return &ValidationError{Name: "history_time", err: errors.New(`generated: missing required field "OrganizationSettingHistory.history_time"`)}
	}
	if _, ok := _c.mutation.Operation(); !ok {
		return &ValidationError{Name: "operation", err: errors.New(`generated: missing required field "OrganizationSettingHistory.operation"`)}
	}
	if v, ok := _c.mutation.Operation(); ok {
		if err := organizationsettinghistory.OperationValidator(v); err != nil {
			return &ValidationError{Name: "operation", err: fmt.Errorf(`generated: validator failed for field "OrganizationSettingHistory.operation": %w`, err)}
		}
	}
	if v, ok := _c.mutation.GeoLocation(); ok {
		if err := organizationsettinghistory.GeoLocationValidator(v); err != nil {
			return &ValidationError{Name: "geo_location", err: fmt.Errorf(`generated: validator failed for field "OrganizationSettingHistory.geo_location": %w`, err)}
		}
	}
	if _, ok := _c.mutation.BillingNotificationsEnabled(); !ok {
		return &ValidationError{Name: "billing_notifications_enabled", err: errors.New(`generated: missing required field "OrganizationSettingHistory.billing_notifications_enabled"`)}
	}
	if v, ok := _c.mutation.IdentityProvider(); ok {
		if err := organizationsettinghistory.IdentityProviderValidator(v); err != nil {
			return &ValidationError{Name: "identity_provider", err: fmt.Errorf(`generated: validator failed for field "OrganizationSettingHistory.identity_provider": %w`, err)}
		}
	}
	if _, ok := _c.mutation.IdentityProviderAuthTested(); !ok {
		return &ValidationError{Name: "identity_provider_auth_tested", err: errors.New(`generated: missing required field "OrganizationSettingHistory.identity_provider_auth_tested"`)}
	}
	if _, ok := _c.mutation.IdentityProviderLoginEnforced(); !ok {
		return &ValidationError{Name: "identity_provider_login_enforced", err: errors.New(`generated: missing required field "OrganizationSettingHistory.identity_provider_login_enforced"`)}
	}
	if _, ok := _c.mutation.PaymentMethodAdded(); !ok {
		return &ValidationError{Name: "payment_method_added", err: errors.New(`generated: missing required field "OrganizationSettingHistory.payment_method_added"`)}
	}
	return nil
}

func (_c *OrganizationSettingHistoryCreate) sqlSave(ctx context.Context) (*OrganizationSettingHistory, error) {
	if err := _c.check(); err != nil {
		return nil, err
	}
	_node, _spec := _c.createSpec()
	if err := sqlgraph.CreateNode(ctx, _c.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != nil {
		if id, ok := _spec.ID.Value.(string); ok {
			_node.ID = id
		} else {
			return nil, fmt.Errorf("unexpected OrganizationSettingHistory.ID type: %T", _spec.ID.Value)
		}
	}
	_c.mutation.id = &_node.ID
	_c.mutation.done = true
	return _node, nil
}

func (_c *OrganizationSettingHistoryCreate) createSpec() (*OrganizationSettingHistory, *sqlgraph.CreateSpec) {
	var (
		_node = &OrganizationSettingHistory{config: _c.config}
		_spec = sqlgraph.NewCreateSpec(organizationsettinghistory.Table, sqlgraph.NewFieldSpec(organizationsettinghistory.FieldID, field.TypeString))
	)
	_spec.Schema = _c.schemaConfig.OrganizationSettingHistory
	if id, ok := _c.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := _c.mutation.HistoryTime(); ok {
		_spec.SetField(organizationsettinghistory.FieldHistoryTime, field.TypeTime, value)
		_node.HistoryTime = value
	}
	if value, ok := _c.mutation.Ref(); ok {
		_spec.SetField(organizationsettinghistory.FieldRef, field.TypeString, value)
		_node.Ref = value
	}
	if value, ok := _c.mutation.Operation(); ok {
		_spec.SetField(organizationsettinghistory.FieldOperation, field.TypeEnum, value)
		_node.Operation = value
	}
	if value, ok := _c.mutation.CreatedAt(); ok {
		_spec.SetField(organizationsettinghistory.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := _c.mutation.UpdatedAt(); ok {
		_spec.SetField(organizationsettinghistory.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if value, ok := _c.mutation.CreatedBy(); ok {
		_spec.SetField(organizationsettinghistory.FieldCreatedBy, field.TypeString, value)
		_node.CreatedBy = value
	}
	if value, ok := _c.mutation.UpdatedBy(); ok {
		_spec.SetField(organizationsettinghistory.FieldUpdatedBy, field.TypeString, value)
		_node.UpdatedBy = value
	}
	if value, ok := _c.mutation.DeletedAt(); ok {
		_spec.SetField(organizationsettinghistory.FieldDeletedAt, field.TypeTime, value)
		_node.DeletedAt = value
	}
	if value, ok := _c.mutation.DeletedBy(); ok {
		_spec.SetField(organizationsettinghistory.FieldDeletedBy, field.TypeString, value)
		_node.DeletedBy = value
	}
	if value, ok := _c.mutation.Tags(); ok {
		_spec.SetField(organizationsettinghistory.FieldTags, field.TypeJSON, value)
		_node.Tags = value
	}
	if value, ok := _c.mutation.Domains(); ok {
		_spec.SetField(organizationsettinghistory.FieldDomains, field.TypeJSON, value)
		_node.Domains = value
	}
	if value, ok := _c.mutation.BillingContact(); ok {
		_spec.SetField(organizationsettinghistory.FieldBillingContact, field.TypeString, value)
		_node.BillingContact = value
	}
	if value, ok := _c.mutation.BillingEmail(); ok {
		_spec.SetField(organizationsettinghistory.FieldBillingEmail, field.TypeString, value)
		_node.BillingEmail = value
	}
	if value, ok := _c.mutation.BillingPhone(); ok {
		_spec.SetField(organizationsettinghistory.FieldBillingPhone, field.TypeString, value)
		_node.BillingPhone = value
	}
	if value, ok := _c.mutation.BillingAddress(); ok {
		_spec.SetField(organizationsettinghistory.FieldBillingAddress, field.TypeJSON, value)
		_node.BillingAddress = value
	}
	if value, ok := _c.mutation.TaxIdentifier(); ok {
		_spec.SetField(organizationsettinghistory.FieldTaxIdentifier, field.TypeString, value)
		_node.TaxIdentifier = value
	}
	if value, ok := _c.mutation.GeoLocation(); ok {
		_spec.SetField(organizationsettinghistory.FieldGeoLocation, field.TypeEnum, value)
		_node.GeoLocation = value
	}
	if value, ok := _c.mutation.OrganizationID(); ok {
		_spec.SetField(organizationsettinghistory.FieldOrganizationID, field.TypeString, value)
		_node.OrganizationID = value
	}
	if value, ok := _c.mutation.BillingNotificationsEnabled(); ok {
		_spec.SetField(organizationsettinghistory.FieldBillingNotificationsEnabled, field.TypeBool, value)
		_node.BillingNotificationsEnabled = value
	}
	if value, ok := _c.mutation.AllowedEmailDomains(); ok {
		_spec.SetField(organizationsettinghistory.FieldAllowedEmailDomains, field.TypeJSON, value)
		_node.AllowedEmailDomains = value
	}
	if value, ok := _c.mutation.IdentityProvider(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProvider, field.TypeEnum, value)
		_node.IdentityProvider = value
	}
	if value, ok := _c.mutation.IdentityProviderClientID(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderClientID, field.TypeString, value)
		_node.IdentityProviderClientID = &value
	}
	if value, ok := _c.mutation.IdentityProviderClientSecret(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderClientSecret, field.TypeString, value)
		_node.IdentityProviderClientSecret = &value
	}
	if value, ok := _c.mutation.IdentityProviderMetadataEndpoint(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderMetadataEndpoint, field.TypeString, value)
		_node.IdentityProviderMetadataEndpoint = value
	}
	if value, ok := _c.mutation.IdentityProviderAuthTested(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderAuthTested, field.TypeBool, value)
		_node.IdentityProviderAuthTested = value
	}
	if value, ok := _c.mutation.IdentityProviderEntityID(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderEntityID, field.TypeString, value)
		_node.IdentityProviderEntityID = value
	}
	if value, ok := _c.mutation.OidcDiscoveryEndpoint(); ok {
		_spec.SetField(organizationsettinghistory.FieldOidcDiscoveryEndpoint, field.TypeString, value)
		_node.OidcDiscoveryEndpoint = value
	}
	if value, ok := _c.mutation.IdentityProviderLoginEnforced(); ok {
		_spec.SetField(organizationsettinghistory.FieldIdentityProviderLoginEnforced, field.TypeBool, value)
		_node.IdentityProviderLoginEnforced = value
	}
	if value, ok := _c.mutation.ComplianceWebhookToken(); ok {
		_spec.SetField(organizationsettinghistory.FieldComplianceWebhookToken, field.TypeString, value)
		_node.ComplianceWebhookToken = value
	}
	if value, ok := _c.mutation.PaymentMethodAdded(); ok {
		_spec.SetField(organizationsettinghistory.FieldPaymentMethodAdded, field.TypeBool, value)
		_node.PaymentMethodAdded = value
	}
	return _node, _spec
}

// OrganizationSettingHistoryCreateBulk is the builder for creating many OrganizationSettingHistory entities in bulk.
type OrganizationSettingHistoryCreateBulk struct {
	config
	err      error
	builders []*OrganizationSettingHistoryCreate
}

// Save creates the OrganizationSettingHistory entities in the database.
func (_c *OrganizationSettingHistoryCreateBulk) Save(ctx context.Context) ([]*OrganizationSettingHistory, error) {
	if _c.err != nil {
		return nil, _c.err
	}
	specs := make([]*sqlgraph.CreateSpec, len(_c.builders))
	nodes := make([]*OrganizationSettingHistory, len(_c.builders))
	mutators := make([]Mutator, len(_c.builders))
	for i := range _c.builders {
		func(i int, root context.Context) {
			builder := _c.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*OrganizationSettingHistoryMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, _c.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, _c.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, _c.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (_c *OrganizationSettingHistoryCreateBulk) SaveX(ctx context.Context) []*OrganizationSettingHistory {
	v, err := _c.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (_c *OrganizationSettingHistoryCreateBulk) Exec(ctx context.Context) error {
	_, err := _c.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (_c *OrganizationSettingHistoryCreateBulk) ExecX(ctx context.Context) {
	if err := _c.Exec(ctx); err != nil {
		panic(err)
	}
}
