// Code generated by ent, DO NOT EDIT.

package organizationsetting

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"

	"github.com/theopenlane/core/internal/ent/generated/internal"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldUpdatedBy, v))
}

// MappingID applies equality check predicate on the "mapping_id" field. It's identical to MappingIDEQ.
func MappingID(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldMappingID, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldDeletedBy, v))
}

// BillingContact applies equality check predicate on the "billing_contact" field. It's identical to BillingContactEQ.
func BillingContact(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingContact, v))
}

// BillingEmail applies equality check predicate on the "billing_email" field. It's identical to BillingEmailEQ.
func BillingEmail(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingPhone applies equality check predicate on the "billing_phone" field. It's identical to BillingPhoneEQ.
func BillingPhone(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingAddress applies equality check predicate on the "billing_address" field. It's identical to BillingAddressEQ.
func BillingAddress(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingAddress, v))
}

// TaxIdentifier applies equality check predicate on the "tax_identifier" field. It's identical to TaxIdentifierEQ.
func TaxIdentifier(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldTaxIdentifier, v))
}

// OrganizationID applies equality check predicate on the "organization_id" field. It's identical to OrganizationIDEQ.
func OrganizationID(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldOrganizationID, v))
}

// StripeID applies equality check predicate on the "stripe_id" field. It's identical to StripeIDEQ.
func StripeID(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldStripeID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// MappingIDEQ applies the EQ predicate on the "mapping_id" field.
func MappingIDEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldMappingID, v))
}

// MappingIDNEQ applies the NEQ predicate on the "mapping_id" field.
func MappingIDNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldMappingID, v))
}

// MappingIDIn applies the In predicate on the "mapping_id" field.
func MappingIDIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldMappingID, vs...))
}

// MappingIDNotIn applies the NotIn predicate on the "mapping_id" field.
func MappingIDNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldMappingID, vs...))
}

// MappingIDGT applies the GT predicate on the "mapping_id" field.
func MappingIDGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldMappingID, v))
}

// MappingIDGTE applies the GTE predicate on the "mapping_id" field.
func MappingIDGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldMappingID, v))
}

// MappingIDLT applies the LT predicate on the "mapping_id" field.
func MappingIDLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldMappingID, v))
}

// MappingIDLTE applies the LTE predicate on the "mapping_id" field.
func MappingIDLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldMappingID, v))
}

// MappingIDContains applies the Contains predicate on the "mapping_id" field.
func MappingIDContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldMappingID, v))
}

// MappingIDHasPrefix applies the HasPrefix predicate on the "mapping_id" field.
func MappingIDHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldMappingID, v))
}

// MappingIDHasSuffix applies the HasSuffix predicate on the "mapping_id" field.
func MappingIDHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldMappingID, v))
}

// MappingIDEqualFold applies the EqualFold predicate on the "mapping_id" field.
func MappingIDEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldMappingID, v))
}

// MappingIDContainsFold applies the ContainsFold predicate on the "mapping_id" field.
func MappingIDContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldMappingID, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldTags))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldDeletedBy, v))
}

// DomainsIsNil applies the IsNil predicate on the "domains" field.
func DomainsIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldDomains))
}

// DomainsNotNil applies the NotNil predicate on the "domains" field.
func DomainsNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldDomains))
}

// BillingContactEQ applies the EQ predicate on the "billing_contact" field.
func BillingContactEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingContact, v))
}

// BillingContactNEQ applies the NEQ predicate on the "billing_contact" field.
func BillingContactNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldBillingContact, v))
}

// BillingContactIn applies the In predicate on the "billing_contact" field.
func BillingContactIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldBillingContact, vs...))
}

// BillingContactNotIn applies the NotIn predicate on the "billing_contact" field.
func BillingContactNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldBillingContact, vs...))
}

// BillingContactGT applies the GT predicate on the "billing_contact" field.
func BillingContactGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldBillingContact, v))
}

// BillingContactGTE applies the GTE predicate on the "billing_contact" field.
func BillingContactGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldBillingContact, v))
}

// BillingContactLT applies the LT predicate on the "billing_contact" field.
func BillingContactLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldBillingContact, v))
}

// BillingContactLTE applies the LTE predicate on the "billing_contact" field.
func BillingContactLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldBillingContact, v))
}

// BillingContactContains applies the Contains predicate on the "billing_contact" field.
func BillingContactContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldBillingContact, v))
}

// BillingContactHasPrefix applies the HasPrefix predicate on the "billing_contact" field.
func BillingContactHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldBillingContact, v))
}

// BillingContactHasSuffix applies the HasSuffix predicate on the "billing_contact" field.
func BillingContactHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldBillingContact, v))
}

// BillingContactIsNil applies the IsNil predicate on the "billing_contact" field.
func BillingContactIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldBillingContact))
}

// BillingContactNotNil applies the NotNil predicate on the "billing_contact" field.
func BillingContactNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldBillingContact))
}

// BillingContactEqualFold applies the EqualFold predicate on the "billing_contact" field.
func BillingContactEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldBillingContact, v))
}

// BillingContactContainsFold applies the ContainsFold predicate on the "billing_contact" field.
func BillingContactContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldBillingContact, v))
}

// BillingEmailEQ applies the EQ predicate on the "billing_email" field.
func BillingEmailEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingEmail, v))
}

// BillingEmailNEQ applies the NEQ predicate on the "billing_email" field.
func BillingEmailNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldBillingEmail, v))
}

// BillingEmailIn applies the In predicate on the "billing_email" field.
func BillingEmailIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldBillingEmail, vs...))
}

// BillingEmailNotIn applies the NotIn predicate on the "billing_email" field.
func BillingEmailNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldBillingEmail, vs...))
}

// BillingEmailGT applies the GT predicate on the "billing_email" field.
func BillingEmailGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldBillingEmail, v))
}

// BillingEmailGTE applies the GTE predicate on the "billing_email" field.
func BillingEmailGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldBillingEmail, v))
}

// BillingEmailLT applies the LT predicate on the "billing_email" field.
func BillingEmailLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldBillingEmail, v))
}

// BillingEmailLTE applies the LTE predicate on the "billing_email" field.
func BillingEmailLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldBillingEmail, v))
}

// BillingEmailContains applies the Contains predicate on the "billing_email" field.
func BillingEmailContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldBillingEmail, v))
}

// BillingEmailHasPrefix applies the HasPrefix predicate on the "billing_email" field.
func BillingEmailHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldBillingEmail, v))
}

// BillingEmailHasSuffix applies the HasSuffix predicate on the "billing_email" field.
func BillingEmailHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldBillingEmail, v))
}

// BillingEmailIsNil applies the IsNil predicate on the "billing_email" field.
func BillingEmailIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldBillingEmail))
}

// BillingEmailNotNil applies the NotNil predicate on the "billing_email" field.
func BillingEmailNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldBillingEmail))
}

// BillingEmailEqualFold applies the EqualFold predicate on the "billing_email" field.
func BillingEmailEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldBillingEmail, v))
}

// BillingEmailContainsFold applies the ContainsFold predicate on the "billing_email" field.
func BillingEmailContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldBillingEmail, v))
}

// BillingPhoneEQ applies the EQ predicate on the "billing_phone" field.
func BillingPhoneEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingPhone, v))
}

// BillingPhoneNEQ applies the NEQ predicate on the "billing_phone" field.
func BillingPhoneNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldBillingPhone, v))
}

// BillingPhoneIn applies the In predicate on the "billing_phone" field.
func BillingPhoneIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldBillingPhone, vs...))
}

// BillingPhoneNotIn applies the NotIn predicate on the "billing_phone" field.
func BillingPhoneNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldBillingPhone, vs...))
}

// BillingPhoneGT applies the GT predicate on the "billing_phone" field.
func BillingPhoneGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldBillingPhone, v))
}

// BillingPhoneGTE applies the GTE predicate on the "billing_phone" field.
func BillingPhoneGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldBillingPhone, v))
}

// BillingPhoneLT applies the LT predicate on the "billing_phone" field.
func BillingPhoneLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldBillingPhone, v))
}

// BillingPhoneLTE applies the LTE predicate on the "billing_phone" field.
func BillingPhoneLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldBillingPhone, v))
}

// BillingPhoneContains applies the Contains predicate on the "billing_phone" field.
func BillingPhoneContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldBillingPhone, v))
}

// BillingPhoneHasPrefix applies the HasPrefix predicate on the "billing_phone" field.
func BillingPhoneHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldBillingPhone, v))
}

// BillingPhoneHasSuffix applies the HasSuffix predicate on the "billing_phone" field.
func BillingPhoneHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldBillingPhone, v))
}

// BillingPhoneIsNil applies the IsNil predicate on the "billing_phone" field.
func BillingPhoneIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldBillingPhone))
}

// BillingPhoneNotNil applies the NotNil predicate on the "billing_phone" field.
func BillingPhoneNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldBillingPhone))
}

// BillingPhoneEqualFold applies the EqualFold predicate on the "billing_phone" field.
func BillingPhoneEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldBillingPhone, v))
}

// BillingPhoneContainsFold applies the ContainsFold predicate on the "billing_phone" field.
func BillingPhoneContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldBillingPhone, v))
}

// BillingAddressEQ applies the EQ predicate on the "billing_address" field.
func BillingAddressEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldBillingAddress, v))
}

// BillingAddressNEQ applies the NEQ predicate on the "billing_address" field.
func BillingAddressNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldBillingAddress, v))
}

// BillingAddressIn applies the In predicate on the "billing_address" field.
func BillingAddressIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldBillingAddress, vs...))
}

// BillingAddressNotIn applies the NotIn predicate on the "billing_address" field.
func BillingAddressNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldBillingAddress, vs...))
}

// BillingAddressGT applies the GT predicate on the "billing_address" field.
func BillingAddressGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldBillingAddress, v))
}

// BillingAddressGTE applies the GTE predicate on the "billing_address" field.
func BillingAddressGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldBillingAddress, v))
}

// BillingAddressLT applies the LT predicate on the "billing_address" field.
func BillingAddressLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldBillingAddress, v))
}

// BillingAddressLTE applies the LTE predicate on the "billing_address" field.
func BillingAddressLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldBillingAddress, v))
}

// BillingAddressContains applies the Contains predicate on the "billing_address" field.
func BillingAddressContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldBillingAddress, v))
}

// BillingAddressHasPrefix applies the HasPrefix predicate on the "billing_address" field.
func BillingAddressHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldBillingAddress, v))
}

// BillingAddressHasSuffix applies the HasSuffix predicate on the "billing_address" field.
func BillingAddressHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldBillingAddress, v))
}

// BillingAddressIsNil applies the IsNil predicate on the "billing_address" field.
func BillingAddressIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldBillingAddress))
}

// BillingAddressNotNil applies the NotNil predicate on the "billing_address" field.
func BillingAddressNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldBillingAddress))
}

// BillingAddressEqualFold applies the EqualFold predicate on the "billing_address" field.
func BillingAddressEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldBillingAddress, v))
}

// BillingAddressContainsFold applies the ContainsFold predicate on the "billing_address" field.
func BillingAddressContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldBillingAddress, v))
}

// TaxIdentifierEQ applies the EQ predicate on the "tax_identifier" field.
func TaxIdentifierEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierNEQ applies the NEQ predicate on the "tax_identifier" field.
func TaxIdentifierNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldTaxIdentifier, v))
}

// TaxIdentifierIn applies the In predicate on the "tax_identifier" field.
func TaxIdentifierIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierNotIn applies the NotIn predicate on the "tax_identifier" field.
func TaxIdentifierNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldTaxIdentifier, vs...))
}

// TaxIdentifierGT applies the GT predicate on the "tax_identifier" field.
func TaxIdentifierGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldTaxIdentifier, v))
}

// TaxIdentifierGTE applies the GTE predicate on the "tax_identifier" field.
func TaxIdentifierGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldTaxIdentifier, v))
}

// TaxIdentifierLT applies the LT predicate on the "tax_identifier" field.
func TaxIdentifierLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldTaxIdentifier, v))
}

// TaxIdentifierLTE applies the LTE predicate on the "tax_identifier" field.
func TaxIdentifierLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldTaxIdentifier, v))
}

// TaxIdentifierContains applies the Contains predicate on the "tax_identifier" field.
func TaxIdentifierContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldTaxIdentifier, v))
}

// TaxIdentifierHasPrefix applies the HasPrefix predicate on the "tax_identifier" field.
func TaxIdentifierHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldTaxIdentifier, v))
}

// TaxIdentifierHasSuffix applies the HasSuffix predicate on the "tax_identifier" field.
func TaxIdentifierHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldTaxIdentifier, v))
}

// TaxIdentifierIsNil applies the IsNil predicate on the "tax_identifier" field.
func TaxIdentifierIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldTaxIdentifier))
}

// TaxIdentifierNotNil applies the NotNil predicate on the "tax_identifier" field.
func TaxIdentifierNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldTaxIdentifier))
}

// TaxIdentifierEqualFold applies the EqualFold predicate on the "tax_identifier" field.
func TaxIdentifierEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldTaxIdentifier, v))
}

// TaxIdentifierContainsFold applies the ContainsFold predicate on the "tax_identifier" field.
func TaxIdentifierContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldTaxIdentifier, v))
}

// GeoLocationEQ applies the EQ predicate on the "geo_location" field.
func GeoLocationEQ(v enums.Region) predicate.OrganizationSetting {
	vc := v
	return predicate.OrganizationSetting(sql.FieldEQ(FieldGeoLocation, vc))
}

// GeoLocationNEQ applies the NEQ predicate on the "geo_location" field.
func GeoLocationNEQ(v enums.Region) predicate.OrganizationSetting {
	vc := v
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldGeoLocation, vc))
}

// GeoLocationIn applies the In predicate on the "geo_location" field.
func GeoLocationIn(vs ...enums.Region) predicate.OrganizationSetting {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSetting(sql.FieldIn(FieldGeoLocation, v...))
}

// GeoLocationNotIn applies the NotIn predicate on the "geo_location" field.
func GeoLocationNotIn(vs ...enums.Region) predicate.OrganizationSetting {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldGeoLocation, v...))
}

// GeoLocationIsNil applies the IsNil predicate on the "geo_location" field.
func GeoLocationIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldGeoLocation))
}

// GeoLocationNotNil applies the NotNil predicate on the "geo_location" field.
func GeoLocationNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldGeoLocation))
}

// OrganizationIDEQ applies the EQ predicate on the "organization_id" field.
func OrganizationIDEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldOrganizationID, v))
}

// OrganizationIDNEQ applies the NEQ predicate on the "organization_id" field.
func OrganizationIDNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldOrganizationID, v))
}

// OrganizationIDIn applies the In predicate on the "organization_id" field.
func OrganizationIDIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldOrganizationID, vs...))
}

// OrganizationIDNotIn applies the NotIn predicate on the "organization_id" field.
func OrganizationIDNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldOrganizationID, vs...))
}

// OrganizationIDGT applies the GT predicate on the "organization_id" field.
func OrganizationIDGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldOrganizationID, v))
}

// OrganizationIDGTE applies the GTE predicate on the "organization_id" field.
func OrganizationIDGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldOrganizationID, v))
}

// OrganizationIDLT applies the LT predicate on the "organization_id" field.
func OrganizationIDLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldOrganizationID, v))
}

// OrganizationIDLTE applies the LTE predicate on the "organization_id" field.
func OrganizationIDLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldOrganizationID, v))
}

// OrganizationIDContains applies the Contains predicate on the "organization_id" field.
func OrganizationIDContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldOrganizationID, v))
}

// OrganizationIDHasPrefix applies the HasPrefix predicate on the "organization_id" field.
func OrganizationIDHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldOrganizationID, v))
}

// OrganizationIDHasSuffix applies the HasSuffix predicate on the "organization_id" field.
func OrganizationIDHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldOrganizationID, v))
}

// OrganizationIDIsNil applies the IsNil predicate on the "organization_id" field.
func OrganizationIDIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldOrganizationID))
}

// OrganizationIDNotNil applies the NotNil predicate on the "organization_id" field.
func OrganizationIDNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldOrganizationID))
}

// OrganizationIDEqualFold applies the EqualFold predicate on the "organization_id" field.
func OrganizationIDEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldOrganizationID, v))
}

// OrganizationIDContainsFold applies the ContainsFold predicate on the "organization_id" field.
func OrganizationIDContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldOrganizationID, v))
}

// StripeIDEQ applies the EQ predicate on the "stripe_id" field.
func StripeIDEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEQ(FieldStripeID, v))
}

// StripeIDNEQ applies the NEQ predicate on the "stripe_id" field.
func StripeIDNEQ(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNEQ(FieldStripeID, v))
}

// StripeIDIn applies the In predicate on the "stripe_id" field.
func StripeIDIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIn(FieldStripeID, vs...))
}

// StripeIDNotIn applies the NotIn predicate on the "stripe_id" field.
func StripeIDNotIn(vs ...string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotIn(FieldStripeID, vs...))
}

// StripeIDGT applies the GT predicate on the "stripe_id" field.
func StripeIDGT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGT(FieldStripeID, v))
}

// StripeIDGTE applies the GTE predicate on the "stripe_id" field.
func StripeIDGTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldGTE(FieldStripeID, v))
}

// StripeIDLT applies the LT predicate on the "stripe_id" field.
func StripeIDLT(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLT(FieldStripeID, v))
}

// StripeIDLTE applies the LTE predicate on the "stripe_id" field.
func StripeIDLTE(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldLTE(FieldStripeID, v))
}

// StripeIDContains applies the Contains predicate on the "stripe_id" field.
func StripeIDContains(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContains(FieldStripeID, v))
}

// StripeIDHasPrefix applies the HasPrefix predicate on the "stripe_id" field.
func StripeIDHasPrefix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasPrefix(FieldStripeID, v))
}

// StripeIDHasSuffix applies the HasSuffix predicate on the "stripe_id" field.
func StripeIDHasSuffix(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldHasSuffix(FieldStripeID, v))
}

// StripeIDIsNil applies the IsNil predicate on the "stripe_id" field.
func StripeIDIsNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldIsNull(FieldStripeID))
}

// StripeIDNotNil applies the NotNil predicate on the "stripe_id" field.
func StripeIDNotNil() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldNotNull(FieldStripeID))
}

// StripeIDEqualFold applies the EqualFold predicate on the "stripe_id" field.
func StripeIDEqualFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldEqualFold(FieldStripeID, v))
}

// StripeIDContainsFold applies the ContainsFold predicate on the "stripe_id" field.
func StripeIDContainsFold(v string) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.FieldContainsFold(FieldStripeID, v))
}

// HasOrganization applies the HasEdge predicate on the "organization" edge.
func HasOrganization() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, OrganizationTable, OrganizationColumn),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.Organization
		step.Edge.Schema = schemaConfig.OrganizationSetting
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrganizationWith applies the HasEdge predicate on the "organization" edge with a given conditions (other predicates).
func HasOrganizationWith(preds ...predicate.Organization) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(func(s *sql.Selector) {
		step := newOrganizationStep()
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.Organization
		step.Edge.Schema = schemaConfig.OrganizationSetting
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasFiles applies the HasEdge predicate on the "files" edge.
func HasFiles() predicate.OrganizationSetting {
	return predicate.OrganizationSetting(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, FilesTable, FilesPrimaryKey...),
		)
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.File
		step.Edge.Schema = schemaConfig.OrganizationSettingFiles
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasFilesWith applies the HasEdge predicate on the "files" edge with a given conditions (other predicates).
func HasFilesWith(preds ...predicate.File) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(func(s *sql.Selector) {
		step := newFilesStep()
		schemaConfig := internal.SchemaConfigFromContext(s.Context())
		step.To.Schema = schemaConfig.File
		step.Edge.Schema = schemaConfig.OrganizationSettingFiles
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrganizationSetting) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrganizationSetting) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrganizationSetting) predicate.OrganizationSetting {
	return predicate.OrganizationSetting(sql.NotPredicates(p))
}
