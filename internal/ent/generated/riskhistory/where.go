// Code generated by ent, DO NOT EDIT.

package riskhistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/theopenlane/core/internal/ent/generated/predicate"
	"github.com/theopenlane/core/pkg/enums"
	"github.com/theopenlane/entx/history"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldID, id))
}

// HistoryTime applies equality check predicate on the "history_time" field. It's identical to HistoryTimeEQ.
func HistoryTime(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// Ref applies equality check predicate on the "ref" field. It's identical to RefEQ.
func Ref(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldRef, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// CreatedBy applies equality check predicate on the "created_by" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "updated_by" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedBy applies equality check predicate on the "deleted_by" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DisplayID applies equality check predicate on the "display_id" field. It's identical to DisplayIDEQ.
func DisplayID(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDisplayID, v))
}

// OwnerID applies equality check predicate on the "owner_id" field. It's identical to OwnerIDEQ.
func OwnerID(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldOwnerID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldName, v))
}

// RiskType applies equality check predicate on the "risk_type" field. It's identical to RiskTypeEQ.
func RiskType(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldRiskType, v))
}

// Category applies equality check predicate on the "category" field. It's identical to CategoryEQ.
func Category(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCategory, v))
}

// Score applies equality check predicate on the "score" field. It's identical to ScoreEQ.
func Score(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldScore, v))
}

// Mitigation applies equality check predicate on the "mitigation" field. It's identical to MitigationEQ.
func Mitigation(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldMitigation, v))
}

// Details applies equality check predicate on the "details" field. It's identical to DetailsEQ.
func Details(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDetails, v))
}

// BusinessCosts applies equality check predicate on the "business_costs" field. It's identical to BusinessCostsEQ.
func BusinessCosts(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldBusinessCosts, v))
}

// StakeholderID applies equality check predicate on the "stakeholder_id" field. It's identical to StakeholderIDEQ.
func StakeholderID(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldStakeholderID, v))
}

// DelegateID applies equality check predicate on the "delegate_id" field. It's identical to DelegateIDEQ.
func DelegateID(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDelegateID, v))
}

// HistoryTimeEQ applies the EQ predicate on the "history_time" field.
func HistoryTimeEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldHistoryTime, v))
}

// HistoryTimeNEQ applies the NEQ predicate on the "history_time" field.
func HistoryTimeNEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldHistoryTime, v))
}

// HistoryTimeIn applies the In predicate on the "history_time" field.
func HistoryTimeIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldHistoryTime, vs...))
}

// HistoryTimeNotIn applies the NotIn predicate on the "history_time" field.
func HistoryTimeNotIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldHistoryTime, vs...))
}

// HistoryTimeGT applies the GT predicate on the "history_time" field.
func HistoryTimeGT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldHistoryTime, v))
}

// HistoryTimeGTE applies the GTE predicate on the "history_time" field.
func HistoryTimeGTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldHistoryTime, v))
}

// HistoryTimeLT applies the LT predicate on the "history_time" field.
func HistoryTimeLT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldHistoryTime, v))
}

// HistoryTimeLTE applies the LTE predicate on the "history_time" field.
func HistoryTimeLTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldHistoryTime, v))
}

// RefEQ applies the EQ predicate on the "ref" field.
func RefEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldRef, v))
}

// RefNEQ applies the NEQ predicate on the "ref" field.
func RefNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldRef, v))
}

// RefIn applies the In predicate on the "ref" field.
func RefIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldRef, vs...))
}

// RefNotIn applies the NotIn predicate on the "ref" field.
func RefNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldRef, vs...))
}

// RefGT applies the GT predicate on the "ref" field.
func RefGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldRef, v))
}

// RefGTE applies the GTE predicate on the "ref" field.
func RefGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldRef, v))
}

// RefLT applies the LT predicate on the "ref" field.
func RefLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldRef, v))
}

// RefLTE applies the LTE predicate on the "ref" field.
func RefLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldRef, v))
}

// RefContains applies the Contains predicate on the "ref" field.
func RefContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldRef, v))
}

// RefHasPrefix applies the HasPrefix predicate on the "ref" field.
func RefHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldRef, v))
}

// RefHasSuffix applies the HasSuffix predicate on the "ref" field.
func RefHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldRef, v))
}

// RefIsNil applies the IsNil predicate on the "ref" field.
func RefIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldRef))
}

// RefNotNil applies the NotNil predicate on the "ref" field.
func RefNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldRef))
}

// RefEqualFold applies the EqualFold predicate on the "ref" field.
func RefEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldRef, v))
}

// RefContainsFold applies the ContainsFold predicate on the "ref" field.
func RefContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldRef, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v history.OpType) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v history.OpType) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...history.OpType) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...history.OpType) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldOperation, vs...))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// CreatedByEQ applies the EQ predicate on the "created_by" field.
func CreatedByEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "created_by" field.
func CreatedByNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "created_by" field.
func CreatedByIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "created_by" field.
func CreatedByNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "created_by" field.
func CreatedByGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "created_by" field.
func CreatedByGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "created_by" field.
func CreatedByLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "created_by" field.
func CreatedByLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "created_by" field.
func CreatedByContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "created_by" field.
func CreatedByHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "created_by" field.
func CreatedByHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "created_by" field.
func CreatedByIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "created_by" field.
func CreatedByNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "created_by" field.
func CreatedByEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "created_by" field.
func CreatedByContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "updated_by" field.
func UpdatedByEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "updated_by" field.
func UpdatedByNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "updated_by" field.
func UpdatedByIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "updated_by" field.
func UpdatedByNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "updated_by" field.
func UpdatedByGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "updated_by" field.
func UpdatedByGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "updated_by" field.
func UpdatedByLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "updated_by" field.
func UpdatedByLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "updated_by" field.
func UpdatedByContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "updated_by" field.
func UpdatedByHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "updated_by" field.
func UpdatedByHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "updated_by" field.
func UpdatedByIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "updated_by" field.
func UpdatedByNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "updated_by" field.
func UpdatedByEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "updated_by" field.
func UpdatedByContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldDeletedAt))
}

// DeletedByEQ applies the EQ predicate on the "deleted_by" field.
func DeletedByEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "deleted_by" field.
func DeletedByNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "deleted_by" field.
func DeletedByIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "deleted_by" field.
func DeletedByNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "deleted_by" field.
func DeletedByGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "deleted_by" field.
func DeletedByGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "deleted_by" field.
func DeletedByLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "deleted_by" field.
func DeletedByLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "deleted_by" field.
func DeletedByContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "deleted_by" field.
func DeletedByHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "deleted_by" field.
func DeletedByHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "deleted_by" field.
func DeletedByIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "deleted_by" field.
func DeletedByNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "deleted_by" field.
func DeletedByEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "deleted_by" field.
func DeletedByContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldDeletedBy, v))
}

// DisplayIDEQ applies the EQ predicate on the "display_id" field.
func DisplayIDEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDisplayID, v))
}

// DisplayIDNEQ applies the NEQ predicate on the "display_id" field.
func DisplayIDNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldDisplayID, v))
}

// DisplayIDIn applies the In predicate on the "display_id" field.
func DisplayIDIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldDisplayID, vs...))
}

// DisplayIDNotIn applies the NotIn predicate on the "display_id" field.
func DisplayIDNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldDisplayID, vs...))
}

// DisplayIDGT applies the GT predicate on the "display_id" field.
func DisplayIDGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldDisplayID, v))
}

// DisplayIDGTE applies the GTE predicate on the "display_id" field.
func DisplayIDGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldDisplayID, v))
}

// DisplayIDLT applies the LT predicate on the "display_id" field.
func DisplayIDLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldDisplayID, v))
}

// DisplayIDLTE applies the LTE predicate on the "display_id" field.
func DisplayIDLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldDisplayID, v))
}

// DisplayIDContains applies the Contains predicate on the "display_id" field.
func DisplayIDContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldDisplayID, v))
}

// DisplayIDHasPrefix applies the HasPrefix predicate on the "display_id" field.
func DisplayIDHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldDisplayID, v))
}

// DisplayIDHasSuffix applies the HasSuffix predicate on the "display_id" field.
func DisplayIDHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldDisplayID, v))
}

// DisplayIDEqualFold applies the EqualFold predicate on the "display_id" field.
func DisplayIDEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldDisplayID, v))
}

// DisplayIDContainsFold applies the ContainsFold predicate on the "display_id" field.
func DisplayIDContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldDisplayID, v))
}

// TagsIsNil applies the IsNil predicate on the "tags" field.
func TagsIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldTags))
}

// TagsNotNil applies the NotNil predicate on the "tags" field.
func TagsNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldTags))
}

// OwnerIDEQ applies the EQ predicate on the "owner_id" field.
func OwnerIDEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldOwnerID, v))
}

// OwnerIDNEQ applies the NEQ predicate on the "owner_id" field.
func OwnerIDNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldOwnerID, v))
}

// OwnerIDIn applies the In predicate on the "owner_id" field.
func OwnerIDIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldOwnerID, vs...))
}

// OwnerIDNotIn applies the NotIn predicate on the "owner_id" field.
func OwnerIDNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldOwnerID, vs...))
}

// OwnerIDGT applies the GT predicate on the "owner_id" field.
func OwnerIDGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldOwnerID, v))
}

// OwnerIDGTE applies the GTE predicate on the "owner_id" field.
func OwnerIDGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldOwnerID, v))
}

// OwnerIDLT applies the LT predicate on the "owner_id" field.
func OwnerIDLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldOwnerID, v))
}

// OwnerIDLTE applies the LTE predicate on the "owner_id" field.
func OwnerIDLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldOwnerID, v))
}

// OwnerIDContains applies the Contains predicate on the "owner_id" field.
func OwnerIDContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldOwnerID, v))
}

// OwnerIDHasPrefix applies the HasPrefix predicate on the "owner_id" field.
func OwnerIDHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldOwnerID, v))
}

// OwnerIDHasSuffix applies the HasSuffix predicate on the "owner_id" field.
func OwnerIDHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldOwnerID, v))
}

// OwnerIDIsNil applies the IsNil predicate on the "owner_id" field.
func OwnerIDIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldOwnerID))
}

// OwnerIDNotNil applies the NotNil predicate on the "owner_id" field.
func OwnerIDNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldOwnerID))
}

// OwnerIDEqualFold applies the EqualFold predicate on the "owner_id" field.
func OwnerIDEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldOwnerID, v))
}

// OwnerIDContainsFold applies the ContainsFold predicate on the "owner_id" field.
func OwnerIDContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldOwnerID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldName, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v enums.RiskStatus) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v enums.RiskStatus) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...enums.RiskStatus) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...enums.RiskStatus) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldNotIn(FieldStatus, v...))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldStatus))
}

// RiskTypeEQ applies the EQ predicate on the "risk_type" field.
func RiskTypeEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldRiskType, v))
}

// RiskTypeNEQ applies the NEQ predicate on the "risk_type" field.
func RiskTypeNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldRiskType, v))
}

// RiskTypeIn applies the In predicate on the "risk_type" field.
func RiskTypeIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldRiskType, vs...))
}

// RiskTypeNotIn applies the NotIn predicate on the "risk_type" field.
func RiskTypeNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldRiskType, vs...))
}

// RiskTypeGT applies the GT predicate on the "risk_type" field.
func RiskTypeGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldRiskType, v))
}

// RiskTypeGTE applies the GTE predicate on the "risk_type" field.
func RiskTypeGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldRiskType, v))
}

// RiskTypeLT applies the LT predicate on the "risk_type" field.
func RiskTypeLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldRiskType, v))
}

// RiskTypeLTE applies the LTE predicate on the "risk_type" field.
func RiskTypeLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldRiskType, v))
}

// RiskTypeContains applies the Contains predicate on the "risk_type" field.
func RiskTypeContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldRiskType, v))
}

// RiskTypeHasPrefix applies the HasPrefix predicate on the "risk_type" field.
func RiskTypeHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldRiskType, v))
}

// RiskTypeHasSuffix applies the HasSuffix predicate on the "risk_type" field.
func RiskTypeHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldRiskType, v))
}

// RiskTypeIsNil applies the IsNil predicate on the "risk_type" field.
func RiskTypeIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldRiskType))
}

// RiskTypeNotNil applies the NotNil predicate on the "risk_type" field.
func RiskTypeNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldRiskType))
}

// RiskTypeEqualFold applies the EqualFold predicate on the "risk_type" field.
func RiskTypeEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldRiskType, v))
}

// RiskTypeContainsFold applies the ContainsFold predicate on the "risk_type" field.
func RiskTypeContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldRiskType, v))
}

// CategoryEQ applies the EQ predicate on the "category" field.
func CategoryEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldCategory, v))
}

// CategoryNEQ applies the NEQ predicate on the "category" field.
func CategoryNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldCategory, v))
}

// CategoryIn applies the In predicate on the "category" field.
func CategoryIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldCategory, vs...))
}

// CategoryNotIn applies the NotIn predicate on the "category" field.
func CategoryNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldCategory, vs...))
}

// CategoryGT applies the GT predicate on the "category" field.
func CategoryGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldCategory, v))
}

// CategoryGTE applies the GTE predicate on the "category" field.
func CategoryGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldCategory, v))
}

// CategoryLT applies the LT predicate on the "category" field.
func CategoryLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldCategory, v))
}

// CategoryLTE applies the LTE predicate on the "category" field.
func CategoryLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldCategory, v))
}

// CategoryContains applies the Contains predicate on the "category" field.
func CategoryContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldCategory, v))
}

// CategoryHasPrefix applies the HasPrefix predicate on the "category" field.
func CategoryHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldCategory, v))
}

// CategoryHasSuffix applies the HasSuffix predicate on the "category" field.
func CategoryHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldCategory, v))
}

// CategoryIsNil applies the IsNil predicate on the "category" field.
func CategoryIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldCategory))
}

// CategoryNotNil applies the NotNil predicate on the "category" field.
func CategoryNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldCategory))
}

// CategoryEqualFold applies the EqualFold predicate on the "category" field.
func CategoryEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldCategory, v))
}

// CategoryContainsFold applies the ContainsFold predicate on the "category" field.
func CategoryContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldCategory, v))
}

// ImpactEQ applies the EQ predicate on the "impact" field.
func ImpactEQ(v enums.RiskImpact) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldEQ(FieldImpact, vc))
}

// ImpactNEQ applies the NEQ predicate on the "impact" field.
func ImpactNEQ(v enums.RiskImpact) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldNEQ(FieldImpact, vc))
}

// ImpactIn applies the In predicate on the "impact" field.
func ImpactIn(vs ...enums.RiskImpact) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldIn(FieldImpact, v...))
}

// ImpactNotIn applies the NotIn predicate on the "impact" field.
func ImpactNotIn(vs ...enums.RiskImpact) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldNotIn(FieldImpact, v...))
}

// ImpactIsNil applies the IsNil predicate on the "impact" field.
func ImpactIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldImpact))
}

// ImpactNotNil applies the NotNil predicate on the "impact" field.
func ImpactNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldImpact))
}

// LikelihoodEQ applies the EQ predicate on the "likelihood" field.
func LikelihoodEQ(v enums.RiskLikelihood) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldEQ(FieldLikelihood, vc))
}

// LikelihoodNEQ applies the NEQ predicate on the "likelihood" field.
func LikelihoodNEQ(v enums.RiskLikelihood) predicate.RiskHistory {
	vc := v
	return predicate.RiskHistory(sql.FieldNEQ(FieldLikelihood, vc))
}

// LikelihoodIn applies the In predicate on the "likelihood" field.
func LikelihoodIn(vs ...enums.RiskLikelihood) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldIn(FieldLikelihood, v...))
}

// LikelihoodNotIn applies the NotIn predicate on the "likelihood" field.
func LikelihoodNotIn(vs ...enums.RiskLikelihood) predicate.RiskHistory {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.RiskHistory(sql.FieldNotIn(FieldLikelihood, v...))
}

// LikelihoodIsNil applies the IsNil predicate on the "likelihood" field.
func LikelihoodIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldLikelihood))
}

// LikelihoodNotNil applies the NotNil predicate on the "likelihood" field.
func LikelihoodNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldLikelihood))
}

// ScoreEQ applies the EQ predicate on the "score" field.
func ScoreEQ(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldScore, v))
}

// ScoreNEQ applies the NEQ predicate on the "score" field.
func ScoreNEQ(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldScore, v))
}

// ScoreIn applies the In predicate on the "score" field.
func ScoreIn(vs ...int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldScore, vs...))
}

// ScoreNotIn applies the NotIn predicate on the "score" field.
func ScoreNotIn(vs ...int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldScore, vs...))
}

// ScoreGT applies the GT predicate on the "score" field.
func ScoreGT(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldScore, v))
}

// ScoreGTE applies the GTE predicate on the "score" field.
func ScoreGTE(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldScore, v))
}

// ScoreLT applies the LT predicate on the "score" field.
func ScoreLT(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldScore, v))
}

// ScoreLTE applies the LTE predicate on the "score" field.
func ScoreLTE(v int) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldScore, v))
}

// ScoreIsNil applies the IsNil predicate on the "score" field.
func ScoreIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldScore))
}

// ScoreNotNil applies the NotNil predicate on the "score" field.
func ScoreNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldScore))
}

// MitigationEQ applies the EQ predicate on the "mitigation" field.
func MitigationEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldMitigation, v))
}

// MitigationNEQ applies the NEQ predicate on the "mitigation" field.
func MitigationNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldMitigation, v))
}

// MitigationIn applies the In predicate on the "mitigation" field.
func MitigationIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldMitigation, vs...))
}

// MitigationNotIn applies the NotIn predicate on the "mitigation" field.
func MitigationNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldMitigation, vs...))
}

// MitigationGT applies the GT predicate on the "mitigation" field.
func MitigationGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldMitigation, v))
}

// MitigationGTE applies the GTE predicate on the "mitigation" field.
func MitigationGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldMitigation, v))
}

// MitigationLT applies the LT predicate on the "mitigation" field.
func MitigationLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldMitigation, v))
}

// MitigationLTE applies the LTE predicate on the "mitigation" field.
func MitigationLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldMitigation, v))
}

// MitigationContains applies the Contains predicate on the "mitigation" field.
func MitigationContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldMitigation, v))
}

// MitigationHasPrefix applies the HasPrefix predicate on the "mitigation" field.
func MitigationHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldMitigation, v))
}

// MitigationHasSuffix applies the HasSuffix predicate on the "mitigation" field.
func MitigationHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldMitigation, v))
}

// MitigationIsNil applies the IsNil predicate on the "mitigation" field.
func MitigationIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldMitigation))
}

// MitigationNotNil applies the NotNil predicate on the "mitigation" field.
func MitigationNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldMitigation))
}

// MitigationEqualFold applies the EqualFold predicate on the "mitigation" field.
func MitigationEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldMitigation, v))
}

// MitigationContainsFold applies the ContainsFold predicate on the "mitigation" field.
func MitigationContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldMitigation, v))
}

// DetailsEQ applies the EQ predicate on the "details" field.
func DetailsEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDetails, v))
}

// DetailsNEQ applies the NEQ predicate on the "details" field.
func DetailsNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldDetails, v))
}

// DetailsIn applies the In predicate on the "details" field.
func DetailsIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldDetails, vs...))
}

// DetailsNotIn applies the NotIn predicate on the "details" field.
func DetailsNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldDetails, vs...))
}

// DetailsGT applies the GT predicate on the "details" field.
func DetailsGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldDetails, v))
}

// DetailsGTE applies the GTE predicate on the "details" field.
func DetailsGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldDetails, v))
}

// DetailsLT applies the LT predicate on the "details" field.
func DetailsLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldDetails, v))
}

// DetailsLTE applies the LTE predicate on the "details" field.
func DetailsLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldDetails, v))
}

// DetailsContains applies the Contains predicate on the "details" field.
func DetailsContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldDetails, v))
}

// DetailsHasPrefix applies the HasPrefix predicate on the "details" field.
func DetailsHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldDetails, v))
}

// DetailsHasSuffix applies the HasSuffix predicate on the "details" field.
func DetailsHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldDetails, v))
}

// DetailsIsNil applies the IsNil predicate on the "details" field.
func DetailsIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldDetails))
}

// DetailsNotNil applies the NotNil predicate on the "details" field.
func DetailsNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldDetails))
}

// DetailsEqualFold applies the EqualFold predicate on the "details" field.
func DetailsEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldDetails, v))
}

// DetailsContainsFold applies the ContainsFold predicate on the "details" field.
func DetailsContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldDetails, v))
}

// BusinessCostsEQ applies the EQ predicate on the "business_costs" field.
func BusinessCostsEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldBusinessCosts, v))
}

// BusinessCostsNEQ applies the NEQ predicate on the "business_costs" field.
func BusinessCostsNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldBusinessCosts, v))
}

// BusinessCostsIn applies the In predicate on the "business_costs" field.
func BusinessCostsIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldBusinessCosts, vs...))
}

// BusinessCostsNotIn applies the NotIn predicate on the "business_costs" field.
func BusinessCostsNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldBusinessCosts, vs...))
}

// BusinessCostsGT applies the GT predicate on the "business_costs" field.
func BusinessCostsGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldBusinessCosts, v))
}

// BusinessCostsGTE applies the GTE predicate on the "business_costs" field.
func BusinessCostsGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldBusinessCosts, v))
}

// BusinessCostsLT applies the LT predicate on the "business_costs" field.
func BusinessCostsLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldBusinessCosts, v))
}

// BusinessCostsLTE applies the LTE predicate on the "business_costs" field.
func BusinessCostsLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldBusinessCosts, v))
}

// BusinessCostsContains applies the Contains predicate on the "business_costs" field.
func BusinessCostsContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldBusinessCosts, v))
}

// BusinessCostsHasPrefix applies the HasPrefix predicate on the "business_costs" field.
func BusinessCostsHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldBusinessCosts, v))
}

// BusinessCostsHasSuffix applies the HasSuffix predicate on the "business_costs" field.
func BusinessCostsHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldBusinessCosts, v))
}

// BusinessCostsIsNil applies the IsNil predicate on the "business_costs" field.
func BusinessCostsIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldBusinessCosts))
}

// BusinessCostsNotNil applies the NotNil predicate on the "business_costs" field.
func BusinessCostsNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldBusinessCosts))
}

// BusinessCostsEqualFold applies the EqualFold predicate on the "business_costs" field.
func BusinessCostsEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldBusinessCosts, v))
}

// BusinessCostsContainsFold applies the ContainsFold predicate on the "business_costs" field.
func BusinessCostsContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldBusinessCosts, v))
}

// StakeholderIDEQ applies the EQ predicate on the "stakeholder_id" field.
func StakeholderIDEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldStakeholderID, v))
}

// StakeholderIDNEQ applies the NEQ predicate on the "stakeholder_id" field.
func StakeholderIDNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldStakeholderID, v))
}

// StakeholderIDIn applies the In predicate on the "stakeholder_id" field.
func StakeholderIDIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldStakeholderID, vs...))
}

// StakeholderIDNotIn applies the NotIn predicate on the "stakeholder_id" field.
func StakeholderIDNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldStakeholderID, vs...))
}

// StakeholderIDGT applies the GT predicate on the "stakeholder_id" field.
func StakeholderIDGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldStakeholderID, v))
}

// StakeholderIDGTE applies the GTE predicate on the "stakeholder_id" field.
func StakeholderIDGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldStakeholderID, v))
}

// StakeholderIDLT applies the LT predicate on the "stakeholder_id" field.
func StakeholderIDLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldStakeholderID, v))
}

// StakeholderIDLTE applies the LTE predicate on the "stakeholder_id" field.
func StakeholderIDLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldStakeholderID, v))
}

// StakeholderIDContains applies the Contains predicate on the "stakeholder_id" field.
func StakeholderIDContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldStakeholderID, v))
}

// StakeholderIDHasPrefix applies the HasPrefix predicate on the "stakeholder_id" field.
func StakeholderIDHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldStakeholderID, v))
}

// StakeholderIDHasSuffix applies the HasSuffix predicate on the "stakeholder_id" field.
func StakeholderIDHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldStakeholderID, v))
}

// StakeholderIDIsNil applies the IsNil predicate on the "stakeholder_id" field.
func StakeholderIDIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldStakeholderID))
}

// StakeholderIDNotNil applies the NotNil predicate on the "stakeholder_id" field.
func StakeholderIDNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldStakeholderID))
}

// StakeholderIDEqualFold applies the EqualFold predicate on the "stakeholder_id" field.
func StakeholderIDEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldStakeholderID, v))
}

// StakeholderIDContainsFold applies the ContainsFold predicate on the "stakeholder_id" field.
func StakeholderIDContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldStakeholderID, v))
}

// DelegateIDEQ applies the EQ predicate on the "delegate_id" field.
func DelegateIDEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEQ(FieldDelegateID, v))
}

// DelegateIDNEQ applies the NEQ predicate on the "delegate_id" field.
func DelegateIDNEQ(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNEQ(FieldDelegateID, v))
}

// DelegateIDIn applies the In predicate on the "delegate_id" field.
func DelegateIDIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIn(FieldDelegateID, vs...))
}

// DelegateIDNotIn applies the NotIn predicate on the "delegate_id" field.
func DelegateIDNotIn(vs ...string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotIn(FieldDelegateID, vs...))
}

// DelegateIDGT applies the GT predicate on the "delegate_id" field.
func DelegateIDGT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGT(FieldDelegateID, v))
}

// DelegateIDGTE applies the GTE predicate on the "delegate_id" field.
func DelegateIDGTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldGTE(FieldDelegateID, v))
}

// DelegateIDLT applies the LT predicate on the "delegate_id" field.
func DelegateIDLT(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLT(FieldDelegateID, v))
}

// DelegateIDLTE applies the LTE predicate on the "delegate_id" field.
func DelegateIDLTE(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldLTE(FieldDelegateID, v))
}

// DelegateIDContains applies the Contains predicate on the "delegate_id" field.
func DelegateIDContains(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContains(FieldDelegateID, v))
}

// DelegateIDHasPrefix applies the HasPrefix predicate on the "delegate_id" field.
func DelegateIDHasPrefix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasPrefix(FieldDelegateID, v))
}

// DelegateIDHasSuffix applies the HasSuffix predicate on the "delegate_id" field.
func DelegateIDHasSuffix(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldHasSuffix(FieldDelegateID, v))
}

// DelegateIDIsNil applies the IsNil predicate on the "delegate_id" field.
func DelegateIDIsNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldIsNull(FieldDelegateID))
}

// DelegateIDNotNil applies the NotNil predicate on the "delegate_id" field.
func DelegateIDNotNil() predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldNotNull(FieldDelegateID))
}

// DelegateIDEqualFold applies the EqualFold predicate on the "delegate_id" field.
func DelegateIDEqualFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldEqualFold(FieldDelegateID, v))
}

// DelegateIDContainsFold applies the ContainsFold predicate on the "delegate_id" field.
func DelegateIDContainsFold(v string) predicate.RiskHistory {
	return predicate.RiskHistory(sql.FieldContainsFold(FieldDelegateID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RiskHistory) predicate.RiskHistory {
	return predicate.RiskHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RiskHistory) predicate.RiskHistory {
	return predicate.RiskHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RiskHistory) predicate.RiskHistory {
	return predicate.RiskHistory(sql.NotPredicates(p))
}
