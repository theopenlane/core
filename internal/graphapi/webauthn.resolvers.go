package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/theopenlane/core/internal/ent/generated"
	"github.com/theopenlane/core/internal/graphapi/model"
)

// DeleteWebauthn is the resolver for the deleteWebauthn field.
func (r *mutationResolver) DeleteWebauthn(ctx context.Context, id string) (*model.WebauthnDeletePayload, error) {
	if err := withTransactionalMutation(ctx).Webauthn.DeleteOneID(id).Exec(ctx); err != nil {
		return nil, parseRequestError(err, action{action: ActionDelete, object: "webauthn"})
	}

	if err := generated.WebauthnEdgeCleanup(ctx, id); err != nil {
		return nil, newCascadeDeleteError(err)
	}

	return &model.WebauthnDeletePayload{
		DeletedID: id,
	}, nil
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateWebauthn(ctx context.Context, input generated.CreateWebauthnInput) (*model.WebauthnCreatePayload, error) {
	return nil, rout.ErrPermissionDenied
}
func (r *mutationResolver) CreateBulkWebauthn(ctx context.Context, input []*generated.CreateWebauthnInput) (*model.WebauthnBulkCreatePayload, error) {
	return nil, rout.ErrPermissionDenied
}
func (r *mutationResolver) CreateBulkCSVWebauthn(ctx context.Context, input graphql.Upload) (*model.WebauthnBulkCreatePayload, error) {
	return nil, rout.ErrPermissionDenied
}
func (r *mutationResolver) UpdateWebauthn(ctx context.Context, id string, input generated.UpdateWebauthnInput) (*model.WebauthnUpdatePayload, error) {
	return nil, rout.ErrPermissionDenied
}
func (r *queryResolver) Webauthn(ctx context.Context, id string) (*generated.Webauthn, error) {
	return nil, rout.ErrPermissionDenied
}
*/
