package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/theopenlane/core/internal/ent/generated"
	"github.com/theopenlane/core/pkg/models"
)

// RevisionBump is the resolver for the RevisionBump field.
func (r *updateActionPlanInputResolver) RevisionBump(ctx context.Context, obj *generated.UpdateActionPlanInput, data *models.VersionBump) error {
	if data == nil {
		return nil
	}

	models.WithVersionBumpRequestContext(ctx, data)

	return nil
}

// RevisionBump is the resolver for the RevisionBump field.
func (r *updateControlObjectiveInputResolver) RevisionBump(ctx context.Context, obj *generated.UpdateControlObjectiveInput, data *models.VersionBump) error {
	if data == nil {
		return nil
	}

	models.WithVersionBumpRequestContext(ctx, data)

	return nil
}

// RevisionBump is the resolver for the RevisionBump field.
func (r *updateInternalPolicyInputResolver) RevisionBump(ctx context.Context, obj *generated.UpdateInternalPolicyInput, data *models.VersionBump) error {
	if data == nil {
		return nil
	}

	models.WithVersionBumpRequestContext(ctx, data)

	return nil
}

// RevisionBump is the resolver for the RevisionBump field.
func (r *updateProcedureInputResolver) RevisionBump(ctx context.Context, obj *generated.UpdateProcedureInput, data *models.VersionBump) error {
	if data == nil {
		return nil
	}

	models.WithVersionBumpRequestContext(ctx, data)

	return nil
}

// RevisionBump is the resolver for the RevisionBump field.
func (r *updateStandardInputResolver) RevisionBump(ctx context.Context, obj *generated.UpdateStandardInput, data *models.VersionBump) error {
	if data == nil {
		return nil
	}

	models.WithVersionBumpRequestContext(ctx, data)

	return nil
}
