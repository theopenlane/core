package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"entgo.io/contrib/entgql"
	"github.com/theopenlane/core/internal/ent/generated"
)

// AuditLogs is the resolver for the auditLogs field.
func (r *queryResolver) AuditLogs(ctx context.Context, after *entgql.Cursor[string], first *int, before *entgql.Cursor[string], last *int, where *generated.AuditLogWhereInput, orderBy []*generated.AuditLogOrder) (*generated.AuditLogConnection, error) {
	var (
		auditLogs *generated.AuditLogConnection
		err       error
	)

	auditLogs, err = withTransactionalMutation(ctx).AuditWithFilter(ctx, after, first, before, last, where, nil)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionGet, object: "audit logs"})
	}

	return auditLogs, nil
}
