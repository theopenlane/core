
mutation CreateBulkCSVRisk($input: Upload!) {
  createBulkCSVRisk(input: $input) {
    risks {
      businessCosts
      category
      createdAt
      createdBy
      delegateID
      details
      displayID
      id
      impact
      likelihood
      mitigation
      name
      ownerID
      riskType
      score
      stakeholderID
      status
      tags
      updatedAt
      updatedBy
    }
  }
}

mutation CreateBulkRisk($input: [CreateRiskInput!]) {
  createBulkRisk(input: $input) {
    risks {
      businessCosts
      category
      createdAt
      createdBy
      delegateID
      details
      displayID
      id
      impact
      likelihood
      mitigation
      name
      ownerID
      riskType
      score
      stakeholderID
      status
      tags
      updatedAt
      updatedBy
    }
  }
}

mutation CreateRisk($input: CreateRiskInput!) {
  createRisk(input: $input) {
    risk {
      businessCosts
      category
      createdAt
      createdBy
      delegateID
      details
      displayID
      id
      impact
      likelihood
      mitigation
      name
      ownerID
      riskType
      score
      stakeholderID
      status
      tags
      updatedAt
      updatedBy
    }
  }
}

mutation DeleteRisk($deleteRiskId: ID!) {
  deleteRisk(id: $deleteRiskId) {
    deletedID
  }
}

query GetAllRisks {
  risks {
    totalCount
    pageInfo {
      startCursor
      endCursor
      hasPreviousPage
      hasNextPage
    }
    edges {
      node {
        businessCosts
        category
        createdAt
        createdBy
        delegateID
        details
        displayID
        id
        impact
        likelihood
        mitigation
        name
        ownerID
        riskType
        score
        stakeholderID
        status
        tags
        updatedAt
        updatedBy
      }
    }
  }
}
query GetRiskByID($riskId: ID!) {
  risk(id: $riskId) {
    businessCosts
    category
    createdAt
    createdBy
    delegateID
    details
    displayID
    id
    impact
    likelihood
    mitigation
    name
    ownerID
    riskType
    score
    stakeholderID
    status
    tags
    updatedAt
    updatedBy
  }
}

query GetRisks($first: Int, $last: Int, $where: RiskWhereInput) {
  risks(first: $first, last: $last, where: $where) {
    totalCount
    pageInfo {
      startCursor
      endCursor
      hasPreviousPage
      hasNextPage
    }
    edges {
      node {
        businessCosts
        category
        createdAt
        createdBy
        delegateID
        details
        displayID
        id
        impact
        likelihood
        mitigation
        name
        ownerID
        riskType
        score
        stakeholderID
        status
        tags
        updatedAt
        updatedBy
      }
    }
  }
}
mutation UpdateRisk($updateRiskId: ID!, $input: UpdateRiskInput!) {
  updateRisk(id: $updateRiskId, input: $input) {
    risk {
      businessCosts
      category
      createdAt
      createdBy
      delegateID
      details
      displayID
      id
      impact
      likelihood
      mitigation
      name
      ownerID
      riskType
      score
      stakeholderID
      status
      tags
      updatedAt
      updatedBy
    }
  }
}
