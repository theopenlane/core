package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
	"github.com/rs/zerolog/log"
	"github.com/theopenlane/core/internal/ent/generated"
)

// AddProgramMembers is the resolver for the addProgramMembers field.
func (r *updateProgramInputResolver) AddProgramMembers(ctx context.Context, obj *generated.UpdateProgramInput, data []*generated.CreateProgramMembershipInput) error {
	opCtx := graphql.GetOperationContext(ctx)
	programID, ok := opCtx.Variables["updateProgramId"]
	if !ok {
		log.Error().Msg("unable to get program from context")

		return ErrInternalServerError
	}

	c := withTransactionalMutation(ctx)
	builders := make([]*generated.ProgramMembershipCreate, len(data))
	for i := range data {
		input := *data[i]
		input.ProgramID = programID.(string)
		builders[i] = c.ProgramMembership.Create().SetInput(input)
	}

	_, err := c.ProgramMembership.CreateBulk(builders...).Save(ctx)
	if err != nil {
		return err
	}

	return nil
}
