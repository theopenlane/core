extend input CreateOrganizationInput {
  createOrgSettings: CreateOrganizationSettingInput
}

extend input UpdateOrganizationInput {
  addOrgMembers: [CreateOrgMembershipInput!]
  removeOrgMembers: [ID!]
  updateOrgSettings: UpdateOrganizationSettingInput
}

extend input OrgMembershipWhereInput {
  organizationID: String
  userID: String
}

"""
OrgMembersInput is used to create members for a organization
along with the org creation
"""
input OrgMembersInput {
  role: OrgMembershipRole
  userID: ID!
}

extend type Mutation{
    """
    Create a new organization with members
    """
    createOrganizationWithMembers(
        """
        values of the new organization to be created
        """
        organizationInput: CreateOrganizationInput!
        """
        avatar file to Upload
        """
        avatarFile: Upload
        """
        organization members to be added to the new org
        """
        members: [OrgMembersInput!]
    ): OrganizationCreatePayload!
    """
    Transfer ownership of an organization to another user
    """
    transferOrganizationOwnership(
        """
        Email of the new owner
        """
        newOwnerEmail: String!
    ): OrganizationTransferOwnershipPayload!
}

"""
Return response for transferOrganizationOwnership mutation
"""
type OrganizationTransferOwnershipPayload {
    """
    Updated organization
    """
    organization: Organization!
    """
    Whether an invitation was sent (true if new owner wasn't a member)
    """
    invitationSent: Boolean!
}