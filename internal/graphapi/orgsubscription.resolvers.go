package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"

	"github.com/theopenlane/core/internal/ent/generated"
	"github.com/theopenlane/core/internal/ent/generated/orgsubscription"
)

// OrgSubscription is the resolver for the orgSubscription field.
func (r *queryResolver) OrgSubscription(ctx context.Context, id string) (*generated.OrgSubscription, error) {
	query, err := withTransactionalMutation(ctx).OrgSubscription.Query().Where(orgsubscription.ID(id)).CollectFields(ctx)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionGet, object: "orgsubscription"})
	}

	res, err := query.Only(ctx)
	if err != nil {
		return nil, parseRequestError(err, action{action: ActionGet, object: "orgsubscription"})
	}

	return res, nil
}
